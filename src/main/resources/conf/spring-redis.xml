<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd      
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
                        http://www.springframework.org/schema/cache   
                        http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">   
      
<!--     <context:property-placeholder location="classpath:conf/redis-config.properties" />
 -->  
    <!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->    
    <cache:annotation-driven cache-manager="cacheRedisCacheManager" />
      
     <!-- redis 相关配置 -->    
     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">    
         <property name="maxIdle" value="${redis.maxIdle}" />     
         <property name="MaxWaitMillis" value="${redis.maxWait}" />    
         <property name="testOnBorrow" value="${redis.testOnBorrow}" />    
     </bean>    
  	
  	<bean id="apiRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="JedisConnectionFactory">
        <property name="keySerializer">
            <bean
                class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="valueSerializer">
             <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
            <!-- <bean class="cn.financial.util.RedisAnnotationCacheUtil" /> -->
        </property>

        <property name="hashKeySerializer">
            <bean
                class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean
                class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="stringSerializer">
            <bean
                class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean>
  	
     <bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"    
       p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig"/>    
    
     <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">    
         <property name="connectionFactory" ref="JedisConnectionFactory" />  
     </bean>    --> 
      
    <bean id="cacheRedisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">  
       <constructor-arg ref="apiRedisTemplate" />  
   </bean>
      
     <!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->    
     <!-- <bean id="redisCacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
         <property name="caches">    
            <set>    
                这里可以配置多个redis  
                <bean class="cn.financial.util.RedisCache">    
                     <property name="redisTemplate" ref="apiRedisTemplate" />    
                     <property name="name" value="redisTest"/>    
                </bean>    
                <bean class="com.cn.util.RedisCache">    
                     <property name="redisTemplate" ref="redisTemplate" />    
                     <property name="name" value="common"/>    
                     common名称要在类或方法的注解中使用  
                </bean>  
            </set>    
         </property>    
     </bean> -->
      
</beans>