<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 消息表 -->
<mapper namespace="cn.financial.dao.MessageDAO">

	<!-- 消息POJO对应数据库字段 -->
	<resultMap type="Message" id="messageResultMap">
		<id property="id" column="id" javaType="string" jdbcType="VARCHAR"></id>
		<result property="status" column="status" javaType="int"
			jdbcType="INTEGER"></result>
		<result property="theme" column="theme" javaType="int"
			jdbcType="INTEGER"></result>
		<result property="content" column="content" javaType="string"
			jdbcType="VARCHAR"></result>
		<result property="oId" column="oId" javaType="string" jdbcType="VARCHAR"></result>
		<result property="isTag" column="isTag" javaType="int"
			jdbcType="INTEGER"></result>
		<result property="createTime" column="createTime" javaType="string"
			jdbcType="TIMESTAMP"></result>
		<result property="updateTime" column="updateTime" javaType="string"
			jdbcType="TIMESTAMP"></result>
		<result property="uId" column="uId" javaType="string"
			jdbcType="VARCHAR"></result>
		<result property="fileurl" column="fileurl" javaType="string"
			jdbcType="VARCHAR"></result>
	</resultMap>

	<!-- 新增 消息 节点信息 -->
	<insert id="saveMessage" parameterType="Message" keyProperty="id">
		insert into message (
		id,
		status,
		theme,
		content,
		oId,
		isTag,
		sName,
		createTime,
		uId,
		fileurl
		)
		values
		(#{id,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{theme,jdbcType=INTEGER},#{content,jdbcType=VARCHAR},#{oId,jdbcType=VARCHAR},#{isTag,jdbcType=INTEGER},#{sName,jdbcType=VARCHAR},now(),#{uId,jdbcType=VARCHAR},#{fileurl,jdbcType=VARCHAR})
	</insert>

	<!-- 查询所有的消息
	<select id="listMessage" resultMap="messageResultMap">
		select
		id,status,theme,content,oId,isTag,createTime,updateTime
		from
		message
		order by
		createTime desc
	</select> -->

	<!-- 根据用户权限展示相应的消息 -->
	<select id="listMessageBy" parameterType="map" resultMap="messageResultMap">
        select * from message
        where uId = #{uId,jdbcType=VARCHAR}
        or	oId in 
        <foreach collection="oId" index="index" item="item" open="(" separator="," close=")">
        	#{item}
        </foreach>
        order by createTime desc
        LIMIT #{start},#{pageSize}
	</select>
	
	<!-- 根据条件查询消息 -->
    <select id="listAllMessage" resultMap="messageResultMap">
        select
        id,status,theme,content,oId,isTag,createTime,updateTime
        from
        message
        where
        1 = 1
        order by createTime desc
    </select>

	<!-- 根据ID查询消息 -->
	<select id="getMessageById" parameterType="java.lang.String"
		resultMap="messageResultMap">
		select
		id,status,theme,content,oId,isTag,createTime,updateTime
		from
		message
		where
		id =
		#{_parameter,jdbcType=VARCHAR}
	</select>

	<!-- 根据条件更新消息 -->
	<update id="updateMessageById" parameterType="map">
		update message
			set updateTime = curdate()
			<if test="status!=null and status!=''">
				,status = #{status,jdbcType=INTEGER}
			</if>
			<if test="theme!=null and theme!=''">
				,theme = #{theme,jdbcType=INTEGER}
			</if>
			<if test="content!=null and content!=''">
				,content = #{content,jdbcType=VARCHAR}
			</if>
			<if test="oId!=null and oId!=''">
				,oId = #{oId,jdbcType=VARCHAR}
			</if>
			<if test="soId!=null and soId!=''">
				,sName = #{sName,jdbcType=VARCHAR}
			</if>
			<if test="isTag!=null and isTag!=''">
				,isTag = #{isTag,jdbcType=INTEGER}
			</if>
		where
		id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 根据Id删除消息 -->
	<delete id="deleteMessageById" parameterType="java.lang.String">
		delete
		from
		message
		where
		id = #{_parameter,jdbcType=VARCHAR}
	</delete>
	<!-- 根据消息状态展示消息列表  -->
	<select id="listMessage" parameterType="map" resultMap="messageResultMap">
				select * from message where oid in
		(SELECT id FROM organization where code  IN(select org.parentId from user_organization_mapping uo,user_role_mapping  ur ,role,organization org,user u where uo.uId=ur.uId
		and ur.rId=role.id 
		and uo.oId=org.id	
		and u.id=ur.uId
		and ur.uid=#{uid}
	  	and role.roleName='制单员'
	  	and role.status=1
		and u.`status`=1
	  	
	 ) )or uid=#{uid}
		<!-- select * from message where oid in
		(select oid from user_organization_mapping where uid=#{uId}) or uid=#{uId} -->
		
		<include refid="query_message_where"></include>
		order by
		createTime desc
	</select>
	

	<!--定义一个sql片段 -->
	<sql id="query_message_where">
		<if test="id!=null and id!=''">
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="status!=null and status!=''">
			and status = #{status,jdbcType=INTEGER}
		</if>
		<if test="theme!=null and theme!=''">
			and theme = #{theme,jdbcType=INTEGER}
		</if>
		<if test="content!=null and content!=''">
			and content = #{content,jdbcType=VARCHAR}
		</if>
		<if test="oId!=null and oId!=''">
			and oId = #{oId,jdbcType=VARCHAR}
		</if>
		<if test="uId!=null and uId!=''">
            or uId = #{uId,jdbcType=VARCHAR}
        </if>
		<if test="sName!=null and sName!=''">
			and sName = #{sName,jdbcType=VARCHAR}
		</if>
		<if test="createTime!=null and createTime!=''">
			and createTime = #{createTime,jdbcType=DATE}
		</if>
		<if test="updateTime!=null and updateTime!=''">
			and updateTime = #{updateTime,jdbcType=DATE}
		</if>
		<if test="isTag!=null and isTag!=''">
			and isTag = #{isTag,jdbcType=INTEGER}
		</if>
	</sql>

</mapper>