<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.financial.dao.UserRoleDAO">
   <!--  <resultMap type="cn.financial.model.UserRole" id="userRole" >
	   <id column="id" property="id" jdbcType="VARCHAR" />
	   <id column="uid" property="uid" jdbcType="VARCHAR" />
	   <id column="rid" property="rid" jdbcType="VARCHAR" />
	   <result column="createTime" property="createTime" jdbcType="DATE" />
	   <result column="updateTime" property="updateTime" jdbcType="DATE" /> -->
	   <!-- <collection property="users" ofType="User">
           <id column="id" property="id" jdbcType="VARCHAR" />
           <result column="name" property="name" jdbcType="VARCHAR" />
           <result column="pwd" property="pwd" jdbcType="VARCHAR" />
           <result column="jobNumber" property="jobNumber" jdbcType="VARCHAR" />
           <result column="status" property="status" jdbcType="INTEGER" />
           <result column="createTime" property="createTime" jdbcType="DATE" />
           <result column="updateTime" property="updateTime" jdbcType="DATE" />
           <result column="oId" property="oId" jdbcType="VARCHAR" />
       </collection>
       <collection property="roles" ofType="Role">
           <id column="id" property="id" jdbcType="VARCHAR" />
	       <result column="roleName" property="roleName" jdbcType="VARCHAR" />
	       <result column="status" property="status" jdbcType="INTEGER" />
	       <result column="createTime" property="createTime" jdbcType="DATE" />
	       <result column="updateTime" property="updateTime" jdbcType="DATE" />
       </collection> -->
	<!-- </resultMap>     -->
	<!--查询全部/根据用户名查对应角色-->
    <select id="listUserRole" parameterType="STRING" resultType="cn.financial.model.UserRole">
        SELECT m.id as id,r.id as rId,u.id as uId,r.roleName as roleName,u.realName as realName,
		u.name as name,u.jobNumber as jobNumber,m.createTime as createTime
		FROM role r inner join user_role_mapping m on r.id=m.rId INNER JOIN user u on u.id=m.uId 
		WHERE r.status=1 and u.status=1 
		<if test="name!=null and name!=''">
            and u.name=#{name}
        </if>
		ORDER BY m.createTime DESC
    </select>
    <!--新增-->
    <insert id="insertUserRole" parameterType="cn.financial.model.UserRole">
        insert into user_role_mapping(id,rId,uId,createTime) values (#{id},#{rId},#{uId},curdate())
    </insert>
    <!-- 修改 (先删除用户关联的角色信息，再重新添加该用户的角色信息)-->
    <delete id="deleteUserRole" parameterType="STRING">
        DELETE FROM user_role_mapping where uId=#{uId}
    </delete>
    <insert id="updateUserRole" parameterType="cn.financial.model.UserRole">
        insert into user_role_mapping(id,rId,uId,updateTime) values (#{id},#{rId},#{uId},curdate())
    </insert>
</mapper>