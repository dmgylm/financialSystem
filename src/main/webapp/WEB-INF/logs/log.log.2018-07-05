2018-07-05 13:47:53 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 13:47:53 [ localhost-startStop-1:88 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 13:47:53 CST 2018]; root of context hierarchy
2018-07-05 13:47:53 [ localhost-startStop-1:149 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 13:47:54 [ localhost-startStop-1:836 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 13:47:54 [ localhost-startStop-1:1159 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 13:47:54 [ localhost-startStop-1:1247 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 13:48:15 [ localhost-startStop-1:22284 ] - [ WARN ] Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; schema_reference.4: 无法读取方案文档 'http://ehcache.org/ehcache.xsd', 原因为 1) 无法找到文档; 2) 无法读取文档; 3) 文档的根元素不是 <xsd:schema>。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:392)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:306)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4160)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:4151)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1(XSDHandler.java:2493)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2191)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:576)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:613)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2446)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1767)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:740)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:374)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:613)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3132)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:852)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:614)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:515)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1546)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:647)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:148)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:582)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:685)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:530)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2179)
	... 42 more
2018-07-05 13:48:15 [ localhost-startStop-1:22306 ] - [ ERROR ] Context initialization failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 4 in XML document from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; cvc-elt.1: 找不到元素 'ehcache' 的声明。
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:614)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:515)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; cvc-elt.1: 找不到元素 'ehcache' 的声明。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:396)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:284)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1900)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:740)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:374)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:613)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3132)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:852)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 22 more
2018-07-05 13:48:15 [ localhost-startStop-1:22327 ] - [ INFO ] Closing Root WebApplicationContext: startup date [Thu Jul 05 13:47:53 CST 2018]; root of context hierarchy
2018-07-05 14:12:18 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 14:12:18 [ localhost-startStop-1:77 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 14:12:18 CST 2018]; root of context hierarchy
2018-07-05 14:12:18 [ localhost-startStop-1:133 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 14:12:18 [ localhost-startStop-1:591 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 14:12:19 [ localhost-startStop-1:892 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 14:12:19 [ localhost-startStop-1:974 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 14:12:40 [ localhost-startStop-1:22015 ] - [ WARN ] Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; schema_reference.4: 无法读取方案文档 'http://ehcache.org/ehcache.xsd', 原因为 1) 无法找到文档; 2) 无法读取文档; 3) 文档的根元素不是 <xsd:schema>。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:392)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:306)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4160)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:4151)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1(XSDHandler.java:2493)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2191)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:576)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:613)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2446)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1767)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:740)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:374)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:613)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3132)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:852)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:614)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:515)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1202)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1138)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1032)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:966)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1546)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1474)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:647)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:148)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:582)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:685)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:530)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2179)
	... 42 more
2018-07-05 14:12:40 [ localhost-startStop-1:22037 ] - [ ERROR ] Context initialization failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 4 in XML document from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; cvc-elt.1: 找不到元素 'ehcache' 的声明。
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:614)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:515)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:443)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:325)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 22; cvc-elt.1: 找不到元素 'ehcache' 的声明。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:396)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:284)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1900)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:740)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:374)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:613)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3132)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:852)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 22 more
2018-07-05 14:12:40 [ localhost-startStop-1:22061 ] - [ INFO ] Closing Root WebApplicationContext: startup date [Thu Jul 05 14:12:18 CST 2018]; root of context hierarchy
2018-07-05 14:23:09 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 14:23:09 [ localhost-startStop-1:84 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 14:23:09 CST 2018]; root of context hierarchy
2018-07-05 14:23:09 [ localhost-startStop-1:142 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 14:23:09 [ localhost-startStop-1:562 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 14:23:09 [ localhost-startStop-1:847 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 14:23:10 [ localhost-startStop-1:923 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 14:23:10 [ localhost-startStop-1:1104 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 14:23:10 [ localhost-startStop-1:1328 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:10 [ localhost-startStop-1:1336 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:10 [ localhost-startStop-1:1338 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:10 [ localhost-startStop-1:1347 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 14:23:10 [ localhost-startStop-1:1429 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 14:23:10 [ localhost-startStop-1:1508 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 14:23:11 [ localhost-startStop-1:2200 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2200 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2211 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2213 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2215 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2215 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2216 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2216 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2216 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2217 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:11 [ localhost-startStop-1:2218 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 14:23:11 [ localhost-startStop-1:2605 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 14:23:12 [ localhost-startStop-1:3521 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:12 [ localhost-startStop-1:3769 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 14:23:13 [ localhost-startStop-1:4483 ] - [ INFO ] {dataSource-1} inited
2018-07-05 14:23:13 [ localhost-startStop-1:4483 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5447 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5451 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5494 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5509 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5517 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5521 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5524 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5527 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5535 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5554 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5575 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5613 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5624 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5630 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5634 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5698 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5717 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5732 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5784 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:14 [ localhost-startStop-1:5811 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:15 [ localhost-startStop-1:5960 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 14:23:15 [ localhost-startStop-1:6209 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:15 [ localhost-startStop-1:6219 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:15 [ localhost-startStop-1:6232 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:15 [ localhost-startStop-1:6239 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:15 [ localhost-startStop-1:6367 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2ea1bd52' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:6996 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#472d5eb0' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:6998 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#66635a0f' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7001 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#2a0c273e' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7005 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#9644400' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7081 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7114 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7121 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7135 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7145 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7249 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7292 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7295 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7321 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7325 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7332 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7354 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7513 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7645 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7680 ] - [ INFO ] Bean 'util:map#7f9544ce' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:16 [ localhost-startStop-1:7685 ] - [ INFO ] Bean 'util:map#7f9544ce' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 14:23:24 [ localhost-startStop-1:15243 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 14:23:24 [ localhost-startStop-1:15245 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:24 [ localhost-startStop-1:15246 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 14:23:24 [ localhost-startStop-1:15246 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15247 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:24 [ localhost-startStop-1:15251 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 14:23:24 [ localhost-startStop-1:15252 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:24 [ localhost-startStop-1:15254 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15255 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:24 [ localhost-startStop-1:15256 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:24 [ localhost-startStop-1:15256 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15257 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 14:23:24 [ localhost-startStop-1:15257 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15262 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15263 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15263 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15264 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:24 [ localhost-startStop-1:15265 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 14:23:24 [ localhost-startStop-1:15265 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 14:23:24 [ localhost-startStop-1:15266 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15267 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15269 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15269 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:24 [ localhost-startStop-1:15270 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 14:23:24 [ localhost-startStop-1:15270 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15271 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15272 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15275 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15276 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15278 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15279 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:24 [ localhost-startStop-1:15279 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15280 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15281 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15281 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15282 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15285 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15285 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15286 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15286 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15287 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15288 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15288 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15288 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15289 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15290 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15290 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15291 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 14:23:24 [ localhost-startStop-1:15295 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15295 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15296 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15296 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15298 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15298 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15299 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15299 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15299 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15300 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15300 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15301 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:24 [ localhost-startStop-1:15301 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:25 [ localhost-startStop-1:16245 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 14:23:09 CST 2018]; root of context hierarchy
2018-07-05 14:23:26 [ localhost-startStop-1:16920 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 14:23:09 CST 2018]; root of context hierarchy
2018-07-05 14:23:27 [ localhost-startStop-1:18394 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 14:23:28 [ localhost-startStop-1:19149 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 14:23:28 [ localhost-startStop-1:19310 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 14:23:28 [ localhost-startStop-1:19636 ] - [ INFO ] Root WebApplicationContext: initialization completed in 19635 ms
2018-07-05 14:23:28 [ localhost-startStop-1:19683 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 14:23:28 [ localhost-startStop-1:19737 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 14:23:28 [ localhost-startStop-1:19737 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 14:23:28 [ localhost-startStop-1:19740 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 14:23:28 [ localhost-startStop-1:19740 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 14:23:28 [ localhost-startStop-1:19740 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 14:23:28 [ localhost-startStop-1:19770 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 14:23:28 [ localhost-startStop-1:19772 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 14:23:28 [ localhost-startStop-1:19776 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 14:23:29 [ localhost-startStop-1:19952 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 14:23:29 [ localhost-startStop-1:19956 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 14:23:29 CST 2018]; parent: Root WebApplicationContext
2018-07-05 14:23:29 [ localhost-startStop-1:19957 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 14:23:29 [ localhost-startStop-1:20022 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:29 [ localhost-startStop-1:20026 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:29 [ localhost-startStop-1:20026 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 14:23:29 [ localhost-startStop-1:20072 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 14:23:29 [ localhost-startStop-1:20542 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 14:23:29 [ localhost-startStop-1:20543 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:29 [ localhost-startStop-1:20544 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 14:23:29 [ localhost-startStop-1:20544 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20545 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:29 [ localhost-startStop-1:20547 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 14:23:29 [ localhost-startStop-1:20548 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:29 [ localhost-startStop-1:20549 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20549 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:29 [ localhost-startStop-1:20550 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:29 [ localhost-startStop-1:20551 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20552 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 14:23:29 [ localhost-startStop-1:20552 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20555 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20557 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20557 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20558 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 14:23:29 [ localhost-startStop-1:20559 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 14:23:29 [ localhost-startStop-1:20559 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 14:23:29 [ localhost-startStop-1:20559 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20562 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20566 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20568 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:29 [ localhost-startStop-1:20568 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 14:23:29 [ localhost-startStop-1:20575 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20578 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20581 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20591 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20592 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20592 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20593 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:29 [ localhost-startStop-1:20601 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20602 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20602 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20603 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20604 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20606 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20606 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20607 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20607 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20609 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20609 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20611 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20611 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20611 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20612 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20612 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20613 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 14:23:29 [ localhost-startStop-1:20615 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20616 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20616 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20616 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20616 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20617 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20617 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20618 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20619 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20620 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20621 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20621 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:29 [ localhost-startStop-1:20624 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:30 [ localhost-startStop-1:21351 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 14:23:29 CST 2018]; parent: Root WebApplicationContext
2018-07-05 14:23:30 [ localhost-startStop-1:21865 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 14:23:29 CST 2018]; parent: Root WebApplicationContext
2018-07-05 14:23:32 [ localhost-startStop-1:23143 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 14:23:32 [ localhost-startStop-1:23178 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 14:23:32 [ localhost-startStop-1:23631 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3679 ms
2018-07-05 16:20:42 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:20:42 [ localhost-startStop-1:74 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:20:42 CST 2018]; root of context hierarchy
2018-07-05 16:20:42 [ localhost-startStop-1:137 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:20:43 [ localhost-startStop-1:864 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1308 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1372 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1600 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1791 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:20:44 [ localhost-startStop-1:1793 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:20:44 [ localhost-startStop-1:1794 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:20:44 [ localhost-startStop-1:1802 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1827 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:20:44 [ localhost-startStop-1:1888 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:20:45 [ localhost-startStop-1:2525 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2526 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2526 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2526 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2526 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2528 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:45 [ localhost-startStop-1:2529 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:20:45 [ localhost-startStop-1:2861 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:20:46 [ localhost-startStop-1:3680 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:46 [ localhost-startStop-1:3881 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:20:47 [ localhost-startStop-1:4702 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:20:47 [ localhost-startStop-1:4703 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5509 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5513 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5526 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5531 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5535 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5538 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5543 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5547 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5552 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5565 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5576 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5579 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5583 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5586 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5589 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5607 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5618 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5622 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5656 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5664 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:5752 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:20:48 [ localhost-startStop-1:6002 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:6011 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:6021 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:6027 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:48 [ localhost-startStop-1:6173 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#71ee9c85' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6538 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#32184129' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6541 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#18b3b707' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6546 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#7398d0b0' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6550 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#769770f2' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6632 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6694 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6703 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6707 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6714 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6791 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6826 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6828 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6845 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6848 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6851 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6854 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:6978 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:7074 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:7104 ] - [ INFO ] Bean 'util:map#20d6960a' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:49 [ localhost-startStop-1:7111 ] - [ INFO ] Bean 'util:map#20d6960a' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:20:57 [ localhost-startStop-1:14532 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:20:57 [ localhost-startStop-1:14534 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:20:57 [ localhost-startStop-1:14534 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:20:57 [ localhost-startStop-1:14535 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14536 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:57 [ localhost-startStop-1:14548 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:20:57 [ localhost-startStop-1:14549 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:57 [ localhost-startStop-1:14549 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14549 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:20:57 [ localhost-startStop-1:14549 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14550 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:20:57 [ localhost-startStop-1:14550 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:57 [ localhost-startStop-1:14550 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14558 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14560 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14561 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:20:57 [ localhost-startStop-1:14561 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14562 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14563 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:20:57 [ localhost-startStop-1:14564 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:20:57 [ localhost-startStop-1:14566 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14567 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:20:57 [ localhost-startStop-1:14567 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14568 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:57 [ localhost-startStop-1:14568 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14569 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14570 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14575 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14575 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14576 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14576 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14576 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:57 [ localhost-startStop-1:14577 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14578 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14578 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14579 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14580 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14581 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14581 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14583 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14585 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14586 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14586 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14586 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14587 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14587 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14588 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14590 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:20:57 [ localhost-startStop-1:14602 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14602 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14607 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14607 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14608 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14608 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14609 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14609 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14609 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14610 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14610 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14610 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:57 [ localhost-startStop-1:14611 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:58 [ localhost-startStop-1:16225 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:20:42 CST 2018]; root of context hierarchy
2018-07-05 16:20:59 [ localhost-startStop-1:17252 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:20:42 CST 2018]; root of context hierarchy
2018-07-05 16:21:02 [ localhost-startStop-1:19687 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:21:03 [ localhost-startStop-1:20561 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:21:03 [ localhost-startStop-1:20835 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:21:04 [ localhost-startStop-1:21494 ] - [ INFO ] Root WebApplicationContext: initialization completed in 21493 ms
2018-07-05 16:21:04 [ localhost-startStop-1:22008 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:21:04 [ localhost-startStop-1:22036 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:21:04 [ localhost-startStop-1:22037 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:21:04 [ localhost-startStop-1:22042 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:21:04 [ localhost-startStop-1:22042 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:21:04 [ localhost-startStop-1:22042 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:21:04 [ localhost-startStop-1:22087 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:21:04 [ localhost-startStop-1:22090 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:21:04 [ localhost-startStop-1:22093 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:21:05 [ localhost-startStop-1:22379 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:21:05 [ localhost-startStop-1:22384 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:21:05 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:21:05 [ localhost-startStop-1:22384 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:21:05 [ localhost-startStop-1:22686 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:21:05 [ localhost-startStop-1:22687 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:21:05 [ localhost-startStop-1:22688 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:21:05 [ localhost-startStop-1:22735 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:21:06 [ localhost-startStop-1:23351 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:21:06 [ localhost-startStop-1:23351 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:21:06 [ localhost-startStop-1:23352 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:21:06 [ localhost-startStop-1:23352 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23354 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:21:06 [ localhost-startStop-1:23356 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:21:06 [ localhost-startStop-1:23357 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:21:06 [ localhost-startStop-1:23357 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23357 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:21:06 [ localhost-startStop-1:23357 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23358 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:21:06 [ localhost-startStop-1:23358 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:21:06 [ localhost-startStop-1:23358 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23360 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23361 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23361 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:21:06 [ localhost-startStop-1:23361 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23363 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23363 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:21:06 [ localhost-startStop-1:23363 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:21:06 [ localhost-startStop-1:23365 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23365 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:21:06 [ localhost-startStop-1:23366 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23366 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:21:06 [ localhost-startStop-1:23368 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23368 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23370 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23384 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23384 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23385 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23385 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23385 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:21:06 [ localhost-startStop-1:23385 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23386 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23386 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23387 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23387 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23388 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23388 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23389 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23390 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23391 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23391 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23391 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23391 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23393 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23394 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23395 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:21:06 [ localhost-startStop-1:23400 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23400 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23401 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23401 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23401 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23403 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23403 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23403 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23403 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23404 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23404 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23404 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:23405 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:21:06 [ localhost-startStop-1:24177 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:21:05 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:21:07 [ localhost-startStop-1:24718 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:21:05 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:21:08 [ localhost-startStop-1:25580 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:21:08 [ localhost-startStop-1:25619 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:21:08 [ localhost-startStop-1:26001 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3622 ms
2018-07-05 16:25:30 [ http-bio-8080-exec-6:287958 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 16:25:30 [ http-bio-8080-exec-6:287964 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:25:30 [ DefaultQuartzScheduler_Worker-1:287977 ] - [ INFO ] Validating all active sessions...
2018-07-05 16:25:30 [ DefaultQuartzScheduler_Worker-1:287994 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 16:25:30 [ http-bio-8080-exec-6:288008 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/subLogin?
2018-07-05 16:27:15 [ http-bio-8080-exec-9:392683 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/subLogin?
2018-07-05 16:29:18 [ http-bio-8080-exec-3:516087 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 16:29:36 [ http-bio-8080-exec-6:534082 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 16:30:10 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:30:10 [ localhost-startStop-1:86 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:30:10 CST 2018]; root of context hierarchy
2018-07-05 16:30:10 [ localhost-startStop-1:143 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:30:10 [ localhost-startStop-1:555 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:846 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:920 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:1095 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:1284 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:11 [ localhost-startStop-1:1288 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:11 [ localhost-startStop-1:1290 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:11 [ localhost-startStop-1:1305 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:1350 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:30:11 [ localhost-startStop-1:1403 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:30:12 [ localhost-startStop-1:2151 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2151 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2152 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2152 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2152 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2156 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2158 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2164 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2164 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2165 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2166 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2166 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2166 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:30:12 [ localhost-startStop-1:2167 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:30:12 [ localhost-startStop-1:2463 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:30:13 [ localhost-startStop-1:3240 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:13 [ localhost-startStop-1:3458 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:30:14 [ localhost-startStop-1:3938 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:30:14 [ localhost-startStop-1:3938 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4747 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4754 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4769 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4773 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4777 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4781 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:14 [ localhost-startStop-1:4786 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4791 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4801 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4809 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4815 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4821 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4830 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4835 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4838 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4867 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4878 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4882 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4905 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:4914 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:5015 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:30:15 [ localhost-startStop-1:5223 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:5227 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:5239 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:5244 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:15 [ localhost-startStop-1:5387 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#434934d1' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:5992 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#62eb6' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:5996 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#6d6f01a0' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6000 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#46d0990' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6004 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#e885a70' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6078 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6110 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6115 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6123 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6128 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6220 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6266 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6270 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6295 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6300 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6305 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6312 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6495 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6654 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6695 ] - [ INFO ] Bean 'util:map#53dfa90' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:16 [ localhost-startStop-1:6701 ] - [ INFO ] Bean 'util:map#53dfa90' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:30:24 [ localhost-startStop-1:14041 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:30:24 [ localhost-startStop-1:14044 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:24 [ localhost-startStop-1:14047 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:24 [ localhost-startStop-1:14050 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:30:24 [ localhost-startStop-1:14050 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14056 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:30:24 [ localhost-startStop-1:14058 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14059 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:24 [ localhost-startStop-1:14059 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14060 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:24 [ localhost-startStop-1:14060 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:30:24 [ localhost-startStop-1:14061 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:24 [ localhost-startStop-1:14063 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14070 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14073 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14075 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:24 [ localhost-startStop-1:14075 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14078 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:30:24 [ localhost-startStop-1:14080 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:30:24 [ localhost-startStop-1:14084 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14088 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14095 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14102 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:24 [ localhost-startStop-1:14107 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:30:24 [ localhost-startStop-1:14107 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14107 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14108 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14111 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:24 [ localhost-startStop-1:14112 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14114 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14114 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14117 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14119 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14120 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14121 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14121 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14125 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14127 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14129 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14130 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14134 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14134 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14137 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14139 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14141 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14141 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14144 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14147 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:30:24 [ localhost-startStop-1:14158 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14158 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14163 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14164 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14165 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14165 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14166 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14167 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14167 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14169 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:24 [ localhost-startStop-1:14169 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:25 [ localhost-startStop-1:14827 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:30:10 CST 2018]; root of context hierarchy
2018-07-05 16:30:25 [ localhost-startStop-1:15251 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:30:10 CST 2018]; root of context hierarchy
2018-07-05 16:30:26 [ localhost-startStop-1:16381 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:30:27 [ localhost-startStop-1:16883 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:30:27 [ localhost-startStop-1:17002 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:30:27 [ localhost-startStop-1:17315 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17313 ms
2018-07-05 16:30:27 [ localhost-startStop-1:17381 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:30:27 [ localhost-startStop-1:17433 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:30:27 [ localhost-startStop-1:17433 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:30:27 [ localhost-startStop-1:17436 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:30:27 [ localhost-startStop-1:17436 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:30:27 [ localhost-startStop-1:17438 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:30:27 [ localhost-startStop-1:17477 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:30:27 [ localhost-startStop-1:17485 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:30:27 [ localhost-startStop-1:17488 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:30:27 [ localhost-startStop-1:17664 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:30:27 [ localhost-startStop-1:17667 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:30:27 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:30:27 [ localhost-startStop-1:17667 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:30:27 [ localhost-startStop-1:17717 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:27 [ localhost-startStop-1:17718 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:27 [ localhost-startStop-1:17718 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:30:27 [ localhost-startStop-1:17747 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:30:28 [ localhost-startStop-1:18084 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:30:28 [ localhost-startStop-1:18084 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:28 [ localhost-startStop-1:18085 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:28 [ localhost-startStop-1:18085 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:30:28 [ localhost-startStop-1:18086 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18088 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:30:28 [ localhost-startStop-1:18088 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18089 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:28 [ localhost-startStop-1:18089 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18090 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:28 [ localhost-startStop-1:18090 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:30:28 [ localhost-startStop-1:18091 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:28 [ localhost-startStop-1:18091 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18094 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18094 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:30:28 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18096 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:30:28 [ localhost-startStop-1:18097 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:30:28 [ localhost-startStop-1:18097 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18099 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18101 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18103 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:28 [ localhost-startStop-1:18105 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:30:28 [ localhost-startStop-1:18107 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18109 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18111 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18115 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:30:28 [ localhost-startStop-1:18118 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18120 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18121 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18124 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18125 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18125 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18126 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18127 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18128 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18129 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18129 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18130 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18132 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18149 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18150 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18151 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18151 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18152 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18152 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18153 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:30:28 [ localhost-startStop-1:18157 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18158 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18160 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18160 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18161 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18163 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18164 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18164 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18165 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18165 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:30:28 [ localhost-startStop-1:18685 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:30:27 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:30:29 [ localhost-startStop-1:19035 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:30:27 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:30:30 [ localhost-startStop-1:19826 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:30:30 [ localhost-startStop-1:19853 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:30:30 [ localhost-startStop-1:20193 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2529 ms
2018-07-05 16:30:38 [ http-bio-8080-exec-1:28289 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 16:30:38 [ http-bio-8080-exec-1:28293 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:30:38 [ DefaultQuartzScheduler_Worker-1:28306 ] - [ INFO ] Validating all active sessions...
2018-07-05 16:30:38 [ DefaultQuartzScheduler_Worker-1:28317 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 16:30:38 [ http-bio-8080-exec-1:28362 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 16:35:18 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:35:18 [ localhost-startStop-1:73 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:35:18 CST 2018]; root of context hierarchy
2018-07-05 16:35:18 [ localhost-startStop-1:128 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:35:18 [ localhost-startStop-1:577 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:850 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:920 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:1105 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:1267 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:19 [ localhost-startStop-1:1269 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:19 [ localhost-startStop-1:1271 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:19 [ localhost-startStop-1:1279 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:1303 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:35:19 [ localhost-startStop-1:1356 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:35:20 [ localhost-startStop-1:2047 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2047 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2048 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2048 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2050 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2062 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2064 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2064 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2064 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2065 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2066 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2066 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2067 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:35:20 [ localhost-startStop-1:2067 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:35:20 [ localhost-startStop-1:2526 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:35:21 [ localhost-startStop-1:3313 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:21 [ localhost-startStop-1:3526 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:35:22 [ localhost-startStop-1:4010 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:35:22 [ localhost-startStop-1:4012 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4725 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4729 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4741 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4747 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4750 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4754 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4757 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4762 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4767 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4770 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4779 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4786 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4790 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4793 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4797 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4820 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4827 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4832 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4859 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:4874 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:5036 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:35:23 [ localhost-startStop-1:5282 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:5285 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:5296 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:5301 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:23 [ localhost-startStop-1:5445 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#6aa1ce3f' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:5998 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#7fd30f11' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6001 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#40580d4' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6003 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#4ee24c51' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6007 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2a56a384' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6091 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6135 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6146 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6155 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6161 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6242 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6291 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6297 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6319 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6323 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6328 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6333 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:24 [ localhost-startStop-1:6504 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:25 [ localhost-startStop-1:6640 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:25 [ localhost-startStop-1:6670 ] - [ INFO ] Bean 'util:map#5835c8f7' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:25 [ localhost-startStop-1:6678 ] - [ INFO ] Bean 'util:map#5835c8f7' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:35:32 [ localhost-startStop-1:13745 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:35:32 [ localhost-startStop-1:13748 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13749 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:32 [ localhost-startStop-1:13750 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:32 [ localhost-startStop-1:13751 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:35:32 [ localhost-startStop-1:13755 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:35:32 [ localhost-startStop-1:13758 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:35:32 [ localhost-startStop-1:13758 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13759 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13760 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:32 [ localhost-startStop-1:13760 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:32 [ localhost-startStop-1:13762 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13763 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:32 [ localhost-startStop-1:13770 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:32 [ localhost-startStop-1:13777 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13779 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13779 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13781 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:35:32 [ localhost-startStop-1:13783 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:35:32 [ localhost-startStop-1:13784 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13787 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13787 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:35:32 [ localhost-startStop-1:13789 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13791 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13794 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:32 [ localhost-startStop-1:13796 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13798 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13801 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13802 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13809 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13812 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13815 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13817 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13818 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13818 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:32 [ localhost-startStop-1:13819 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13822 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13823 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13823 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13824 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13828 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13829 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13829 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13830 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13831 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13832 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13833 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13838 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:35:32 [ localhost-startStop-1:13845 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13850 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13852 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13853 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13853 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13853 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13853 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13854 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13854 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13854 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:32 [ localhost-startStop-1:13855 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:33 [ localhost-startStop-1:14584 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:35:18 CST 2018]; root of context hierarchy
2018-07-05 16:35:33 [ localhost-startStop-1:15033 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:35:18 CST 2018]; root of context hierarchy
2018-07-05 16:35:34 [ localhost-startStop-1:16231 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:35:35 [ localhost-startStop-1:16782 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:35:35 [ localhost-startStop-1:16907 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:35:35 [ localhost-startStop-1:17211 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17210 ms
2018-07-05 16:35:35 [ localhost-startStop-1:17280 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:35:35 [ localhost-startStop-1:17352 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:35:35 [ localhost-startStop-1:17353 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:35:35 [ localhost-startStop-1:17355 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:35:35 [ localhost-startStop-1:17356 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:35:35 [ localhost-startStop-1:17357 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:35:35 [ localhost-startStop-1:17380 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:35:35 [ localhost-startStop-1:17385 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:35:35 [ localhost-startStop-1:17389 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:35:36 [ localhost-startStop-1:17592 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:35:36 [ localhost-startStop-1:17595 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:35:36 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:35:36 [ localhost-startStop-1:17596 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:35:36 [ localhost-startStop-1:17656 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:36 [ localhost-startStop-1:17658 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:36 [ localhost-startStop-1:17660 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:35:36 [ localhost-startStop-1:17689 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:35:36 [ localhost-startStop-1:18042 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:35:36 [ localhost-startStop-1:18044 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18047 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:36 [ localhost-startStop-1:18048 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:36 [ localhost-startStop-1:18048 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:35:36 [ localhost-startStop-1:18051 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:35:36 [ localhost-startStop-1:18051 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:35:36 [ localhost-startStop-1:18051 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18052 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18054 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:36 [ localhost-startStop-1:18057 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:36 [ localhost-startStop-1:18057 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18057 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:36 [ localhost-startStop-1:18059 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:35:36 [ localhost-startStop-1:18060 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18060 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18061 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18062 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:35:36 [ localhost-startStop-1:18062 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:35:36 [ localhost-startStop-1:18062 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18065 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18066 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:35:36 [ localhost-startStop-1:18066 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18066 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18067 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:36 [ localhost-startStop-1:18069 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18070 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18073 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18074 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18074 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18075 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18075 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18076 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18076 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18077 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:35:36 [ localhost-startStop-1:18077 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18079 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18079 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18080 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18080 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18082 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18088 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18090 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18092 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18093 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18094 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18096 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:35:36 [ localhost-startStop-1:18098 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18100 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18101 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18101 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18102 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18102 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18103 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18103 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18106 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18106 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18106 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18107 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18107 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:35:36 [ localhost-startStop-1:18514 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:35:36 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:35:37 [ localhost-startStop-1:18879 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:35:36 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:35:38 [ localhost-startStop-1:19654 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:35:38 [ localhost-startStop-1:19695 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:35:38 [ localhost-startStop-1:20101 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2508 ms
2018-07-05 16:36:21 [ http-bio-8080-exec-1:62612 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 16:36:21 [ http-bio-8080-exec-1:62621 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:36:21 [ DefaultQuartzScheduler_Worker-1:62641 ] - [ INFO ] Validating all active sessions...
2018-07-05 16:36:21 [ DefaultQuartzScheduler_Worker-1:62660 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 16:36:21 [ http-bio-8080-exec-1:62739 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 16:38:39 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:38:39 [ localhost-startStop-1:107 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:38:39 CST 2018]; root of context hierarchy
2018-07-05 16:38:39 [ localhost-startStop-1:167 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:38:39 [ localhost-startStop-1:611 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:38:39 [ localhost-startStop-1:955 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:38:40 [ localhost-startStop-1:1025 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:38:40 [ localhost-startStop-1:1285 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:38:40 [ localhost-startStop-1:1465 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:40 [ localhost-startStop-1:1468 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:40 [ localhost-startStop-1:1469 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:40 [ localhost-startStop-1:1473 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:38:40 [ localhost-startStop-1:1509 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:38:40 [ localhost-startStop-1:1569 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:38:41 [ localhost-startStop-1:2195 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2195 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2196 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2196 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2197 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2198 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2200 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2200 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2200 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2201 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:38:41 [ localhost-startStop-1:2202 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:38:41 [ localhost-startStop-1:2478 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:38:42 [ localhost-startStop-1:3285 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:42 [ localhost-startStop-1:3490 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:38:43 [ localhost-startStop-1:4051 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:38:43 [ localhost-startStop-1:4052 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:4984 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:4988 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5005 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5008 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5011 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5014 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5017 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5021 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5029 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5033 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5041 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5046 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5050 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5054 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5065 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5086 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5094 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5099 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5130 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5141 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5231 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:38:44 [ localhost-startStop-1:5431 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5439 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5448 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5453 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:44 [ localhost-startStop-1:5583 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#5b610169' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6153 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#130e66f' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6155 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3c9b0905' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6157 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#46729766' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6162 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#154bbc88' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6246 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6279 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6285 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6290 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6295 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6388 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6430 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6432 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6447 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6451 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6454 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6457 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6615 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6712 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6741 ] - [ INFO ] Bean 'util:map#40da0b9' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:45 [ localhost-startStop-1:6748 ] - [ INFO ] Bean 'util:map#40da0b9' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:38:52 [ localhost-startStop-1:13841 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:38:52 [ localhost-startStop-1:13845 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13847 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:52 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:38:52 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:52 [ localhost-startStop-1:13852 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:38:52 [ localhost-startStop-1:13855 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13856 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:52 [ localhost-startStop-1:13856 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13857 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:52 [ localhost-startStop-1:13857 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:52 [ localhost-startStop-1:13859 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:38:52 [ localhost-startStop-1:13860 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13866 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:52 [ localhost-startStop-1:13868 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13869 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13870 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13872 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:38:52 [ localhost-startStop-1:13872 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:38:52 [ localhost-startStop-1:13875 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:52 [ localhost-startStop-1:13877 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13879 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13882 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:38:52 [ localhost-startStop-1:13884 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13884 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13886 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13889 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13890 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13893 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13894 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:52 [ localhost-startStop-1:13905 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13908 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13908 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13909 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13910 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13914 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13916 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13917 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13918 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13921 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13922 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13923 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13923 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13924 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13926 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13928 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13930 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:38:52 [ localhost-startStop-1:13938 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13939 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13940 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13943 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13943 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13944 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13944 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13945 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13948 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13950 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13953 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13953 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:52 [ localhost-startStop-1:13954 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:54 [ localhost-startStop-1:14992 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:38:39 CST 2018]; root of context hierarchy
2018-07-05 16:38:54 [ localhost-startStop-1:15478 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:38:39 CST 2018]; root of context hierarchy
2018-07-05 16:38:55 [ localhost-startStop-1:16883 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:38:56 [ localhost-startStop-1:17458 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:38:56 [ localhost-startStop-1:17632 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:38:57 [ localhost-startStop-1:18006 ] - [ INFO ] Root WebApplicationContext: initialization completed in 18005 ms
2018-07-05 16:38:57 [ localhost-startStop-1:18093 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:38:57 [ localhost-startStop-1:18132 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:38:57 [ localhost-startStop-1:18132 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:38:57 [ localhost-startStop-1:18133 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:38:57 [ localhost-startStop-1:18134 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:38:57 [ localhost-startStop-1:18134 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:38:57 [ localhost-startStop-1:18161 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:38:57 [ localhost-startStop-1:18165 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:38:57 [ localhost-startStop-1:18168 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:38:57 [ localhost-startStop-1:18366 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:38:57 [ localhost-startStop-1:18373 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:38:57 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:38:57 [ localhost-startStop-1:18373 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:38:57 [ localhost-startStop-1:18438 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:57 [ localhost-startStop-1:18440 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:57 [ localhost-startStop-1:18442 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:38:57 [ localhost-startStop-1:18465 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:38:57 [ localhost-startStop-1:18848 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:38:57 [ localhost-startStop-1:18851 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18854 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:57 [ localhost-startStop-1:18855 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:38:57 [ localhost-startStop-1:18856 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:57 [ localhost-startStop-1:18859 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:38:57 [ localhost-startStop-1:18859 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18860 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:57 [ localhost-startStop-1:18860 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18861 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:57 [ localhost-startStop-1:18861 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:57 [ localhost-startStop-1:18861 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:38:57 [ localhost-startStop-1:18862 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18864 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18866 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:38:57 [ localhost-startStop-1:18866 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18867 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18868 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18868 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:38:57 [ localhost-startStop-1:18869 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:38:57 [ localhost-startStop-1:18871 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:57 [ localhost-startStop-1:18871 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18872 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18872 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:38:57 [ localhost-startStop-1:18873 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18875 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18875 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18880 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18882 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18882 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18883 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:38:57 [ localhost-startStop-1:18884 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18885 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18886 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18886 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18887 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18889 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18890 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18890 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18890 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18892 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18897 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18899 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18901 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18902 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18902 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18902 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18903 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:38:57 [ localhost-startStop-1:18914 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18915 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18916 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18917 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18918 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18920 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18920 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18921 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18923 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18924 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18924 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18926 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:57 [ localhost-startStop-1:18930 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:38:58 [ localhost-startStop-1:19519 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:38:57 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:38:58 [ localhost-startStop-1:19875 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:38:57 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:38:59 [ localhost-startStop-1:20653 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:38:59 [ localhost-startStop-1:20681 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:39:00 [ localhost-startStop-1:21126 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2758 ms
2018-07-05 16:49:54 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:49:54 [ localhost-startStop-1:73 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:49:54 CST 2018]; root of context hierarchy
2018-07-05 16:49:54 [ localhost-startStop-1:113 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:49:54 [ localhost-startStop-1:452 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:766 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:868 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:1081 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:1253 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:49:55 [ localhost-startStop-1:1256 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:49:55 [ localhost-startStop-1:1258 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:49:55 [ localhost-startStop-1:1266 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:1296 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:49:55 [ localhost-startStop-1:1349 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:49:56 [ localhost-startStop-1:2133 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2133 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2134 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2134 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2134 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2141 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2143 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2145 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2145 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2146 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2146 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2147 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2147 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:49:56 [ localhost-startStop-1:2147 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:49:56 [ localhost-startStop-1:2387 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:49:57 [ localhost-startStop-1:2873 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:57 [ localhost-startStop-1:2988 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:49:58 [ localhost-startStop-1:3624 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:49:58 [ localhost-startStop-1:3624 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4286 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4289 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4300 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4302 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4305 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4308 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4309 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4311 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4313 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4314 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4316 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4320 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4322 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4323 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4328 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4347 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4355 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4365 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4378 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4384 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:58 [ localhost-startStop-1:4443 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:49:59 [ localhost-startStop-1:4645 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:4646 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:4652 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:4654 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:4744 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#6c2fbdce' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5264 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#59e05a56' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5269 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#649064ef' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5269 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#1576dc6' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5271 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#100771ef' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5353 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5403 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5413 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5421 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5424 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5485 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5506 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5506 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5518 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5523 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5526 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:49:59 [ localhost-startStop-1:5535 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:00 [ localhost-startStop-1:5675 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:00 [ localhost-startStop-1:5711 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:00 [ localhost-startStop-1:5721 ] - [ INFO ] Bean 'util:map#22e1f6e1' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:00 [ localhost-startStop-1:5725 ] - [ INFO ] Bean 'util:map#22e1f6e1' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:06 [ localhost-startStop-1:12080 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:50:06 [ localhost-startStop-1:12083 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:50:06 [ localhost-startStop-1:12084 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:06 [ localhost-startStop-1:12085 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:06 [ localhost-startStop-1:12086 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12091 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:50:06 [ localhost-startStop-1:12094 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:06 [ localhost-startStop-1:12094 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12095 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:06 [ localhost-startStop-1:12095 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:06 [ localhost-startStop-1:12095 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12096 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:50:06 [ localhost-startStop-1:12098 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12107 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12110 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:06 [ localhost-startStop-1:12111 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12112 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12113 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:50:06 [ localhost-startStop-1:12113 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:50:06 [ localhost-startStop-1:12114 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12116 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12118 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:06 [ localhost-startStop-1:12119 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12120 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12123 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:50:06 [ localhost-startStop-1:12128 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12131 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12144 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12148 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12149 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12149 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:06 [ localhost-startStop-1:12151 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12154 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12155 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12155 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12156 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12158 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12160 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12160 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12161 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12166 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12172 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12174 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12177 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12180 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12182 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12187 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12200 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:50:06 [ localhost-startStop-1:12216 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12217 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12222 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12222 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12222 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12223 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12223 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12223 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12227 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12227 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12228 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12228 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:06 [ localhost-startStop-1:12228 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:07 [ localhost-startStop-1:12701 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:49:54 CST 2018]; root of context hierarchy
2018-07-05 16:50:07 [ localhost-startStop-1:12884 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:49:54 CST 2018]; root of context hierarchy
2018-07-05 16:50:07 [ localhost-startStop-1:13350 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:50:07 [ localhost-startStop-1:13549 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:50:08 [ localhost-startStop-1:13614 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:50:08 [ localhost-startStop-1:13739 ] - [ INFO ] Root WebApplicationContext: initialization completed in 13739 ms
2018-07-05 16:50:08 [ localhost-startStop-1:13785 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:50:08 [ localhost-startStop-1:13811 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:50:08 [ localhost-startStop-1:13811 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:50:08 [ localhost-startStop-1:13813 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:50:08 [ localhost-startStop-1:13813 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:50:08 [ localhost-startStop-1:13815 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:50:08 [ localhost-startStop-1:13834 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:50:08 [ localhost-startStop-1:13837 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:50:08 [ localhost-startStop-1:13841 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:50:08 [ localhost-startStop-1:13951 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:50:08 [ localhost-startStop-1:13954 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:50:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:50:08 [ localhost-startStop-1:13956 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:50:08 [ localhost-startStop-1:14027 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:08 [ localhost-startStop-1:14029 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:08 [ localhost-startStop-1:14029 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:08 [ localhost-startStop-1:14063 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:50:08 [ localhost-startStop-1:14273 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:50:08 [ localhost-startStop-1:14275 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:50:08 [ localhost-startStop-1:14277 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:08 [ localhost-startStop-1:14278 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:08 [ localhost-startStop-1:14280 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14283 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:50:08 [ localhost-startStop-1:14285 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:08 [ localhost-startStop-1:14286 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14286 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:08 [ localhost-startStop-1:14287 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:08 [ localhost-startStop-1:14287 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14287 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:50:08 [ localhost-startStop-1:14287 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14289 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14289 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:50:08 [ localhost-startStop-1:14289 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14290 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14290 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:50:08 [ localhost-startStop-1:14291 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:50:08 [ localhost-startStop-1:14291 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14294 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14295 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:08 [ localhost-startStop-1:14295 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14296 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14296 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:50:08 [ localhost-startStop-1:14297 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14297 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14302 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14303 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14303 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14303 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:08 [ localhost-startStop-1:14306 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14307 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14307 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14307 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14308 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14312 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14314 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14315 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14315 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14317 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14319 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14320 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14321 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14321 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14321 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14322 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14322 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:50:08 [ localhost-startStop-1:14339 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14341 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14341 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14341 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14342 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14342 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14342 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14343 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14343 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14343 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14343 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14344 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14344 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:08 [ localhost-startStop-1:14506 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:50:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:50:09 [ localhost-startStop-1:14755 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:50:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:50:09 [ localhost-startStop-1:15166 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:50:09 [ localhost-startStop-1:15186 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:50:09 [ localhost-startStop-1:15331 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 1380 ms
2018-07-05 16:50:48 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:50:48 [ localhost-startStop-1:46 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:50:48 CST 2018]; root of context hierarchy
2018-07-05 16:50:48 [ localhost-startStop-1:81 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:50:49 [ localhost-startStop-1:416 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:50:49 [ localhost-startStop-1:691 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:50:49 [ localhost-startStop-1:734 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:50:49 [ localhost-startStop-1:918 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:50:49 [ localhost-startStop-1:1098 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:49 [ localhost-startStop-1:1102 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:49 [ localhost-startStop-1:1104 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:50:49 [ localhost-startStop-1:1117 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:50:50 [ localhost-startStop-1:1143 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:50:50 [ localhost-startStop-1:1195 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:50:50 [ localhost-startStop-1:1634 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1634 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1634 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1634 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1634 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:50 [ localhost-startStop-1:1635 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:50:50 [ localhost-startStop-1:1842 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:50:51 [ localhost-startStop-1:2447 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:51 [ localhost-startStop-1:2619 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:50:51 [ localhost-startStop-1:3111 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:50:51 [ localhost-startStop-1:3112 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3765 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3768 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3783 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3787 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3789 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3794 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3797 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3802 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3806 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3811 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3820 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3826 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3828 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3830 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3831 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3845 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3853 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3859 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3870 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3884 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:3958 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:50:52 [ localhost-startStop-1:4129 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:52 [ localhost-startStop-1:4131 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4136 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4139 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4212 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2d3be905' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4797 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3daf0f30' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4802 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#18477fa' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4802 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#468dc901' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4806 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#348c6314' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4867 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4898 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4901 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4909 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4912 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4957 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4982 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:4984 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:5004 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:5006 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:5018 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:5021 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:53 [ localhost-startStop-1:5129 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:54 [ localhost-startStop-1:5190 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:54 [ localhost-startStop-1:5200 ] - [ INFO ] Bean 'util:map#e3cb125' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:50:54 [ localhost-startStop-1:5203 ] - [ INFO ] Bean 'util:map#e3cb125' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:51:00 [ localhost-startStop-1:11518 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:51:00 [ localhost-startStop-1:11523 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:00 [ localhost-startStop-1:11526 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:00 [ localhost-startStop-1:11527 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:51:00 [ localhost-startStop-1:11530 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11538 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:51:00 [ localhost-startStop-1:11542 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:00 [ localhost-startStop-1:11545 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11547 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:00 [ localhost-startStop-1:11547 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11548 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:51:00 [ localhost-startStop-1:11550 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:00 [ localhost-startStop-1:11550 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11558 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11559 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11564 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:00 [ localhost-startStop-1:11567 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11569 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11570 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:51:00 [ localhost-startStop-1:11571 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:51:00 [ localhost-startStop-1:11583 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11583 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:00 [ localhost-startStop-1:11584 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11588 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:51:00 [ localhost-startStop-1:11590 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11593 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11597 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11600 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11603 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11605 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11605 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:00 [ localhost-startStop-1:11606 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11608 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11609 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11610 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11610 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11616 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11618 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11618 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11620 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11628 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11629 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11629 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11630 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11631 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11632 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11634 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11635 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:51:00 [ localhost-startStop-1:11652 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11658 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11663 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11663 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11664 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11665 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11665 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11665 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11666 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11666 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11666 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11667 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:11667 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:00 [ localhost-startStop-1:12036 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:50:48 CST 2018]; root of context hierarchy
2018-07-05 16:51:01 [ localhost-startStop-1:12288 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:50:48 CST 2018]; root of context hierarchy
2018-07-05 16:51:01 [ localhost-startStop-1:12837 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:51:01 [ localhost-startStop-1:13096 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:51:02 [ localhost-startStop-1:13162 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:51:02 [ localhost-startStop-1:13262 ] - [ INFO ] Root WebApplicationContext: initialization completed in 13261 ms
2018-07-05 16:51:02 [ localhost-startStop-1:13305 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:51:02 [ localhost-startStop-1:13333 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:51:02 [ localhost-startStop-1:13333 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:51:02 [ localhost-startStop-1:13336 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:51:02 [ localhost-startStop-1:13336 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:51:02 [ localhost-startStop-1:13337 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:51:02 [ localhost-startStop-1:13359 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:51:02 [ localhost-startStop-1:13365 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:51:02 [ localhost-startStop-1:13370 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:51:02 [ localhost-startStop-1:13476 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:51:02 [ localhost-startStop-1:13479 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:51:02 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:51:02 [ localhost-startStop-1:13479 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:51:02 [ localhost-startStop-1:13552 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:51:02 [ localhost-startStop-1:13553 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:51:02 [ localhost-startStop-1:13554 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:51:02 [ localhost-startStop-1:13602 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:51:02 [ localhost-startStop-1:13804 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:51:02 [ localhost-startStop-1:13806 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:02 [ localhost-startStop-1:13806 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:02 [ localhost-startStop-1:13808 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:51:02 [ localhost-startStop-1:13809 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13810 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:51:02 [ localhost-startStop-1:13812 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:02 [ localhost-startStop-1:13815 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13816 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:02 [ localhost-startStop-1:13816 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13817 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:51:02 [ localhost-startStop-1:13817 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:02 [ localhost-startStop-1:13817 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13822 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13822 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13822 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:51:02 [ localhost-startStop-1:13823 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13823 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13824 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:51:02 [ localhost-startStop-1:13824 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:51:02 [ localhost-startStop-1:13826 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13826 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:02 [ localhost-startStop-1:13827 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13827 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:51:02 [ localhost-startStop-1:13828 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13829 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13830 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13834 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13835 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13836 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13836 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:51:02 [ localhost-startStop-1:13840 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13840 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13841 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13841 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13842 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13843 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13844 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13844 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13844 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13849 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13852 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13852 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13853 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:51:02 [ localhost-startStop-1:13860 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13860 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13866 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13866 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13869 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13870 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13870 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13871 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:13871 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:51:02 [ localhost-startStop-1:14006 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:51:02 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:51:03 [ localhost-startStop-1:14222 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:51:02 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:51:03 [ localhost-startStop-1:14595 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:51:03 [ localhost-startStop-1:14614 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:51:03 [ localhost-startStop-1:14772 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 1296 ms
2018-07-05 16:52:00 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 16:52:00 [ localhost-startStop-1:68 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 16:52:00 CST 2018]; root of context hierarchy
2018-07-05 16:52:00 [ localhost-startStop-1:124 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:548 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:842 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:902 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:1086 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:1280 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:01 [ localhost-startStop-1:1281 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:01 [ localhost-startStop-1:1281 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:01 [ localhost-startStop-1:1285 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:1312 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 16:52:01 [ localhost-startStop-1:1371 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 16:52:02 [ localhost-startStop-1:2059 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2059 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2061 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2061 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2061 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2062 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2062 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2062 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2062 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2063 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 16:52:02 [ localhost-startStop-1:2063 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 16:52:02 [ localhost-startStop-1:2343 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:52:03 [ localhost-startStop-1:3061 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:03 [ localhost-startStop-1:3263 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 16:52:04 [ localhost-startStop-1:3743 ] - [ INFO ] {dataSource-1} inited
2018-07-05 16:52:04 [ localhost-startStop-1:3743 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4419 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4423 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4436 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4439 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4442 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4448 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4460 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4466 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4473 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:04 [ localhost-startStop-1:4483 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4487 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4493 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4498 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4501 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4505 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4525 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4536 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4554 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4568 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4576 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4669 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:52:05 [ localhost-startStop-1:4887 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4896 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4905 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:4908 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:05 [ localhost-startStop-1:5056 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#3d3b0533' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5690 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3d5222fa' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5695 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3a38abbb' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5701 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#19126603' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5707 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#7ce5fa8f' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5813 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5856 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5867 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5879 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5883 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:5972 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6013 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6016 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6041 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6046 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6054 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6061 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6246 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6405 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6435 ] - [ INFO ] Bean 'util:map#fee6950' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:06 [ localhost-startStop-1:6441 ] - [ INFO ] Bean 'util:map#fee6950' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 16:52:14 [ localhost-startStop-1:13598 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:52:14 [ localhost-startStop-1:13608 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:14 [ localhost-startStop-1:13610 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13611 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:14 [ localhost-startStop-1:13611 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:52:14 [ localhost-startStop-1:13615 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:52:14 [ localhost-startStop-1:13617 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13618 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:14 [ localhost-startStop-1:13619 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:52:14 [ localhost-startStop-1:13619 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13620 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:14 [ localhost-startStop-1:13622 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13623 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:14 [ localhost-startStop-1:13628 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13630 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13631 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:14 [ localhost-startStop-1:13633 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13636 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:52:14 [ localhost-startStop-1:13637 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:52:14 [ localhost-startStop-1:13637 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13641 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13644 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:52:14 [ localhost-startStop-1:13647 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13659 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13666 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:14 [ localhost-startStop-1:13668 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13671 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13674 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:14 [ localhost-startStop-1:13675 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13678 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13679 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13681 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13684 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13684 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13685 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13686 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13689 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13689 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13691 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13691 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13692 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13692 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13693 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13693 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13694 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13695 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:52:14 [ localhost-startStop-1:13699 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13700 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13700 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13701 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13702 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13704 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13704 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13705 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13705 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13706 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13706 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13709 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:13710 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:14 [ localhost-startStop-1:14433 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:52:00 CST 2018]; root of context hierarchy
2018-07-05 16:52:15 [ localhost-startStop-1:14900 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 16:52:00 CST 2018]; root of context hierarchy
2018-07-05 16:52:16 [ localhost-startStop-1:16046 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:52:17 [ localhost-startStop-1:16555 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 16:52:17 [ localhost-startStop-1:16689 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 16:52:17 [ localhost-startStop-1:17023 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17022 ms
2018-07-05 16:52:17 [ localhost-startStop-1:17074 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 16:52:17 [ localhost-startStop-1:17125 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 16:52:17 [ localhost-startStop-1:17125 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 16:52:17 [ localhost-startStop-1:17128 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 16:52:17 [ localhost-startStop-1:17129 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 16:52:17 [ localhost-startStop-1:17131 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 16:52:17 [ localhost-startStop-1:17161 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:52:17 [ localhost-startStop-1:17165 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:52:17 [ localhost-startStop-1:17168 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:52:17 [ localhost-startStop-1:17368 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 16:52:17 [ localhost-startStop-1:17373 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:52:17 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:52:17 [ localhost-startStop-1:17374 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 16:52:17 [ localhost-startStop-1:17425 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:17 [ localhost-startStop-1:17426 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:17 [ localhost-startStop-1:17426 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 16:52:17 [ localhost-startStop-1:17459 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 16:52:18 [ localhost-startStop-1:17818 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:52:18 [ localhost-startStop-1:17820 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:18 [ localhost-startStop-1:17822 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17824 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:18 [ localhost-startStop-1:17824 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 16:52:18 [ localhost-startStop-1:17828 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 16:52:18 [ localhost-startStop-1:17829 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17829 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:18 [ localhost-startStop-1:17830 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 16:52:18 [ localhost-startStop-1:17831 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17831 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:18 [ localhost-startStop-1:17831 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17832 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:18 [ localhost-startStop-1:17834 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17836 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17837 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 16:52:18 [ localhost-startStop-1:17837 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17838 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 16:52:18 [ localhost-startStop-1:17840 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 16:52:18 [ localhost-startStop-1:17840 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17842 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17843 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 16:52:18 [ localhost-startStop-1:17843 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17843 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17844 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:18 [ localhost-startStop-1:17846 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17846 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17855 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 16:52:18 [ localhost-startStop-1:17857 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17857 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17858 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17859 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17860 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17861 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17861 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17862 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17863 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17864 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17864 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17864 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17866 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17867 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17882 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17884 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17886 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17888 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17889 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17891 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 16:52:18 [ localhost-startStop-1:17899 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17901 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17903 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17906 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17908 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17910 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17918 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17919 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17921 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17921 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17922 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17922 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:17923 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:52:18 [ localhost-startStop-1:18398 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:52:17 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:52:19 [ localhost-startStop-1:18734 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 16:52:17 CST 2018]; parent: Root WebApplicationContext
2018-07-05 16:52:20 [ localhost-startStop-1:19575 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 16:52:20 [ localhost-startStop-1:19604 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 16:52:20 [ localhost-startStop-1:19959 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2590 ms
2018-07-05 16:58:01 [ http-bio-8080-exec-1:360830 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 16:58:01 [ http-bio-8080-exec-1:360843 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 16:58:01 [ DefaultQuartzScheduler_Worker-1:360859 ] - [ INFO ] Validating all active sessions...
2018-07-05 16:58:01 [ DefaultQuartzScheduler_Worker-1:360873 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 16:58:01 [ http-bio-8080-exec-1:360902 ] - [ WARN ] Request method 'GET' not supported
2018-07-05 16:58:42 [ http-bio-8080-exec-4:402274 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 16:59:06 [ http-bio-8080-exec-5:426253 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 17:00:14 [ http-bio-8080-exec-7:494319 ] - [ INFO ] 前端请求参数: http://192.168.105.171:8080/financialSys/login?password=12345aA&username=aa&
2018-07-05 17:01:34 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 17:01:34 [ localhost-startStop-1:80 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 17:01:34 CST 2018]; root of context hierarchy
2018-07-05 17:01:34 [ localhost-startStop-1:143 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 17:01:35 [ localhost-startStop-1:669 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 17:01:35 [ localhost-startStop-1:967 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 17:01:35 [ localhost-startStop-1:1055 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 17:01:36 [ localhost-startStop-1:1353 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 17:01:36 [ localhost-startStop-1:1630 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:36 [ localhost-startStop-1:1636 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:36 [ localhost-startStop-1:1637 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:36 [ localhost-startStop-1:1642 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 17:01:36 [ localhost-startStop-1:1683 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 17:01:36 [ localhost-startStop-1:1729 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 17:01:37 [ localhost-startStop-1:2645 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2645 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2646 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2655 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2655 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2659 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2660 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 17:01:37 [ localhost-startStop-1:2660 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 17:01:37 [ localhost-startStop-1:2967 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 17:01:38 [ localhost-startStop-1:3662 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:38 [ localhost-startStop-1:3833 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 17:01:39 [ localhost-startStop-1:4392 ] - [ INFO ] {dataSource-1} inited
2018-07-05 17:01:39 [ localhost-startStop-1:4392 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5199 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5202 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5218 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5224 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5232 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5236 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5240 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5243 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5249 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5252 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:39 [ localhost-startStop-1:5256 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5293 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5302 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5307 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5310 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5345 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5373 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5376 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5413 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5422 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5555 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 17:01:40 [ localhost-startStop-1:5904 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5909 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5920 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:5925 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:40 [ localhost-startStop-1:6101 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#78a26226' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:6911 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#289d69a' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:6920 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#f3cc5af' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:6924 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#2b416519' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:6935 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#40198105' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:7097 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:7139 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:7162 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:7167 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:41 [ localhost-startStop-1:7172 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7288 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7334 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7337 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7390 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7395 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7401 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7407 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7584 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7702 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7728 ] - [ INFO ] Bean 'util:map#6e92b87d' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:42 [ localhost-startStop-1:7732 ] - [ INFO ] Bean 'util:map#6e92b87d' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 17:01:49 [ localhost-startStop-1:14971 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 17:01:49 [ localhost-startStop-1:14973 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:49 [ localhost-startStop-1:14974 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 17:01:49 [ localhost-startStop-1:14974 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:49 [ localhost-startStop-1:14975 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:14987 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 17:01:49 [ localhost-startStop-1:14987 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:14987 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:14988 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:49 [ localhost-startStop-1:14988 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 17:01:49 [ localhost-startStop-1:14990 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:49 [ localhost-startStop-1:14992 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:49 [ localhost-startStop-1:14993 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15000 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15001 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15002 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:49 [ localhost-startStop-1:15006 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15007 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 17:01:49 [ localhost-startStop-1:15007 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 17:01:49 [ localhost-startStop-1:15008 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15011 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15013 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15016 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 17:01:49 [ localhost-startStop-1:15020 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15021 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15021 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:49 [ localhost-startStop-1:15022 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15030 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15031 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15032 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15033 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15035 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:49 [ localhost-startStop-1:15035 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15036 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15036 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15037 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15039 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15039 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15040 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15041 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15043 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15044 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15045 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15045 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15046 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15046 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15047 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15048 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 17:01:49 [ localhost-startStop-1:15051 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15052 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15052 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15053 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15053 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15054 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15055 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15055 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15055 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15056 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15056 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15057 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:49 [ localhost-startStop-1:15057 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:50 [ localhost-startStop-1:15819 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 17:01:34 CST 2018]; root of context hierarchy
2018-07-05 17:01:51 [ localhost-startStop-1:16520 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 17:01:34 CST 2018]; root of context hierarchy
2018-07-05 17:01:52 [ localhost-startStop-1:18039 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 17:01:53 [ localhost-startStop-1:18884 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 17:01:53 [ localhost-startStop-1:19122 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 17:01:54 [ localhost-startStop-1:19434 ] - [ INFO ] Root WebApplicationContext: initialization completed in 19433 ms
2018-07-05 17:01:54 [ localhost-startStop-1:19499 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 17:01:54 [ localhost-startStop-1:19535 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 17:01:54 [ localhost-startStop-1:19535 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 17:01:54 [ localhost-startStop-1:19537 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 17:01:54 [ localhost-startStop-1:19537 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 17:01:54 [ localhost-startStop-1:19537 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 17:01:54 [ localhost-startStop-1:19557 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 17:01:54 [ localhost-startStop-1:19559 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 17:01:54 [ localhost-startStop-1:19561 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 17:01:54 [ localhost-startStop-1:19709 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 17:01:54 [ localhost-startStop-1:19713 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 17:01:54 CST 2018]; parent: Root WebApplicationContext
2018-07-05 17:01:54 [ localhost-startStop-1:19716 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 17:01:54 [ localhost-startStop-1:19775 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:54 [ localhost-startStop-1:19775 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:54 [ localhost-startStop-1:19775 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 17:01:54 [ localhost-startStop-1:19803 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 17:01:54 [ localhost-startStop-1:20138 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 17:01:54 [ localhost-startStop-1:20138 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:54 [ localhost-startStop-1:20138 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 17:01:54 [ localhost-startStop-1:20139 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:54 [ localhost-startStop-1:20140 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20141 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 17:01:54 [ localhost-startStop-1:20141 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20142 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20142 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:54 [ localhost-startStop-1:20142 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 17:01:54 [ localhost-startStop-1:20143 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:54 [ localhost-startStop-1:20143 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:54 [ localhost-startStop-1:20144 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20145 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20145 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20146 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 17:01:54 [ localhost-startStop-1:20149 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20150 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 17:01:54 [ localhost-startStop-1:20150 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 17:01:54 [ localhost-startStop-1:20150 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20152 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20152 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20153 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 17:01:54 [ localhost-startStop-1:20153 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20154 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20154 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:54 [ localhost-startStop-1:20155 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20158 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20158 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20158 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20159 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20159 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 17:01:54 [ localhost-startStop-1:20160 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20160 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20160 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20161 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20169 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20170 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20170 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20170 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20177 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20178 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20178 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20178 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20179 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20180 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20180 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20181 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 17:01:54 [ localhost-startStop-1:20186 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20187 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20187 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20187 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20189 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20189 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20189 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20189 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:54 [ localhost-startStop-1:20190 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:01:55 [ localhost-startStop-1:20587 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 17:01:54 CST 2018]; parent: Root WebApplicationContext
2018-07-05 17:01:55 [ localhost-startStop-1:20984 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 17:01:54 CST 2018]; parent: Root WebApplicationContext
2018-07-05 17:01:56 [ localhost-startStop-1:21830 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 17:01:56 [ localhost-startStop-1:21864 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 17:01:56 [ localhost-startStop-1:22245 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2536 ms
2018-07-05 18:00:19 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:00:19 [ localhost-startStop-1:76 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:00:19 CST 2018]; root of context hierarchy
2018-07-05 18:00:19 [ localhost-startStop-1:133 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:00:19 [ localhost-startStop-1:772 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1055 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1135 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1298 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1463 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:20 [ localhost-startStop-1:1465 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:20 [ localhost-startStop-1:1466 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:20 [ localhost-startStop-1:1471 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1495 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:00:20 [ localhost-startStop-1:1544 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:00:21 [ localhost-startStop-1:2320 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2320 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2321 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2321 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2321 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2325 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2327 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2330 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2334 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2337 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2339 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2340 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2341 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:00:21 [ localhost-startStop-1:2341 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:00:22 [ localhost-startStop-1:3021 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:00:22 [ localhost-startStop-1:3816 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:23 [ localhost-startStop-1:4180 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:00:23 [ localhost-startStop-1:4663 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:00:23 [ localhost-startStop-1:4663 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5398 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5402 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5412 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5416 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5421 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5427 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5432 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5436 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5441 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5445 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5451 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5461 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5466 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5470 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5473 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5493 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5500 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5512 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5540 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5545 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5627 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:00:24 [ localhost-startStop-1:5855 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5859 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:24 [ localhost-startStop-1:5869 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:5875 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6006 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#725dac9' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6313 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#1959276e' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6317 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#69e8cdd0' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6320 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#570142e9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6324 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#7e5b3952' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6407 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6452 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6460 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6468 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6474 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6607 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6656 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6662 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6688 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6695 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6701 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:25 [ localhost-startStop-1:6709 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:26 [ localhost-startStop-1:6875 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:26 [ localhost-startStop-1:7003 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:26 [ localhost-startStop-1:7043 ] - [ INFO ] Bean 'util:map#66c51c39' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:26 [ localhost-startStop-1:7048 ] - [ INFO ] Bean 'util:map#66c51c39' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:00:33 [ localhost-startStop-1:14189 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:00:33 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14197 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:00:33 [ localhost-startStop-1:14197 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:33 [ localhost-startStop-1:14198 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:33 [ localhost-startStop-1:14201 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:00:33 [ localhost-startStop-1:14204 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:33 [ localhost-startStop-1:14207 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14208 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14210 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:33 [ localhost-startStop-1:14213 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14215 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:33 [ localhost-startStop-1:14216 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:00:33 [ localhost-startStop-1:14223 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14225 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:33 [ localhost-startStop-1:14226 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14227 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14230 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:00:33 [ localhost-startStop-1:14231 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:00:33 [ localhost-startStop-1:14232 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14234 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14235 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:33 [ localhost-startStop-1:14236 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14239 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14239 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14240 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:00:33 [ localhost-startStop-1:14241 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14257 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14259 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14260 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14261 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:33 [ localhost-startStop-1:14262 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14264 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14265 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14265 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14267 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14271 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14273 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14273 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14276 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14279 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14280 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14282 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14283 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14286 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14287 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14292 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14294 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:00:33 [ localhost-startStop-1:14300 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14301 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14310 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14311 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14312 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14312 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14313 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14313 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14314 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14315 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14316 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14316 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:33 [ localhost-startStop-1:14317 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:34 [ localhost-startStop-1:15121 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:00:19 CST 2018]; root of context hierarchy
2018-07-05 18:00:34 [ localhost-startStop-1:15625 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:00:19 CST 2018]; root of context hierarchy
2018-07-05 18:00:35 [ localhost-startStop-1:16808 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:00:36 [ localhost-startStop-1:17327 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:00:36 [ localhost-startStop-1:17462 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:00:36 [ localhost-startStop-1:17795 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17795 ms
2018-07-05 18:00:37 [ localhost-startStop-1:18264 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:00:37 [ localhost-startStop-1:18322 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:00:37 [ localhost-startStop-1:18322 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:00:37 [ localhost-startStop-1:18326 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:00:37 [ localhost-startStop-1:18326 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:00:37 [ localhost-startStop-1:18327 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:00:37 [ localhost-startStop-1:18359 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:00:37 [ localhost-startStop-1:18362 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:00:37 [ localhost-startStop-1:18366 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:00:37 [ localhost-startStop-1:18506 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:00:37 [ localhost-startStop-1:18512 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:00:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:00:37 [ localhost-startStop-1:18513 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:00:37 [ localhost-startStop-1:18592 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:37 [ localhost-startStop-1:18594 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:37 [ localhost-startStop-1:18597 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:00:37 [ localhost-startStop-1:18631 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:00:38 [ localhost-startStop-1:19013 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:00:38 [ localhost-startStop-1:19014 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19015 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:00:38 [ localhost-startStop-1:19016 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:38 [ localhost-startStop-1:19016 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:38 [ localhost-startStop-1:19019 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:00:38 [ localhost-startStop-1:19020 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:38 [ localhost-startStop-1:19020 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19020 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19021 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:38 [ localhost-startStop-1:19021 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19021 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:38 [ localhost-startStop-1:19022 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:00:38 [ localhost-startStop-1:19024 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19025 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:00:38 [ localhost-startStop-1:19026 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19026 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19027 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:00:38 [ localhost-startStop-1:19028 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:00:38 [ localhost-startStop-1:19028 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19030 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19031 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:38 [ localhost-startStop-1:19031 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19032 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19033 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19034 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:00:38 [ localhost-startStop-1:19036 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19041 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19043 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19044 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19044 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:00:38 [ localhost-startStop-1:19048 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19048 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19050 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19052 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19054 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19056 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19057 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19057 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19058 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19060 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19062 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19063 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19064 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19064 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19067 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19068 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19069 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:00:38 [ localhost-startStop-1:19079 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19079 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19080 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19080 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19082 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19085 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19087 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19087 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19089 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19090 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19091 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19091 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19091 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:00:38 [ localhost-startStop-1:19537 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:00:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:00:39 [ localhost-startStop-1:20064 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:00:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:00:40 [ localhost-startStop-1:20953 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:00:40 [ localhost-startStop-1:20985 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:00:40 [ localhost-startStop-1:21408 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2899 ms
2018-07-05 18:00:46 [ http-bio-8080-exec-1:27642 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:00:46 [ http-bio-8080-exec-1:27648 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:00:46 [ DefaultQuartzScheduler_Worker-1:27661 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:00:46 [ DefaultQuartzScheduler_Worker-1:27675 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:00:46 [ http-bio-8080-exec-1:27728 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:01:41 [ http-bio-8080-exec-3:82339 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:02:40 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:02:40 [ localhost-startStop-1:76 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:02:40 CST 2018]; root of context hierarchy
2018-07-05 18:02:40 [ localhost-startStop-1:145 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:02:41 [ localhost-startStop-1:536 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:02:41 [ localhost-startStop-1:792 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:02:41 [ localhost-startStop-1:859 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:02:41 [ localhost-startStop-1:1130 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:02:42 [ localhost-startStop-1:1303 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:42 [ localhost-startStop-1:1304 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:42 [ localhost-startStop-1:1305 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:42 [ localhost-startStop-1:1308 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:02:42 [ localhost-startStop-1:1336 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:02:42 [ localhost-startStop-1:1393 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:02:42 [ localhost-startStop-1:2001 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2002 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2003 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2006 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2008 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2010 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2012 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2014 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2016 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2021 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2023 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2024 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2024 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:02:42 [ localhost-startStop-1:2024 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:02:43 [ localhost-startStop-1:2408 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:02:44 [ localhost-startStop-1:3295 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:44 [ localhost-startStop-1:3480 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:02:44 [ localhost-startStop-1:3922 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:02:44 [ localhost-startStop-1:3924 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4594 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4599 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4608 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4611 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4616 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4619 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4621 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4625 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4629 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4638 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4642 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4650 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4654 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4657 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4659 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4676 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4683 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4688 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4706 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4715 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:4801 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:02:45 [ localhost-startStop-1:4997 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:5002 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:5012 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:5017 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:45 [ localhost-startStop-1:5145 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#384bb0de' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5791 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#22671993' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5793 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#48e4535c' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5795 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#6cf83a30' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5799 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#950ba31' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5897 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5948 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5960 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5967 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:5972 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6053 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6093 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6096 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6118 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6122 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6125 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:46 [ localhost-startStop-1:6128 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:47 [ localhost-startStop-1:6284 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:47 [ localhost-startStop-1:6378 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:47 [ localhost-startStop-1:6421 ] - [ INFO ] Bean 'util:map#56ff8833' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:47 [ localhost-startStop-1:6425 ] - [ INFO ] Bean 'util:map#56ff8833' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:02:54 [ localhost-startStop-1:13685 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:02:54 [ localhost-startStop-1:13687 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:54 [ localhost-startStop-1:13687 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:54 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:02:54 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13698 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:02:54 [ localhost-startStop-1:13698 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:02:54 [ localhost-startStop-1:13699 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:54 [ localhost-startStop-1:13699 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13700 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:54 [ localhost-startStop-1:13700 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13701 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:54 [ localhost-startStop-1:13702 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13712 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13712 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:54 [ localhost-startStop-1:13713 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13714 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13726 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:02:54 [ localhost-startStop-1:13726 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:02:54 [ localhost-startStop-1:13727 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13730 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13731 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:02:54 [ localhost-startStop-1:13733 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13735 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13735 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:54 [ localhost-startStop-1:13736 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13737 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13739 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13740 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13740 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13741 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13741 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:54 [ localhost-startStop-1:13741 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13742 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13742 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13746 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13748 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13748 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13749 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13749 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13751 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13751 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13752 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13752 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13753 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13753 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13753 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13755 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:02:54 [ localhost-startStop-1:13758 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13759 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13759 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13761 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13781 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13781 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13782 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13782 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13782 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13783 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13783 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13783 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:54 [ localhost-startStop-1:13784 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:55 [ localhost-startStop-1:14453 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:02:40 CST 2018]; root of context hierarchy
2018-07-05 18:02:55 [ localhost-startStop-1:14880 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:02:40 CST 2018]; root of context hierarchy
2018-07-05 18:02:56 [ localhost-startStop-1:16073 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:02:57 [ localhost-startStop-1:16728 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:02:57 [ localhost-startStop-1:16901 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:02:57 [ localhost-startStop-1:17206 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17206 ms
2018-07-05 18:02:58 [ localhost-startStop-1:17271 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:02:58 [ localhost-startStop-1:17329 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:02:58 [ localhost-startStop-1:17329 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:02:58 [ localhost-startStop-1:17331 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:02:58 [ localhost-startStop-1:17331 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:02:58 [ localhost-startStop-1:17332 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:02:58 [ localhost-startStop-1:17355 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:02:58 [ localhost-startStop-1:17358 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:02:58 [ localhost-startStop-1:17361 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:02:58 [ localhost-startStop-1:17554 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:02:58 [ localhost-startStop-1:17559 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:02:58 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:02:58 [ localhost-startStop-1:17560 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:02:58 [ localhost-startStop-1:17656 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:58 [ localhost-startStop-1:17658 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:58 [ localhost-startStop-1:17659 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:02:58 [ localhost-startStop-1:17700 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:02:58 [ localhost-startStop-1:18111 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:02:58 [ localhost-startStop-1:18112 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:58 [ localhost-startStop-1:18113 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:58 [ localhost-startStop-1:18114 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:02:58 [ localhost-startStop-1:18115 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18117 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:02:58 [ localhost-startStop-1:18117 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:02:58 [ localhost-startStop-1:18118 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:58 [ localhost-startStop-1:18120 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18121 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:58 [ localhost-startStop-1:18122 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18123 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:58 [ localhost-startStop-1:18123 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18126 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18126 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:02:58 [ localhost-startStop-1:18127 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18128 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18132 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:02:58 [ localhost-startStop-1:18133 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:02:58 [ localhost-startStop-1:18133 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18135 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18135 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:02:58 [ localhost-startStop-1:18136 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18137 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18139 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:58 [ localhost-startStop-1:18139 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18141 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18143 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18144 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18144 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18144 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18145 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:02:58 [ localhost-startStop-1:18146 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18146 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18147 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18147 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18149 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18149 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18150 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18150 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18152 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18152 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18153 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18153 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18153 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18154 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18154 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18155 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:02:58 [ localhost-startStop-1:18158 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18159 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18160 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18160 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18160 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18161 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18161 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18161 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18164 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18164 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:58 [ localhost-startStop-1:18165 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:02:59 [ localhost-startStop-1:18741 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:02:58 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:02:59 [ localhost-startStop-1:19159 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:02:58 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:03:00 [ localhost-startStop-1:20168 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:03:00 [ localhost-startStop-1:20205 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:03:01 [ localhost-startStop-1:20607 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3051 ms
2018-07-05 18:03:57 [ http-bio-8080-exec-1:76396 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:03:57 [ http-bio-8080-exec-1:76404 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:03:57 [ DefaultQuartzScheduler_Worker-1:76418 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:03:57 [ DefaultQuartzScheduler_Worker-1:76440 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:03:57 [ http-bio-8080-exec-1:76486 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:10:37 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:10:37 [ localhost-startStop-1:73 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:10:37 CST 2018]; root of context hierarchy
2018-07-05 18:10:37 [ localhost-startStop-1:133 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:10:38 [ localhost-startStop-1:740 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:10:38 [ localhost-startStop-1:1007 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:10:38 [ localhost-startStop-1:1074 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:10:38 [ localhost-startStop-1:1256 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:10:39 [ localhost-startStop-1:1430 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:39 [ localhost-startStop-1:1431 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:39 [ localhost-startStop-1:1432 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:39 [ localhost-startStop-1:1435 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:10:39 [ localhost-startStop-1:1484 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:10:39 [ localhost-startStop-1:1531 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:10:39 [ localhost-startStop-1:2181 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2182 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2183 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2183 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2183 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2183 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:10:39 [ localhost-startStop-1:2183 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:10:40 [ localhost-startStop-1:2645 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:10:40 [ localhost-startStop-1:3325 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:41 [ localhost-startStop-1:3495 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:10:41 [ localhost-startStop-1:3915 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:10:41 [ localhost-startStop-1:3915 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4614 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4619 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4631 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4637 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4640 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4643 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4650 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4656 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4665 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4676 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4681 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4685 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4693 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4696 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4699 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4721 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4735 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4740 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4763 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4770 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:4851 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:10:42 [ localhost-startStop-1:5081 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:5084 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:5106 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:5110 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:42 [ localhost-startStop-1:5240 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#30ff8cf6' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5601 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#738edd1b' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5604 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#b4264d7' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5607 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#4acd3f8a' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5614 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#6998219' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5683 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5714 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5724 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5729 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5734 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5817 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5870 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5872 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5893 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5897 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5906 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:5916 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:6076 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:6197 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:6223 ] - [ INFO ] Bean 'util:map#3839011c' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:43 [ localhost-startStop-1:6228 ] - [ INFO ] Bean 'util:map#3839011c' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:10:51 [ localhost-startStop-1:13879 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:10:51 [ localhost-startStop-1:13881 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:51 [ localhost-startStop-1:13882 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:51 [ localhost-startStop-1:13882 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13883 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:10:51 [ localhost-startStop-1:13887 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13887 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:10:51 [ localhost-startStop-1:13888 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13888 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:51 [ localhost-startStop-1:13889 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:51 [ localhost-startStop-1:13889 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:10:51 [ localhost-startStop-1:13890 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:51 [ localhost-startStop-1:13890 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13896 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13896 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:51 [ localhost-startStop-1:13897 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13897 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13898 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13898 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:10:51 [ localhost-startStop-1:13899 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:10:51 [ localhost-startStop-1:13901 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:10:51 [ localhost-startStop-1:13902 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13902 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13903 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13903 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13904 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:51 [ localhost-startStop-1:13907 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:13947 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13951 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13958 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13959 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13960 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13964 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13965 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13965 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:51 [ localhost-startStop-1:13966 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13976 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13978 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13981 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13983 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13990 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13992 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13993 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13993 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13995 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13996 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:13998 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14000 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:10:51 [ localhost-startStop-1:14030 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14031 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14046 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14048 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14048 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14049 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14049 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14050 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14051 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14051 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14052 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14053 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:51 [ localhost-startStop-1:14054 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:52 [ localhost-startStop-1:14965 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:10:37 CST 2018]; root of context hierarchy
2018-07-05 18:10:52 [ localhost-startStop-1:15417 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:10:37 CST 2018]; root of context hierarchy
2018-07-05 18:10:54 [ localhost-startStop-1:16816 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:10:54 [ localhost-startStop-1:17321 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:10:55 [ localhost-startStop-1:17452 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:10:55 [ localhost-startStop-1:18268 ] - [ INFO ] Root WebApplicationContext: initialization completed in 18268 ms
2018-07-05 18:10:55 [ localhost-startStop-1:18334 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:10:55 [ localhost-startStop-1:18403 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:10:55 [ localhost-startStop-1:18403 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:10:55 [ localhost-startStop-1:18407 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:10:55 [ localhost-startStop-1:18407 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:10:55 [ localhost-startStop-1:18413 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:10:56 [ localhost-startStop-1:18443 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:10:56 [ localhost-startStop-1:18446 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:10:56 [ localhost-startStop-1:18449 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:10:56 [ localhost-startStop-1:18620 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:10:56 [ localhost-startStop-1:18624 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:10:56 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:10:56 [ localhost-startStop-1:18624 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:10:56 [ localhost-startStop-1:18681 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:56 [ localhost-startStop-1:18683 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:56 [ localhost-startStop-1:18684 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:10:56 [ localhost-startStop-1:18718 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:10:56 [ localhost-startStop-1:19059 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:10:56 [ localhost-startStop-1:19060 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:56 [ localhost-startStop-1:19063 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:56 [ localhost-startStop-1:19065 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19067 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:10:56 [ localhost-startStop-1:19069 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19070 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:10:56 [ localhost-startStop-1:19070 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19072 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:56 [ localhost-startStop-1:19072 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:56 [ localhost-startStop-1:19073 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:10:56 [ localhost-startStop-1:19073 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:56 [ localhost-startStop-1:19074 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19076 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19076 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:10:56 [ localhost-startStop-1:19077 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19077 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19078 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19078 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:10:56 [ localhost-startStop-1:19079 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:10:56 [ localhost-startStop-1:19081 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:10:56 [ localhost-startStop-1:19081 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19082 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19082 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19083 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19084 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:56 [ localhost-startStop-1:19086 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19089 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19092 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19092 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19093 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19096 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19099 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19100 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19100 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:10:56 [ localhost-startStop-1:19101 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19103 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19105 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19105 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19106 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19108 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19113 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19113 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19114 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19114 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19114 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19115 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19116 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:10:56 [ localhost-startStop-1:19124 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19124 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19126 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19127 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19127 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19127 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19128 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19128 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19130 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19131 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19131 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19132 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:56 [ localhost-startStop-1:19132 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:10:57 [ localhost-startStop-1:19652 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:10:56 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:10:57 [ localhost-startStop-1:20028 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:10:56 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:10:58 [ localhost-startStop-1:20949 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:10:58 [ localhost-startStop-1:20984 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:10:58 [ localhost-startStop-1:21328 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2708 ms
2018-07-05 18:11:39 [ http-bio-8080-exec-1:61885 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:11:39 [ http-bio-8080-exec-1:61890 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:11:39 [ DefaultQuartzScheduler_Worker-1:61904 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:11:39 [ DefaultQuartzScheduler_Worker-1:61932 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:11:39 [ http-bio-8080-exec-1:61981 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:12:03 [ http-bio-8080-exec-3:85439 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:12:12 [ http-bio-8080-exec-5:94948 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:16:19 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:16:19 [ localhost-startStop-1:67 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:16:19 CST 2018]; root of context hierarchy
2018-07-05 18:16:19 [ localhost-startStop-1:121 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:16:20 [ localhost-startStop-1:538 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:16:20 [ localhost-startStop-1:802 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:16:20 [ localhost-startStop-1:849 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:16:20 [ localhost-startStop-1:1001 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:16:21 [ localhost-startStop-1:1352 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:21 [ localhost-startStop-1:1354 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:21 [ localhost-startStop-1:1355 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:21 [ localhost-startStop-1:1358 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:16:21 [ localhost-startStop-1:1394 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:16:21 [ localhost-startStop-1:1461 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:16:21 [ localhost-startStop-1:2163 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2163 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2163 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2163 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2163 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2168 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2171 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2173 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2175 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2176 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2176 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2177 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2177 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:16:21 [ localhost-startStop-1:2177 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:16:22 [ localhost-startStop-1:2549 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:16:23 [ localhost-startStop-1:3340 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:23 [ localhost-startStop-1:3629 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:16:23 [ localhost-startStop-1:4154 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:16:23 [ localhost-startStop-1:4156 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4919 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4923 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4934 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4938 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4941 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4944 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4948 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4951 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4954 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4958 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4963 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4969 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4974 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4979 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:4986 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5004 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5011 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5016 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5031 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5044 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:24 [ localhost-startStop-1:5126 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:16:25 [ localhost-startStop-1:5358 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:5360 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:5377 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:5381 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:5506 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2e1f97ee' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:6195 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#fb024bd' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:6198 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3153169f' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:6201 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#2adc0ec7' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:6205 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#782e5c95' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:25 [ localhost-startStop-1:6291 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6341 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6355 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6361 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6365 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6449 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6488 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6491 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6520 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6526 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6533 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6537 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6694 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6804 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6840 ] - [ INFO ] Bean 'util:map#611c30fb' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:26 [ localhost-startStop-1:6846 ] - [ INFO ] Bean 'util:map#611c30fb' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:16:33 [ localhost-startStop-1:14073 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:16:33 [ localhost-startStop-1:14078 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:16:33 [ localhost-startStop-1:14080 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:33 [ localhost-startStop-1:14083 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14086 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:33 [ localhost-startStop-1:14094 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:16:33 [ localhost-startStop-1:14096 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:33 [ localhost-startStop-1:14098 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:33 [ localhost-startStop-1:14099 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14099 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:16:33 [ localhost-startStop-1:14099 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14100 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:33 [ localhost-startStop-1:14102 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14109 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14111 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14111 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:33 [ localhost-startStop-1:14112 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14113 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14116 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:16:33 [ localhost-startStop-1:14118 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:16:33 [ localhost-startStop-1:14122 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14129 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:16:33 [ localhost-startStop-1:14135 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14137 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:33 [ localhost-startStop-1:14139 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14142 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14143 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14148 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14151 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14154 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14154 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14156 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14158 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14159 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14159 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:33 [ localhost-startStop-1:14160 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14163 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14163 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14164 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14164 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14167 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14169 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14170 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14171 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14172 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14175 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:16:33 [ localhost-startStop-1:14180 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14186 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14191 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14192 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14192 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14193 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14193 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14201 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14202 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:33 [ localhost-startStop-1:14202 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:34 [ localhost-startStop-1:15013 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:16:19 CST 2018]; root of context hierarchy
2018-07-05 18:16:35 [ localhost-startStop-1:15455 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:16:19 CST 2018]; root of context hierarchy
2018-07-05 18:16:36 [ localhost-startStop-1:16573 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:16:36 [ localhost-startStop-1:17045 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:16:36 [ localhost-startStop-1:17191 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:16:37 [ localhost-startStop-1:17512 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17512 ms
2018-07-05 18:16:37 [ localhost-startStop-1:17570 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:16:37 [ localhost-startStop-1:17608 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:16:37 [ localhost-startStop-1:17608 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:16:37 [ localhost-startStop-1:17610 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:16:37 [ localhost-startStop-1:17610 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:16:37 [ localhost-startStop-1:17610 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:16:37 [ localhost-startStop-1:17633 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:16:37 [ localhost-startStop-1:17635 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:16:37 [ localhost-startStop-1:17638 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:16:37 [ localhost-startStop-1:17822 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:16:37 [ localhost-startStop-1:17825 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:16:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:16:37 [ localhost-startStop-1:17825 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:16:37 [ localhost-startStop-1:17881 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:37 [ localhost-startStop-1:17883 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:37 [ localhost-startStop-1:17884 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:16:37 [ localhost-startStop-1:17909 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:16:37 [ localhost-startStop-1:18219 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:16:37 [ localhost-startStop-1:18220 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:16:37 [ localhost-startStop-1:18221 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:37 [ localhost-startStop-1:18222 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18223 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:37 [ localhost-startStop-1:18225 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:16:37 [ localhost-startStop-1:18226 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:37 [ localhost-startStop-1:18226 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:37 [ localhost-startStop-1:18227 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18227 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:16:37 [ localhost-startStop-1:18227 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18228 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:37 [ localhost-startStop-1:18228 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18229 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18230 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18230 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:16:37 [ localhost-startStop-1:18231 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18232 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18232 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:16:37 [ localhost-startStop-1:18232 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:16:37 [ localhost-startStop-1:18234 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18235 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:16:37 [ localhost-startStop-1:18235 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18235 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:37 [ localhost-startStop-1:18236 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18237 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18238 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18245 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18245 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18246 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18246 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18248 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18248 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18249 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18250 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:16:37 [ localhost-startStop-1:18251 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18252 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18253 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18254 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18254 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18256 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18259 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18259 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18260 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18260 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18260 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18261 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18263 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:16:37 [ localhost-startStop-1:18267 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18267 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18268 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18269 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18269 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18270 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18271 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18271 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18281 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18282 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18284 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18284 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:37 [ localhost-startStop-1:18285 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:16:38 [ localhost-startStop-1:18754 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:16:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:16:38 [ localhost-startStop-1:19112 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:16:37 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:16:39 [ localhost-startStop-1:19998 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:16:39 [ localhost-startStop-1:20035 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:16:40 [ localhost-startStop-1:20443 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2621 ms
2018-07-05 18:16:47 [ http-bio-8080-exec-1:27407 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:16:47 [ http-bio-8080-exec-1:27411 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:16:47 [ DefaultQuartzScheduler_Worker-1:27422 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:16:47 [ DefaultQuartzScheduler_Worker-1:27439 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:16:47 [ http-bio-8080-exec-1:27488 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:30:35 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:30:35 [ localhost-startStop-1:69 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:30:35 CST 2018]; root of context hierarchy
2018-07-05 18:30:35 [ localhost-startStop-1:125 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:544 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:816 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:886 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:1051 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:1215 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:36 [ localhost-startStop-1:1218 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:36 [ localhost-startStop-1:1219 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:36 [ localhost-startStop-1:1223 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:1250 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:30:36 [ localhost-startStop-1:1297 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:30:37 [ localhost-startStop-1:1917 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1917 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1917 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1918 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1918 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1919 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1921 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1923 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1927 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1929 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1931 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1933 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:30:37 [ localhost-startStop-1:1934 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:30:37 [ localhost-startStop-1:2253 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:30:38 [ localhost-startStop-1:2925 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:38 [ localhost-startStop-1:3096 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:30:39 [ localhost-startStop-1:3594 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:30:39 [ localhost-startStop-1:3596 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4257 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4261 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4273 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4279 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4284 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4288 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4294 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4299 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4303 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4310 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4317 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4322 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4326 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4330 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4333 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4356 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4362 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:39 [ localhost-startStop-1:4366 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4397 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4405 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4507 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:30:40 [ localhost-startStop-1:4694 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4701 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4710 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4717 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:40 [ localhost-startStop-1:4857 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#660b2651' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5418 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#433f008b' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5421 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#1adb85e5' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5425 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#62846e54' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5437 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#5d82f5fb' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5522 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5574 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5584 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5595 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5601 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5693 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5737 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5741 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5766 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5771 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5779 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5783 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:5954 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:6088 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:6120 ] - [ INFO ] Bean 'util:map#c004d55' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:41 [ localhost-startStop-1:6125 ] - [ INFO ] Bean 'util:map#c004d55' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:30:48 [ localhost-startStop-1:13334 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:30:48 [ localhost-startStop-1:13339 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:48 [ localhost-startStop-1:13342 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:48 [ localhost-startStop-1:13343 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13344 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:30:48 [ localhost-startStop-1:13347 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:30:48 [ localhost-startStop-1:13349 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:48 [ localhost-startStop-1:13351 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13351 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13352 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:48 [ localhost-startStop-1:13352 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:30:48 [ localhost-startStop-1:13352 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13353 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:48 [ localhost-startStop-1:13359 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:48 [ localhost-startStop-1:13360 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13360 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13361 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13361 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13362 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:30:48 [ localhost-startStop-1:13362 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:30:48 [ localhost-startStop-1:13366 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13367 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13368 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:30:48 [ localhost-startStop-1:13370 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13370 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13371 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:48 [ localhost-startStop-1:13372 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:30:48 [ localhost-startStop-1:13374 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13374 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13375 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13375 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13376 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13377 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13378 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:48 [ localhost-startStop-1:13378 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:48 [ localhost-startStop-1:13379 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13382 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13383 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13383 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13384 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13387 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13387 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13388 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13389 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13390 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13390 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13391 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13396 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:30:49 [ localhost-startStop-1:13404 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13404 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13406 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13407 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13408 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13408 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13409 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13410 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13410 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13410 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13411 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13411 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:13412 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:49 [ localhost-startStop-1:14191 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:30:35 CST 2018]; root of context hierarchy
2018-07-05 18:30:50 [ localhost-startStop-1:14638 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:30:35 CST 2018]; root of context hierarchy
2018-07-05 18:30:51 [ localhost-startStop-1:16070 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:30:52 [ localhost-startStop-1:16636 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:30:52 [ localhost-startStop-1:16759 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:30:52 [ localhost-startStop-1:17114 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17113 ms
2018-07-05 18:30:52 [ localhost-startStop-1:17192 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:30:52 [ localhost-startStop-1:17248 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:30:52 [ localhost-startStop-1:17249 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:30:52 [ localhost-startStop-1:17251 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:30:52 [ localhost-startStop-1:17252 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:30:52 [ localhost-startStop-1:17252 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:30:52 [ localhost-startStop-1:17271 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:30:52 [ localhost-startStop-1:17273 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:30:52 [ localhost-startStop-1:17276 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:30:53 [ localhost-startStop-1:17449 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:30:53 [ localhost-startStop-1:17452 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:30:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:30:53 [ localhost-startStop-1:17452 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:30:53 [ localhost-startStop-1:17497 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:53 [ localhost-startStop-1:17501 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:53 [ localhost-startStop-1:17502 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:30:53 [ localhost-startStop-1:17562 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:30:53 [ localhost-startStop-1:18040 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:30:53 [ localhost-startStop-1:18040 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:53 [ localhost-startStop-1:18044 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:53 [ localhost-startStop-1:18046 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18046 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:30:53 [ localhost-startStop-1:18048 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:30:53 [ localhost-startStop-1:18049 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:53 [ localhost-startStop-1:18049 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18050 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18050 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:53 [ localhost-startStop-1:18050 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:30:53 [ localhost-startStop-1:18051 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18051 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:53 [ localhost-startStop-1:18053 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:30:53 [ localhost-startStop-1:18055 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18057 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18060 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18061 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18062 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:30:53 [ localhost-startStop-1:18063 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:30:53 [ localhost-startStop-1:18065 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18065 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18067 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:30:53 [ localhost-startStop-1:18067 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18069 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18072 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:53 [ localhost-startStop-1:18075 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18080 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18082 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18084 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18085 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18087 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18090 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18090 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18091 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:30:53 [ localhost-startStop-1:18092 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18094 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18095 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18102 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18105 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18105 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18106 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18106 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18108 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18110 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18111 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:30:53 [ localhost-startStop-1:18114 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18115 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18115 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18116 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18116 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18116 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18117 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18118 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18119 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18120 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18121 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18121 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:53 [ localhost-startStop-1:18124 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:30:54 [ localhost-startStop-1:18596 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:30:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:30:54 [ localhost-startStop-1:18968 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:30:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:30:55 [ localhost-startStop-1:19758 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:30:55 [ localhost-startStop-1:19790 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:30:55 [ localhost-startStop-1:20172 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2723 ms
2018-07-05 18:31:08 [ http-bio-8080-exec-1:32904 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:31:08 [ http-bio-8080-exec-1:32909 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:31:08 [ DefaultQuartzScheduler_Worker-1:32923 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:31:08 [ DefaultQuartzScheduler_Worker-1:32939 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:31:08 [ http-bio-8080-exec-1:32992 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:31:45 [ http-bio-8080-exec-3:70036 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:32:14 [ http-bio-8080-exec-9:99146 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:36:47 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:36:48 [ localhost-startStop-1:71 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:36:48 CST 2018]; root of context hierarchy
2018-07-05 18:36:48 [ localhost-startStop-1:128 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:36:48 [ localhost-startStop-1:543 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:36:48 [ localhost-startStop-1:816 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:36:48 [ localhost-startStop-1:888 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:36:49 [ localhost-startStop-1:1046 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:36:49 [ localhost-startStop-1:1240 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:36:49 [ localhost-startStop-1:1240 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:36:49 [ localhost-startStop-1:1241 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:36:49 [ localhost-startStop-1:1244 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:36:49 [ localhost-startStop-1:1267 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:36:49 [ localhost-startStop-1:1332 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:36:49 [ localhost-startStop-1:1950 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1950 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1951 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1951 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1951 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1953 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1955 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1957 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1962 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1963 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1964 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1964 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1965 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:49 [ localhost-startStop-1:1965 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:36:50 [ localhost-startStop-1:2261 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:36:51 [ localhost-startStop-1:3297 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:51 [ localhost-startStop-1:3510 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:36:51 [ localhost-startStop-1:3982 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:36:51 [ localhost-startStop-1:3985 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4682 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4689 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4700 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4705 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4711 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4715 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4721 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4726 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4730 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4733 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4741 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4747 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4753 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4758 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4762 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4786 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4800 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4804 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4833 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4843 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:52 [ localhost-startStop-1:4942 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:36:53 [ localhost-startStop-1:5232 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5236 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5244 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5253 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5413 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#7d062c38' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5989 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#6504a776' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5992 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#47b4b083' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5996 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#385016a9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:53 [ localhost-startStop-1:5999 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#747b9a77' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6074 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6117 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6130 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6138 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6143 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6248 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6307 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6311 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6333 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6339 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6343 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6349 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6507 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6601 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6634 ] - [ INFO ] Bean 'util:map#1a6ca5b8' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:36:54 [ localhost-startStop-1:6640 ] - [ INFO ] Bean 'util:map#1a6ca5b8' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:37:02 [ localhost-startStop-1:14091 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:37:02 [ localhost-startStop-1:14097 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:02 [ localhost-startStop-1:14099 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14099 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:02 [ localhost-startStop-1:14101 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:37:02 [ localhost-startStop-1:14107 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:37:02 [ localhost-startStop-1:14111 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14111 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14112 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:02 [ localhost-startStop-1:14113 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:02 [ localhost-startStop-1:14114 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:37:02 [ localhost-startStop-1:14115 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:02 [ localhost-startStop-1:14117 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14123 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14125 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:02 [ localhost-startStop-1:14126 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14127 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14131 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14132 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:37:02 [ localhost-startStop-1:14132 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:37:02 [ localhost-startStop-1:14136 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:37:02 [ localhost-startStop-1:14137 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14139 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14141 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14145 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:02 [ localhost-startStop-1:14146 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14147 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14150 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14150 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14151 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14151 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14152 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14152 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14153 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14153 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:02 [ localhost-startStop-1:14154 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14165 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14167 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14171 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14172 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14173 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14173 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14175 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14176 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14177 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14180 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:37:02 [ localhost-startStop-1:14186 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14187 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14193 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14194 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14195 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14195 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14196 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14197 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14198 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14198 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14199 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:14200 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:02 [ localhost-startStop-1:15026 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:36:48 CST 2018]; root of context hierarchy
2018-07-05 18:37:03 [ localhost-startStop-1:15633 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:36:48 CST 2018]; root of context hierarchy
2018-07-05 18:37:04 [ localhost-startStop-1:17025 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:37:05 [ localhost-startStop-1:17680 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:37:05 [ localhost-startStop-1:17818 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:37:06 [ localhost-startStop-1:18177 ] - [ INFO ] Root WebApplicationContext: initialization completed in 18175 ms
2018-07-05 18:37:06 [ localhost-startStop-1:18237 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:37:06 [ localhost-startStop-1:18270 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:37:06 [ localhost-startStop-1:18271 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:37:06 [ localhost-startStop-1:18273 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:37:06 [ localhost-startStop-1:18273 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:37:06 [ localhost-startStop-1:18273 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:37:06 [ localhost-startStop-1:18292 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:37:06 [ localhost-startStop-1:18294 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:37:06 [ localhost-startStop-1:18298 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:37:06 [ localhost-startStop-1:18467 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:37:06 [ localhost-startStop-1:18470 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:37:06 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:37:06 [ localhost-startStop-1:18470 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:37:06 [ localhost-startStop-1:18527 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:37:06 [ localhost-startStop-1:18530 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:37:06 [ localhost-startStop-1:18533 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:37:06 [ localhost-startStop-1:18561 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:37:07 [ localhost-startStop-1:19167 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:37:07 [ localhost-startStop-1:19167 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:07 [ localhost-startStop-1:19169 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19171 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:07 [ localhost-startStop-1:19172 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:37:07 [ localhost-startStop-1:19176 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:37:07 [ localhost-startStop-1:19176 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19177 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19178 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:07 [ localhost-startStop-1:19178 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:07 [ localhost-startStop-1:19179 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:37:07 [ localhost-startStop-1:19179 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:07 [ localhost-startStop-1:19179 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19181 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19181 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:37:07 [ localhost-startStop-1:19182 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19182 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19183 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19184 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:37:07 [ localhost-startStop-1:19184 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:37:07 [ localhost-startStop-1:19186 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:37:07 [ localhost-startStop-1:19187 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19188 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19188 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19189 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:07 [ localhost-startStop-1:19190 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19193 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19204 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19205 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19205 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19205 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19206 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19207 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19207 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19208 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:37:07 [ localhost-startStop-1:19210 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19211 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19212 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19213 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19213 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19219 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19223 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19228 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19228 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19229 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19230 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19230 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19231 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:37:07 [ localhost-startStop-1:19237 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19237 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19239 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19240 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19242 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19243 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19244 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19244 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19247 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19247 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19248 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19249 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19249 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:37:07 [ localhost-startStop-1:19758 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:37:06 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:37:08 [ localhost-startStop-1:20239 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:37:06 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:37:09 [ localhost-startStop-1:21436 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:37:09 [ localhost-startStop-1:21473 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:37:09 [ localhost-startStop-1:21997 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3530 ms
2018-07-05 18:43:42 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:43:42 [ localhost-startStop-1:71 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:43:42 CST 2018]; root of context hierarchy
2018-07-05 18:43:42 [ localhost-startStop-1:128 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:43:43 [ localhost-startStop-1:481 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:43:43 [ localhost-startStop-1:796 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:43:43 [ localhost-startStop-1:860 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:43:43 [ localhost-startStop-1:1037 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:43:44 [ localhost-startStop-1:1256 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:43:44 [ localhost-startStop-1:1258 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:43:44 [ localhost-startStop-1:1259 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:43:44 [ localhost-startStop-1:1273 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:43:44 [ localhost-startStop-1:1311 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:43:44 [ localhost-startStop-1:1368 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:43:44 [ localhost-startStop-1:2108 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:43:44 [ localhost-startStop-1:2110 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:43:44 [ localhost-startStop-1:2112 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:43:45 [ localhost-startStop-1:2262 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2262 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2269 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2272 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2275 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2275 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2276 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2276 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2276 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2276 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2277 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2277 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2277 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:45 [ localhost-startStop-1:2286 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:43:45 [ localhost-startStop-1:2680 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:43:46 [ localhost-startStop-1:3437 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:46 [ localhost-startStop-1:3615 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:43:46 [ localhost-startStop-1:4035 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:43:46 [ localhost-startStop-1:4037 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4805 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4809 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4823 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4829 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4834 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4837 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4840 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4845 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4851 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4854 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4862 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4869 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4874 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4880 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4884 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4906 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4922 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4933 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4964 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:4972 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:47 [ localhost-startStop-1:5052 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:43:48 [ localhost-startStop-1:5326 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:5332 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:5342 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:5346 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:5490 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#3b11c555' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:6119 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#a3a1a20' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:6122 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3ad3f5aa' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:6125 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#e88b765' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:48 [ localhost-startStop-1:6128 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#3b86e08c' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6247 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6299 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6309 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6316 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6321 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6415 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6466 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6474 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6507 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6513 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6520 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6523 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6721 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6843 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6881 ] - [ INFO ] Bean 'util:map#3ce034b1' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:49 [ localhost-startStop-1:6886 ] - [ INFO ] Bean 'util:map#3ce034b1' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:43:56 [ localhost-startStop-1:14141 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:43:56 [ localhost-startStop-1:14145 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:43:56 [ localhost-startStop-1:14146 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:43:56 [ localhost-startStop-1:14147 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:56 [ localhost-startStop-1:14147 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14151 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:43:56 [ localhost-startStop-1:14153 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:56 [ localhost-startStop-1:14153 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:56 [ localhost-startStop-1:14156 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:43:56 [ localhost-startStop-1:14159 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:43:56 [ localhost-startStop-1:14161 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:56 [ localhost-startStop-1:14161 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:56 [ localhost-startStop-1:14162 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14168 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:43:56 [ localhost-startStop-1:14169 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14171 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14173 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14175 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:43:56 [ localhost-startStop-1:14178 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:43:56 [ localhost-startStop-1:14179 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:56 [ localhost-startStop-1:14182 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14185 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:56 [ localhost-startStop-1:14188 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:43:56 [ localhost-startStop-1:14191 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14192 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:56 [ localhost-startStop-1:14193 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14197 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:43:56 [ localhost-startStop-1:14208 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:56 [ localhost-startStop-1:14211 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14214 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14215 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14216 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:57 [ localhost-startStop-1:14217 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14218 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14219 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14220 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14223 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14227 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14229 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14232 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14239 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14241 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14243 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14246 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14248 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14252 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14253 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14258 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:43:57 [ localhost-startStop-1:14267 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14268 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14270 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14271 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14272 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14272 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14273 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14274 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14274 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14275 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14275 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14277 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14278 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:57 [ localhost-startStop-1:14962 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:43:42 CST 2018]; root of context hierarchy
2018-07-05 18:43:58 [ localhost-startStop-1:15431 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:43:42 CST 2018]; root of context hierarchy
2018-07-05 18:43:59 [ localhost-startStop-1:16659 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:44:07 [ localhost-startStop-1:25152 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:44:07 [ localhost-startStop-1:25152 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:07 [ localhost-startStop-1:25153 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:44:07 [ localhost-startStop-1:25155 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:07 [ localhost-startStop-1:25156 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25166 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:44:07 [ localhost-startStop-1:25166 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25166 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25167 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:44:07 [ localhost-startStop-1:25167 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:07 [ localhost-startStop-1:25167 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:07 [ localhost-startStop-1:25167 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:07 [ localhost-startStop-1:25168 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25170 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:07 [ localhost-startStop-1:25170 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25171 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25171 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25172 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:44:07 [ localhost-startStop-1:25173 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:44:07 [ localhost-startStop-1:25173 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25175 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25175 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25175 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:44:07 [ localhost-startStop-1:25175 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25176 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:07 [ localhost-startStop-1:25176 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25176 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25178 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25179 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25180 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25180 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25181 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:07 [ localhost-startStop-1:25181 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25182 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25182 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25183 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25184 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25184 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25184 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25185 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25189 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25190 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25191 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25191 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25191 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25191 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25192 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25197 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:44:07 [ localhost-startStop-1:25206 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25206 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25207 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25207 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25208 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25208 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25209 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25209 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25212 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25212 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:07 [ localhost-startStop-1:25213 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:08 [ localhost-startStop-1:25214 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:08 [ localhost-startStop-1:25214 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:08 [ localhost-startStop-1:25772 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:43:42 CST 2018]; root of context hierarchy
2018-07-05 18:44:08 [ localhost-startStop-1:26105 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:44:09 [ localhost-startStop-1:26255 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:44:09 [ localhost-startStop-1:26622 ] - [ INFO ] Root WebApplicationContext: initialization completed in 26621 ms
2018-07-05 18:44:09 [ localhost-startStop-1:26685 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:44:09 [ localhost-startStop-1:26727 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:44:09 [ localhost-startStop-1:26727 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:44:09 [ localhost-startStop-1:26731 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:44:09 [ localhost-startStop-1:26731 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:44:09 [ localhost-startStop-1:26731 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:44:09 [ localhost-startStop-1:26773 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:44:09 [ localhost-startStop-1:26775 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:44:09 [ localhost-startStop-1:26778 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:44:09 [ localhost-startStop-1:26990 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:44:09 [ localhost-startStop-1:26994 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:44:09 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:44:09 [ localhost-startStop-1:26995 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:44:09 [ localhost-startStop-1:27053 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:44:09 [ localhost-startStop-1:27055 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:44:09 [ localhost-startStop-1:27056 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:44:09 [ localhost-startStop-1:27099 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:44:10 [ localhost-startStop-1:27453 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:44:10 [ localhost-startStop-1:27454 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:10 [ localhost-startStop-1:27454 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:44:10 [ localhost-startStop-1:27455 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:10 [ localhost-startStop-1:27455 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27490 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:44:10 [ localhost-startStop-1:27492 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27492 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27493 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:44:10 [ localhost-startStop-1:27493 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:10 [ localhost-startStop-1:27494 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:10 [ localhost-startStop-1:27494 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:10 [ localhost-startStop-1:27495 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27499 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:44:10 [ localhost-startStop-1:27500 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27501 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27503 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27506 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:44:10 [ localhost-startStop-1:27507 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:44:10 [ localhost-startStop-1:27507 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27509 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27510 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27511 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:44:10 [ localhost-startStop-1:27512 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27513 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:10 [ localhost-startStop-1:27515 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27516 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27518 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27519 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27521 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27524 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27524 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:44:10 [ localhost-startStop-1:27525 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27526 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27526 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27527 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27528 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27531 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27532 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27532 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27534 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27535 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27535 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27536 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27537 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27537 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27538 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27539 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:44:10 [ localhost-startStop-1:27550 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27550 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27551 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27551 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27552 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27552 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27553 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27553 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27553 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27554 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27554 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27554 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:27555 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:44:10 [ localhost-startStop-1:28059 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:44:09 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:44:11 [ localhost-startStop-1:28507 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:44:09 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:44:12 [ localhost-startStop-1:29562 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:44:12 [ localhost-startStop-1:29599 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:44:12 [ localhost-startStop-1:30092 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3102 ms
2018-07-05 18:44:24 [ http-bio-8080-exec-1:41889 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:44:24 [ http-bio-8080-exec-1:41894 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:44:24 [ DefaultQuartzScheduler_Worker-1:41911 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:44:24 [ DefaultQuartzScheduler_Worker-1:41928 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:44:24 [ http-bio-8080-exec-1:41980 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:45:25 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:45:25 [ localhost-startStop-1:93 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:45:25 CST 2018]; root of context hierarchy
2018-07-05 18:45:25 [ localhost-startStop-1:165 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:45:25 [ localhost-startStop-1:606 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:45:25 [ localhost-startStop-1:859 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:45:26 [ localhost-startStop-1:925 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:45:26 [ localhost-startStop-1:1089 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:45:26 [ localhost-startStop-1:1271 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:26 [ localhost-startStop-1:1274 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:26 [ localhost-startStop-1:1277 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:26 [ localhost-startStop-1:1282 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:45:26 [ localhost-startStop-1:1309 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:45:26 [ localhost-startStop-1:1359 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:45:27 [ localhost-startStop-1:1966 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:45:27 [ localhost-startStop-1:1967 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:45:27 [ localhost-startStop-1:1968 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:45:27 [ localhost-startStop-1:2083 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2083 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2084 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2091 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2095 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2097 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2097 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2097 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:27 [ localhost-startStop-1:2099 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:45:27 [ localhost-startStop-1:2539 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:45:28 [ localhost-startStop-1:3317 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:28 [ localhost-startStop-1:3502 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:45:29 [ localhost-startStop-1:3960 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:45:29 [ localhost-startStop-1:3960 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4726 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4730 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4744 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4748 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4751 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4755 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4757 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4761 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4765 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4773 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4777 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4784 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4787 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4790 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4794 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4813 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4820 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4826 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4852 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:29 [ localhost-startStop-1:4867 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:30 [ localhost-startStop-1:4948 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:45:30 [ localhost-startStop-1:5177 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:30 [ localhost-startStop-1:5181 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:30 [ localhost-startStop-1:5194 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:30 [ localhost-startStop-1:5200 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:30 [ localhost-startStop-1:5338 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#5529640a' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:5974 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#9c2c9e5' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:5977 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3bf0fe54' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:5980 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#6a181ec1' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:5982 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#748f2ebc' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6064 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6095 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6103 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6124 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6129 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6217 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6246 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6248 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6265 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6269 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6274 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6277 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6409 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6501 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6528 ] - [ INFO ] Bean 'util:map#deb6da' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:31 [ localhost-startStop-1:6535 ] - [ INFO ] Bean 'util:map#deb6da' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:45:39 [ localhost-startStop-1:13943 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:39 [ localhost-startStop-1:13950 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13951 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:39 [ localhost-startStop-1:13953 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:45:39 [ localhost-startStop-1:13957 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:39 [ localhost-startStop-1:13962 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:39 [ localhost-startStop-1:13964 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:39 [ localhost-startStop-1:13966 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:39 [ localhost-startStop-1:13966 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:13968 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:13968 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:45:39 [ localhost-startStop-1:13969 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:39 [ localhost-startStop-1:13970 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13977 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13977 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:39 [ localhost-startStop-1:13978 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13978 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13981 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:45:39 [ localhost-startStop-1:13983 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:45:39 [ localhost-startStop-1:13985 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:13992 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:13997 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:13998 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:45:39 [ localhost-startStop-1:13998 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:39 [ localhost-startStop-1:13999 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:14000 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:14007 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:14011 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14012 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14014 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14016 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14016 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14017 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14019 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14020 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:39 [ localhost-startStop-1:14021 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14027 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14027 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14028 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14028 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14031 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14035 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14038 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14041 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14043 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14045 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14045 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14048 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:45:39 [ localhost-startStop-1:14065 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14066 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14067 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14067 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14068 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14069 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14069 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14070 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14071 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14071 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14072 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14072 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14073 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:39 [ localhost-startStop-1:14810 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:45:25 CST 2018]; root of context hierarchy
2018-07-05 18:45:40 [ localhost-startStop-1:15299 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:45:25 CST 2018]; root of context hierarchy
2018-07-05 18:45:41 [ localhost-startStop-1:16690 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:45:46 [ localhost-startStop-1:21000 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:46 [ localhost-startStop-1:21000 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21003 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:46 [ localhost-startStop-1:21008 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:45:46 [ localhost-startStop-1:21010 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:46 [ localhost-startStop-1:21017 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:46 [ localhost-startStop-1:21018 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:46 [ localhost-startStop-1:21020 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:46 [ localhost-startStop-1:21020 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21023 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21024 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:45:46 [ localhost-startStop-1:21026 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:46 [ localhost-startStop-1:21027 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21043 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21046 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:46 [ localhost-startStop-1:21050 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21059 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21062 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:45:46 [ localhost-startStop-1:21063 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:45:46 [ localhost-startStop-1:21065 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21068 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21068 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21069 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:45:46 [ localhost-startStop-1:21069 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:46 [ localhost-startStop-1:21069 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21069 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21070 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21072 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21073 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21073 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21073 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21074 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21074 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21074 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21074 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:46 [ localhost-startStop-1:21075 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21077 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21077 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21078 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21078 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21084 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21084 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21085 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21085 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21086 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21086 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21086 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21092 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:45:46 [ localhost-startStop-1:21096 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21097 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21097 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21098 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21098 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21098 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21099 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21099 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21102 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21102 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21103 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21104 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21104 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:46 [ localhost-startStop-1:21478 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:45:25 CST 2018]; root of context hierarchy
2018-07-05 18:45:46 [ localhost-startStop-1:21755 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:45:46 [ localhost-startStop-1:21895 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:45:47 [ localhost-startStop-1:22315 ] - [ INFO ] Root WebApplicationContext: initialization completed in 22314 ms
2018-07-05 18:45:47 [ localhost-startStop-1:22395 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:45:47 [ localhost-startStop-1:22449 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:45:47 [ localhost-startStop-1:22449 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:45:47 [ localhost-startStop-1:22452 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:45:47 [ localhost-startStop-1:22452 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:45:47 [ localhost-startStop-1:22452 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:45:47 [ localhost-startStop-1:22500 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:45:47 [ localhost-startStop-1:22503 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:45:47 [ localhost-startStop-1:22505 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:45:47 [ localhost-startStop-1:22727 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:45:47 [ localhost-startStop-1:22730 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:45:47 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:45:47 [ localhost-startStop-1:22731 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:45:47 [ localhost-startStop-1:22784 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:47 [ localhost-startStop-1:22785 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:47 [ localhost-startStop-1:22785 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:45:47 [ localhost-startStop-1:22811 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:45:48 [ localhost-startStop-1:23169 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:48 [ localhost-startStop-1:23171 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23174 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:48 [ localhost-startStop-1:23177 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:45:48 [ localhost-startStop-1:23178 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:48 [ localhost-startStop-1:23182 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:45:48 [ localhost-startStop-1:23184 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:48 [ localhost-startStop-1:23186 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:48 [ localhost-startStop-1:23188 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23192 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23192 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:45:48 [ localhost-startStop-1:23193 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:48 [ localhost-startStop-1:23193 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23195 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23196 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:45:48 [ localhost-startStop-1:23197 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23197 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23198 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:45:48 [ localhost-startStop-1:23198 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:45:48 [ localhost-startStop-1:23198 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23200 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23202 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23203 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:45:48 [ localhost-startStop-1:23203 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:48 [ localhost-startStop-1:23203 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23205 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23207 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23210 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23211 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23211 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23214 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23215 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23215 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23216 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23216 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:45:48 [ localhost-startStop-1:23217 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23218 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23219 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23219 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23221 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23233 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23233 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23233 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23234 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23234 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23235 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23237 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23241 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:45:48 [ localhost-startStop-1:23244 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23247 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23248 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23248 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23249 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23250 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23250 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23251 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23252 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23252 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23253 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23253 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23254 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:45:48 [ localhost-startStop-1:23903 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:45:47 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:45:49 [ localhost-startStop-1:24339 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:45:47 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:45:50 [ localhost-startStop-1:25227 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:45:50 [ localhost-startStop-1:25271 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:45:50 [ localhost-startStop-1:25856 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3129 ms
2018-07-05 18:45:56 [ http-bio-8080-exec-1:31794 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:45:56 [ http-bio-8080-exec-1:31801 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:45:56 [ DefaultQuartzScheduler_Worker-1:31822 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:45:56 [ DefaultQuartzScheduler_Worker-1:31838 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:45:56 [ http-bio-8080-exec-1:31895 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:46:28 [ http-bio-8080-exec-6:63025 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:46:48 [ http-bio-8080-exec-7:83684 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:47:38 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:47:39 [ localhost-startStop-1:77 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:47:39 CST 2018]; root of context hierarchy
2018-07-05 18:47:39 [ localhost-startStop-1:133 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:47:39 [ localhost-startStop-1:701 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:47:39 [ localhost-startStop-1:983 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:47:39 [ localhost-startStop-1:1057 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:47:40 [ localhost-startStop-1:1217 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:47:40 [ localhost-startStop-1:1447 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:47:40 [ localhost-startStop-1:1450 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:47:40 [ localhost-startStop-1:1453 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:47:40 [ localhost-startStop-1:1461 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:47:40 [ localhost-startStop-1:1539 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:47:40 [ localhost-startStop-1:1622 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:47:41 [ localhost-startStop-1:2597 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:47:41 [ localhost-startStop-1:2598 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:47:41 [ localhost-startStop-1:2599 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:47:41 [ localhost-startStop-1:2811 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2811 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2813 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2813 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2813 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2814 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2814 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2814 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2823 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2825 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2825 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2825 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2825 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:47:41 [ localhost-startStop-1:2830 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:47:42 [ localhost-startStop-1:3407 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:47:43 [ localhost-startStop-1:4971 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:44 [ localhost-startStop-1:5609 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:47:45 [ localhost-startStop-1:6400 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:47:45 [ localhost-startStop-1:6400 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7726 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7733 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7774 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7786 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7789 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7792 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7797 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7804 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7810 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7813 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7820 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7823 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7828 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7835 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7839 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7928 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7949 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:7959 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:46 [ localhost-startStop-1:8044 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8060 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8203 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:47:47 [ localhost-startStop-1:8622 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8635 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8644 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8704 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:47 [ localhost-startStop-1:8938 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#5e066d23' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:9778 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#380b42c9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:9782 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#601dadce' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:9785 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#6c5f976' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:9787 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#6bc7e3f8' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:10004 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:10044 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:10050 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:48 [ localhost-startStop-1:10058 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10073 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10225 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10284 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10291 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10322 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10357 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10365 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10371 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10617 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10818 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10902 ] - [ INFO ] Bean 'util:map#45c9a15d' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:47:49 [ localhost-startStop-1:10907 ] - [ INFO ] Bean 'util:map#45c9a15d' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:48:02 [ localhost-startStop-1:23605 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:48:02 [ localhost-startStop-1:23607 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:48:02 [ localhost-startStop-1:23608 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:02 [ localhost-startStop-1:23609 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23612 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:48:02 [ localhost-startStop-1:23619 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:48:02 [ localhost-startStop-1:23620 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23621 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23622 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:02 [ localhost-startStop-1:23624 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:48:02 [ localhost-startStop-1:23626 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:48:02 [ localhost-startStop-1:23628 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23628 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:02 [ localhost-startStop-1:23637 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:48:02 [ localhost-startStop-1:23637 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23638 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23638 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23640 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23641 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:48:02 [ localhost-startStop-1:23641 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:48:02 [ localhost-startStop-1:23644 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23645 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23645 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:48:02 [ localhost-startStop-1:23645 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23646 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23647 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:02 [ localhost-startStop-1:23649 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23676 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:02 [ localhost-startStop-1:23677 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23677 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23678 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23678 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23679 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23681 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23681 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23682 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23684 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23684 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23685 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23685 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23688 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23688 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23689 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23692 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23693 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23694 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23695 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23698 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:48:02 [ localhost-startStop-1:23705 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23707 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23708 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23708 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23709 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23709 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23710 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23710 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23711 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23711 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23711 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23712 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:02 [ localhost-startStop-1:23712 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:04 [ localhost-startStop-1:25173 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:47:39 CST 2018]; root of context hierarchy
2018-07-05 18:48:05 [ localhost-startStop-1:26131 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:47:39 CST 2018]; root of context hierarchy
2018-07-05 18:48:07 [ localhost-startStop-1:28922 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:49:17 [ localhost-startStop-1:98736 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:49:17 [ localhost-startStop-1:98744 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:17 [ localhost-startStop-1:98745 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:17 [ localhost-startStop-1:98745 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98748 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:49:17 [ localhost-startStop-1:98751 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:17 [ localhost-startStop-1:98751 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98753 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98753 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:17 [ localhost-startStop-1:98753 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:49:17 [ localhost-startStop-1:98754 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:49:17 [ localhost-startStop-1:98755 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98756 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:17 [ localhost-startStop-1:98758 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:17 [ localhost-startStop-1:98758 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98758 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98759 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98760 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98760 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:49:17 [ localhost-startStop-1:98760 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:49:17 [ localhost-startStop-1:98762 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98762 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98763 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:49:17 [ localhost-startStop-1:98763 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98763 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98764 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:17 [ localhost-startStop-1:98767 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98769 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:17 [ localhost-startStop-1:98770 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98770 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98776 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98777 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98777 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98779 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98779 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98780 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98782 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98783 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98783 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98783 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98791 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98792 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98792 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98823 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98823 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98824 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98825 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98827 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:49:17 [ localhost-startStop-1:98829 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98830 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98830 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98830 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98830 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98831 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98831 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98831 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98831 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98831 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98832 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98832 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:17 [ localhost-startStop-1:98832 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:18 [ localhost-startStop-1:99462 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:47:39 CST 2018]; root of context hierarchy
2018-07-05 18:49:18 [ localhost-startStop-1:99995 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:49:19 [ localhost-startStop-1:100234 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:49:19 [ localhost-startStop-1:101028 ] - [ INFO ] Root WebApplicationContext: initialization completed in 101027 ms
2018-07-05 18:49:20 [ localhost-startStop-1:101111 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:49:20 [ localhost-startStop-1:101185 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:49:20 [ localhost-startStop-1:101185 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:49:20 [ localhost-startStop-1:101195 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:49:20 [ localhost-startStop-1:101195 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:49:20 [ localhost-startStop-1:101196 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:49:20 [ localhost-startStop-1:101252 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:49:20 [ localhost-startStop-1:101257 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:49:20 [ localhost-startStop-1:101260 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:49:20 [ localhost-startStop-1:101564 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:49:20 [ localhost-startStop-1:101569 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:49:20 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:49:20 [ localhost-startStop-1:101569 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:49:20 [ localhost-startStop-1:101736 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:49:20 [ localhost-startStop-1:101740 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:49:20 [ localhost-startStop-1:101742 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:49:20 [ localhost-startStop-1:101869 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:49:21 [ localhost-startStop-1:102732 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:49:21 [ localhost-startStop-1:102733 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:21 [ localhost-startStop-1:102733 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:21 [ localhost-startStop-1:102734 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102734 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:49:21 [ localhost-startStop-1:102736 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:21 [ localhost-startStop-1:102737 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102737 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102738 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:21 [ localhost-startStop-1:102738 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:49:21 [ localhost-startStop-1:102738 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:49:21 [ localhost-startStop-1:102738 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102739 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:21 [ localhost-startStop-1:102740 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:49:21 [ localhost-startStop-1:102741 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102741 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102742 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102742 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102743 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:49:21 [ localhost-startStop-1:102743 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:49:21 [ localhost-startStop-1:102804 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102805 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102805 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:49:21 [ localhost-startStop-1:102806 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102806 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102812 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:21 [ localhost-startStop-1:102814 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102823 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:49:21 [ localhost-startStop-1:102824 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102825 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102828 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102829 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102829 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102830 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102831 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102831 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102833 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102833 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102834 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102834 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102838 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102840 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102841 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102841 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102841 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102841 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102843 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102844 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:49:21 [ localhost-startStop-1:102856 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102859 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102859 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102860 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102860 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102860 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102861 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102861 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102862 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102862 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102863 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102863 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:21 [ localhost-startStop-1:102863 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:49:23 [ localhost-startStop-1:104590 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:49:20 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:49:24 [ localhost-startStop-1:105434 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:49:20 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:49:26 [ localhost-startStop-1:107589 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:49:26 [ localhost-startStop-1:107657 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:49:27 [ localhost-startStop-1:108385 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 6821 ms
2018-07-05 18:50:16 [ http-bio-8080-exec-1:157817 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:50:16 [ http-bio-8080-exec-1:157821 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:50:16 [ DefaultQuartzScheduler_Worker-1:157833 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:50:16 [ DefaultQuartzScheduler_Worker-1:157848 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:50:16 [ http-bio-8080-exec-1:157887 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:51:41 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:51:41 [ localhost-startStop-1:83 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:51:41 CST 2018]; root of context hierarchy
2018-07-05 18:51:41 [ localhost-startStop-1:145 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:51:41 [ localhost-startStop-1:563 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:51:41 [ localhost-startStop-1:846 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:51:42 [ localhost-startStop-1:906 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:51:42 [ localhost-startStop-1:1080 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:51:42 [ localhost-startStop-1:1246 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:51:42 [ localhost-startStop-1:1249 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:51:42 [ localhost-startStop-1:1250 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:51:42 [ localhost-startStop-1:1253 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:51:42 [ localhost-startStop-1:1287 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:51:42 [ localhost-startStop-1:1333 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:51:43 [ localhost-startStop-1:1934 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:51:43 [ localhost-startStop-1:1935 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:51:43 [ localhost-startStop-1:1936 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:51:43 [ localhost-startStop-1:2058 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2059 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2059 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2059 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2060 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2073 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2073 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2073 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2073 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2074 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:51:43 [ localhost-startStop-1:2088 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:51:43 [ localhost-startStop-1:2533 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:51:44 [ localhost-startStop-1:3312 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:44 [ localhost-startStop-1:3506 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:51:45 [ localhost-startStop-1:3958 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:51:45 [ localhost-startStop-1:3958 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4629 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4632 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4645 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4651 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4654 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4658 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4661 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4668 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4678 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4684 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4690 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4694 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4698 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4712 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4722 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4740 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4746 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4750 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4768 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4776 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:45 [ localhost-startStop-1:4843 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:51:46 [ localhost-startStop-1:5034 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5040 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5051 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5055 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5207 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#7eaaf9ce' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5843 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3f9fd6b9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5846 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#57a53103' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5849 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#212ae324' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:46 [ localhost-startStop-1:5852 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#8670a46' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:5940 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:5982 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:5989 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:5999 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6004 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6095 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6145 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6149 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6179 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6187 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6194 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6204 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6358 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6466 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6492 ] - [ INFO ] Bean 'util:map#4ca56992' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:47 [ localhost-startStop-1:6497 ] - [ INFO ] Bean 'util:map#4ca56992' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:51:54 [ localhost-startStop-1:13731 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:51:54 [ localhost-startStop-1:13736 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:51:54 [ localhost-startStop-1:13738 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:51:54 [ localhost-startStop-1:13741 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:51:54 [ localhost-startStop-1:13742 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13745 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:51:54 [ localhost-startStop-1:13748 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13748 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:51:54 [ localhost-startStop-1:13750 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13752 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13753 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:51:54 [ localhost-startStop-1:13753 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:51:54 [ localhost-startStop-1:13754 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:51:54 [ localhost-startStop-1:13761 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13761 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13762 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:51:54 [ localhost-startStop-1:13762 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13764 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:51:54 [ localhost-startStop-1:13767 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:51:54 [ localhost-startStop-1:13770 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13774 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:51:54 [ localhost-startStop-1:13777 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13779 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13780 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:51:54 [ localhost-startStop-1:13781 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13781 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13784 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13793 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:51:54 [ localhost-startStop-1:13793 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13795 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13796 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13797 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13799 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13800 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13801 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13802 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13804 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13804 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13805 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13805 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13808 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13809 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13810 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13815 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13817 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13818 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13818 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13820 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:51:54 [ localhost-startStop-1:13825 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13827 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13830 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13831 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13832 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13832 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13833 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13834 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13834 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13835 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13836 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13837 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:54 [ localhost-startStop-1:13837 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:51:55 [ localhost-startStop-1:14564 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:51:41 CST 2018]; root of context hierarchy
2018-07-05 18:51:56 [ localhost-startStop-1:15043 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:51:41 CST 2018]; root of context hierarchy
2018-07-05 18:51:57 [ localhost-startStop-1:16269 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:52:07 [ localhost-startStop-1:26156 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:52:07 [ localhost-startStop-1:26162 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:52:07 [ localhost-startStop-1:26166 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:07 [ localhost-startStop-1:26170 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:07 [ localhost-startStop-1:26171 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26174 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:52:07 [ localhost-startStop-1:26175 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26175 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:07 [ localhost-startStop-1:26175 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26176 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26176 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:07 [ localhost-startStop-1:26176 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:07 [ localhost-startStop-1:26177 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:52:07 [ localhost-startStop-1:26179 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26179 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26180 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:07 [ localhost-startStop-1:26181 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26182 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:52:07 [ localhost-startStop-1:26182 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:52:07 [ localhost-startStop-1:26187 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26190 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:07 [ localhost-startStop-1:26190 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26191 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26191 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:52:07 [ localhost-startStop-1:26192 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26192 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26193 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26204 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:07 [ localhost-startStop-1:26204 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26205 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26206 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26207 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26207 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26207 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26207 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26208 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26209 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26209 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26210 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26210 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26215 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26216 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26216 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26216 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26218 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26219 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26219 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26227 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:52:07 [ localhost-startStop-1:26236 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26237 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26237 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26238 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26238 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26238 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26239 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26239 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26242 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26242 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26243 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26244 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26244 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:07 [ localhost-startStop-1:26643 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:51:41 CST 2018]; root of context hierarchy
2018-07-05 18:52:08 [ localhost-startStop-1:26911 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:52:08 [ localhost-startStop-1:27033 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:52:08 [ localhost-startStop-1:27408 ] - [ INFO ] Root WebApplicationContext: initialization completed in 27407 ms
2018-07-05 18:52:08 [ localhost-startStop-1:27468 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:52:08 [ localhost-startStop-1:27527 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:52:08 [ localhost-startStop-1:27527 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:52:08 [ localhost-startStop-1:27531 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:52:08 [ localhost-startStop-1:27532 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:52:08 [ localhost-startStop-1:27532 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:52:08 [ localhost-startStop-1:27570 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:52:08 [ localhost-startStop-1:27572 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:52:08 [ localhost-startStop-1:27576 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:52:08 [ localhost-startStop-1:27797 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:52:08 [ localhost-startStop-1:27802 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:52:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:52:08 [ localhost-startStop-1:27802 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:52:08 [ localhost-startStop-1:27868 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:52:09 [ localhost-startStop-1:27871 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:52:09 [ localhost-startStop-1:27873 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:52:09 [ localhost-startStop-1:27900 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:52:09 [ localhost-startStop-1:28250 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:52:09 [ localhost-startStop-1:28250 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:52:09 [ localhost-startStop-1:28251 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:09 [ localhost-startStop-1:28252 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:09 [ localhost-startStop-1:28252 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28256 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:52:09 [ localhost-startStop-1:28258 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28261 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:09 [ localhost-startStop-1:28266 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28268 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28269 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:09 [ localhost-startStop-1:28269 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:09 [ localhost-startStop-1:28270 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:52:09 [ localhost-startStop-1:28271 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28272 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28274 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:52:09 [ localhost-startStop-1:28275 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28276 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:52:09 [ localhost-startStop-1:28277 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:52:09 [ localhost-startStop-1:28278 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28279 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:09 [ localhost-startStop-1:28280 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28283 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28283 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:52:09 [ localhost-startStop-1:28284 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28284 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28285 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28287 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:52:09 [ localhost-startStop-1:28288 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28288 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28291 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28292 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28292 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28293 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28294 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28294 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28299 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28300 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28300 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28301 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28306 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28308 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28308 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28309 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28310 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28311 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28312 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28313 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:52:09 [ localhost-startStop-1:28316 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28316 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28317 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28317 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28318 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28319 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28320 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28321 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28321 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28322 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28323 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28323 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28324 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:52:09 [ localhost-startStop-1:28839 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:52:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:52:10 [ localhost-startStop-1:29286 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:52:08 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:52:11 [ localhost-startStop-1:30205 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:52:11 [ localhost-startStop-1:30243 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:52:11 [ localhost-startStop-1:30653 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2855 ms
2018-07-05 18:52:31 [ http-bio-8080-exec-1:50142 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:52:31 [ http-bio-8080-exec-1:50147 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:52:31 [ DefaultQuartzScheduler_Worker-1:50167 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:52:31 [ DefaultQuartzScheduler_Worker-1:50196 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:52:31 [ http-bio-8080-exec-1:50246 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:53:23 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:53:23 [ localhost-startStop-1:179 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:53:23 CST 2018]; root of context hierarchy
2018-07-05 18:53:23 [ localhost-startStop-1:333 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:53:24 [ localhost-startStop-1:1230 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:53:24 [ localhost-startStop-1:1622 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:53:24 [ localhost-startStop-1:1698 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:53:24 [ localhost-startStop-1:1863 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:53:25 [ localhost-startStop-1:2318 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:25 [ localhost-startStop-1:2320 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:25 [ localhost-startStop-1:2320 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:25 [ localhost-startStop-1:2328 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:53:25 [ localhost-startStop-1:2398 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:53:25 [ localhost-startStop-1:2469 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:53:26 [ localhost-startStop-1:3730 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:53:26 [ localhost-startStop-1:3731 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:53:26 [ localhost-startStop-1:3732 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:53:27 [ localhost-startStop-1:3969 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3974 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3975 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3976 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3977 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3977 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3977 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3980 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3982 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3984 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3986 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3989 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3991 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:27 [ localhost-startStop-1:3993 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:53:27 [ localhost-startStop-1:4617 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:53:29 [ localhost-startStop-1:6161 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:29 [ localhost-startStop-1:6634 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:53:30 [ localhost-startStop-1:7526 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:53:30 [ localhost-startStop-1:7526 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8840 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8845 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8875 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8889 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8892 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8896 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8899 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8906 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8911 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8917 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8931 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8939 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:31 [ localhost-startStop-1:8944 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:8959 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:8963 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9043 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9053 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9058 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9109 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9119 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9270 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:53:32 [ localhost-startStop-1:9609 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9613 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9624 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9628 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:32 [ localhost-startStop-1:9811 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#49877570' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10457 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#4e810ac1' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10459 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#351d00a2' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10462 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#2e2ab25b' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10464 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#5c746e1b' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10567 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10604 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10610 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10623 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10628 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10793 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10872 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10877 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10903 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10906 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10911 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:33 [ localhost-startStop-1:10927 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:34 [ localhost-startStop-1:11172 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:34 [ localhost-startStop-1:11364 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:34 [ localhost-startStop-1:11438 ] - [ INFO ] Bean 'util:map#6d689c30' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:34 [ localhost-startStop-1:11453 ] - [ INFO ] Bean 'util:map#6d689c30' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:53:42 [ localhost-startStop-1:19298 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:42 [ localhost-startStop-1:19304 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19305 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:53:42 [ localhost-startStop-1:19306 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:42 [ localhost-startStop-1:19307 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:42 [ localhost-startStop-1:19311 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:42 [ localhost-startStop-1:19314 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:53:42 [ localhost-startStop-1:19316 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:42 [ localhost-startStop-1:19318 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19318 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19319 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:42 [ localhost-startStop-1:19320 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19321 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:42 [ localhost-startStop-1:19326 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19327 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19327 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:42 [ localhost-startStop-1:19328 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19330 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19331 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:53:42 [ localhost-startStop-1:19334 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:53:42 [ localhost-startStop-1:19342 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:53:42 [ localhost-startStop-1:19344 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19345 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19346 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:42 [ localhost-startStop-1:19347 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19347 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19348 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19353 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:42 [ localhost-startStop-1:19354 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19355 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19360 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19361 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19367 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19368 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19369 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19369 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19371 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19372 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19374 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19375 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19377 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19379 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19379 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19381 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19383 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19384 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19384 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19386 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:53:42 [ localhost-startStop-1:19392 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19395 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19398 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19398 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19399 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19400 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19400 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19401 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19401 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:42 [ localhost-startStop-1:19403 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:43 [ localhost-startStop-1:20115 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:53:23 CST 2018]; root of context hierarchy
2018-07-05 18:53:43 [ localhost-startStop-1:20612 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:53:23 CST 2018]; root of context hierarchy
2018-07-05 18:53:44 [ localhost-startStop-1:21739 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:53:48 [ localhost-startStop-1:25649 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:48 [ localhost-startStop-1:25650 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25650 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:53:48 [ localhost-startStop-1:25650 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:48 [ localhost-startStop-1:25650 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:48 [ localhost-startStop-1:25654 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:48 [ localhost-startStop-1:25654 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:53:48 [ localhost-startStop-1:25654 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:48 [ localhost-startStop-1:25654 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25654 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25655 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:48 [ localhost-startStop-1:25655 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25657 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:48 [ localhost-startStop-1:25661 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25662 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25663 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:48 [ localhost-startStop-1:25664 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25664 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25665 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:53:48 [ localhost-startStop-1:25665 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:53:48 [ localhost-startStop-1:25669 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:53:48 [ localhost-startStop-1:25670 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25670 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25671 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:48 [ localhost-startStop-1:25673 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25673 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25674 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25680 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:48 [ localhost-startStop-1:25680 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25680 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25681 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25681 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25682 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25682 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25684 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25686 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25687 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25687 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25688 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25688 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25693 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25693 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25693 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25694 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25694 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25694 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25694 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25699 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:53:48 [ localhost-startStop-1:25711 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25712 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25714 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25716 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25724 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25726 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25726 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25727 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25729 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25730 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25731 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25732 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:48 [ localhost-startStop-1:25732 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:49 [ localhost-startStop-1:26128 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:53:23 CST 2018]; root of context hierarchy
2018-07-05 18:53:49 [ localhost-startStop-1:26369 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:53:49 [ localhost-startStop-1:26491 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:53:49 [ localhost-startStop-1:26845 ] - [ INFO ] Root WebApplicationContext: initialization completed in 26844 ms
2018-07-05 18:53:49 [ localhost-startStop-1:26884 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:53:49 [ localhost-startStop-1:26910 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:53:49 [ localhost-startStop-1:26910 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:53:49 [ localhost-startStop-1:26912 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:53:49 [ localhost-startStop-1:26912 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:53:49 [ localhost-startStop-1:26912 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:53:49 [ localhost-startStop-1:26939 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:53:49 [ localhost-startStop-1:26941 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:53:49 [ localhost-startStop-1:26944 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:53:50 [ localhost-startStop-1:27155 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:53:50 [ localhost-startStop-1:27157 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:53:50 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:53:50 [ localhost-startStop-1:27158 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:53:50 [ localhost-startStop-1:27217 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:50 [ localhost-startStop-1:27220 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:50 [ localhost-startStop-1:27220 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:53:50 [ localhost-startStop-1:27246 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:53:50 [ localhost-startStop-1:27581 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:50 [ localhost-startStop-1:27582 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27582 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:53:50 [ localhost-startStop-1:27583 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:50 [ localhost-startStop-1:27583 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:50 [ localhost-startStop-1:27587 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:53:50 [ localhost-startStop-1:27589 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:53:50 [ localhost-startStop-1:27591 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:50 [ localhost-startStop-1:27593 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27594 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27594 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:50 [ localhost-startStop-1:27594 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27595 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:50 [ localhost-startStop-1:27599 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27600 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27600 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:53:50 [ localhost-startStop-1:27601 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27602 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27602 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:53:50 [ localhost-startStop-1:27603 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:53:50 [ localhost-startStop-1:27605 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:53:50 [ localhost-startStop-1:27607 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27607 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27608 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:50 [ localhost-startStop-1:27608 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27609 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27610 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27614 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:50 [ localhost-startStop-1:27617 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27617 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27619 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27620 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27620 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27621 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27621 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27622 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27623 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27624 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27624 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27625 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27626 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27628 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27630 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27651 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27653 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27655 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27656 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27658 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:53:50 [ localhost-startStop-1:27665 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27667 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27667 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27669 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27670 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27671 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27672 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27675 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27678 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27678 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27679 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27679 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:50 [ localhost-startStop-1:27680 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:51 [ localhost-startStop-1:28383 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:53:50 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:53:51 [ localhost-startStop-1:28869 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:53:50 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:53:52 [ localhost-startStop-1:29766 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:53:52 [ localhost-startStop-1:29810 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:53:53 [ localhost-startStop-1:30263 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3108 ms
2018-07-05 18:54:11 [ http-bio-8080-exec-1:48027 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:54:11 [ http-bio-8080-exec-1:48032 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:54:11 [ DefaultQuartzScheduler_Worker-1:48047 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:54:11 [ DefaultQuartzScheduler_Worker-1:48060 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:54:11 [ http-bio-8080-exec-1:48100 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:54:59 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:54:59 [ localhost-startStop-1:130 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:54:59 CST 2018]; root of context hierarchy
2018-07-05 18:54:59 [ localhost-startStop-1:232 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:54:59 [ localhost-startStop-1:860 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1184 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1294 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1457 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1736 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:00 [ localhost-startStop-1:1737 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:00 [ localhost-startStop-1:1738 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:00 [ localhost-startStop-1:1746 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1819 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:55:00 [ localhost-startStop-1:1913 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:55:02 [ localhost-startStop-1:3361 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:55:02 [ localhost-startStop-1:3367 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:55:02 [ localhost-startStop-1:3375 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:55:02 [ localhost-startStop-1:3749 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3749 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3749 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3750 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3750 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3750 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3750 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3755 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3755 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3755 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3755 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3755 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3756 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:02 [ localhost-startStop-1:3756 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:55:05 [ localhost-startStop-1:6864 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:55:07 [ localhost-startStop-1:8397 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:07 [ localhost-startStop-1:8829 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:55:08 [ localhost-startStop-1:9607 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:55:08 [ localhost-startStop-1:9608 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10830 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10833 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10845 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10848 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10851 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10853 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10856 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10860 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10863 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10866 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10871 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10874 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10923 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10929 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:09 [ localhost-startStop-1:10933 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:10955 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:10966 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:10998 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11035 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11050 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11201 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:55:10 [ localhost-startStop-1:11667 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11670 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11700 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11705 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:10 [ localhost-startStop-1:11915 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#16d630f1' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:12958 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3793e2cb' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:12963 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#144ef2ff' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:12966 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#5f7d4f8c' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:12969 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#780bbd2a' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13114 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13157 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13172 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13180 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13185 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13390 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13453 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13458 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13520 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13527 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13532 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13541 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13790 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:12 [ localhost-startStop-1:13951 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:13 [ localhost-startStop-1:13994 ] - [ INFO ] Bean 'util:map#7021df27' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:13 [ localhost-startStop-1:13999 ] - [ INFO ] Bean 'util:map#7021df27' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:55:25 [ localhost-startStop-1:26537 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:25 [ localhost-startStop-1:26562 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:25 [ localhost-startStop-1:26565 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:25 [ localhost-startStop-1:26566 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26567 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:55:25 [ localhost-startStop-1:26572 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:25 [ localhost-startStop-1:26573 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:25 [ localhost-startStop-1:26574 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26575 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:25 [ localhost-startStop-1:26575 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26576 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:25 [ localhost-startStop-1:26576 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26577 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:55:25 [ localhost-startStop-1:26584 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26584 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26585 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:25 [ localhost-startStop-1:26586 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26588 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:55:25 [ localhost-startStop-1:26589 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:55:25 [ localhost-startStop-1:26589 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26592 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:25 [ localhost-startStop-1:26593 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26594 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26596 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:55:25 [ localhost-startStop-1:26597 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26598 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26600 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26602 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26603 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26605 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26606 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:25 [ localhost-startStop-1:26607 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26615 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26617 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26618 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26619 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26621 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26624 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26629 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26630 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26633 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26635 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26635 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26638 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26651 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26651 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26651 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26663 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:55:25 [ localhost-startStop-1:26686 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26687 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26687 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26688 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26688 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26689 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26689 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26689 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26690 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26695 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26695 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26696 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:25 [ localhost-startStop-1:26697 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:27 [ localhost-startStop-1:28611 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:54:59 CST 2018]; root of context hierarchy
2018-07-05 18:55:28 [ localhost-startStop-1:29760 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:54:59 CST 2018]; root of context hierarchy
2018-07-05 18:55:31 [ localhost-startStop-1:32143 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:55:41 [ localhost-startStop-1:42869 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:41 [ localhost-startStop-1:42871 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:41 [ localhost-startStop-1:42872 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:41 [ localhost-startStop-1:42872 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42872 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:55:41 [ localhost-startStop-1:42874 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:41 [ localhost-startStop-1:42874 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:41 [ localhost-startStop-1:42875 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42876 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:41 [ localhost-startStop-1:42876 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42876 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:41 [ localhost-startStop-1:42877 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42878 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:55:41 [ localhost-startStop-1:42879 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42880 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42880 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:41 [ localhost-startStop-1:42880 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42882 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:55:41 [ localhost-startStop-1:42882 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:55:41 [ localhost-startStop-1:42911 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42919 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:41 [ localhost-startStop-1:42920 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42921 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42921 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:55:41 [ localhost-startStop-1:42923 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42924 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42926 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42935 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42935 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42936 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42936 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:41 [ localhost-startStop-1:42936 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42936 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42936 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42937 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42938 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42939 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42940 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42940 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42940 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42944 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42946 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42947 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42947 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42947 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42948 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42948 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42949 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:55:41 [ localhost-startStop-1:42952 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42953 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:41 [ localhost-startStop-1:42953 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42954 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42954 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42954 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42955 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42955 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42955 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42955 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42956 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42956 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:42956 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:42 [ localhost-startStop-1:43587 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:54:59 CST 2018]; root of context hierarchy
2018-07-05 18:55:42 [ localhost-startStop-1:43943 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:55:43 [ localhost-startStop-1:44278 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:55:44 [ localhost-startStop-1:45298 ] - [ INFO ] Root WebApplicationContext: initialization completed in 45294 ms
2018-07-05 18:55:44 [ localhost-startStop-1:45449 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:55:44 [ localhost-startStop-1:45483 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:55:44 [ localhost-startStop-1:45484 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:55:44 [ localhost-startStop-1:45486 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:55:44 [ localhost-startStop-1:45486 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:55:44 [ localhost-startStop-1:45486 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:55:44 [ localhost-startStop-1:45564 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:55:44 [ localhost-startStop-1:45567 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:55:44 [ localhost-startStop-1:45573 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:55:44 [ localhost-startStop-1:45950 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:55:45 [ localhost-startStop-1:45959 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:55:45 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:55:45 [ localhost-startStop-1:45961 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:55:45 [ localhost-startStop-1:46086 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:45 [ localhost-startStop-1:46091 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:45 [ localhost-startStop-1:46094 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:55:45 [ localhost-startStop-1:46127 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:55:45 [ localhost-startStop-1:46928 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:45 [ localhost-startStop-1:46929 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:45 [ localhost-startStop-1:46930 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:45 [ localhost-startStop-1:46931 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:45 [ localhost-startStop-1:46932 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:55:45 [ localhost-startStop-1:46935 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:55:45 [ localhost-startStop-1:46937 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:45 [ localhost-startStop-1:46942 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:45 [ localhost-startStop-1:46942 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:45 [ localhost-startStop-1:46943 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:45 [ localhost-startStop-1:46944 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:45 [ localhost-startStop-1:46945 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:45 [ localhost-startStop-1:46945 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:55:45 [ localhost-startStop-1:46947 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:55:45 [ localhost-startStop-1:46948 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:55:45 [ localhost-startStop-1:46948 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:55:45 [ localhost-startStop-1:46949 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:55:45 [ localhost-startStop-1:46949 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:55:45 [ localhost-startStop-1:46950 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:55:45 [ localhost-startStop-1:46950 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:45 [ localhost-startStop-1:46952 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:46 [ localhost-startStop-1:46954 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:55:46 [ localhost-startStop-1:46955 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:46 [ localhost-startStop-1:46955 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:55:46 [ localhost-startStop-1:46956 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46956 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:55:46 [ localhost-startStop-1:46957 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:55:46 [ localhost-startStop-1:46959 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46960 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46961 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46964 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:46 [ localhost-startStop-1:46964 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46965 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46965 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46966 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46967 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46969 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46970 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46970 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:46970 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47036 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47041 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47041 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47042 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47042 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47043 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47043 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47044 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:55:46 [ localhost-startStop-1:47047 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47047 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47048 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47049 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47049 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47050 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47062 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47063 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47063 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47064 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47065 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47065 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:46 [ localhost-startStop-1:47068 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:47 [ localhost-startStop-1:48281 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:55:45 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:55:48 [ localhost-startStop-1:49132 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:55:45 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:55:50 [ localhost-startStop-1:50961 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:55:50 [ localhost-startStop-1:51008 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:55:50 [ localhost-startStop-1:51799 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 5845 ms
2018-07-05 18:56:03 [ http-bio-8080-exec-1:64107 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:56:03 [ http-bio-8080-exec-1:64111 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:56:03 [ DefaultQuartzScheduler_Worker-1:64122 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:56:03 [ DefaultQuartzScheduler_Worker-1:64137 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:56:03 [ http-bio-8080-exec-1:64175 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:56:40 [ http-bio-8080-exec-3:101109 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 18:57:12 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 18:57:12 [ localhost-startStop-1:67 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 18:57:12 CST 2018]; root of context hierarchy
2018-07-05 18:57:12 [ localhost-startStop-1:122 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 18:57:12 [ localhost-startStop-1:536 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 18:57:12 [ localhost-startStop-1:812 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 18:57:12 [ localhost-startStop-1:880 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 18:57:13 [ localhost-startStop-1:1048 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 18:57:13 [ localhost-startStop-1:1221 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:13 [ localhost-startStop-1:1224 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:13 [ localhost-startStop-1:1227 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:13 [ localhost-startStop-1:1233 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 18:57:13 [ localhost-startStop-1:1270 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 18:57:13 [ localhost-startStop-1:1323 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 18:57:14 [ localhost-startStop-1:1903 ] - [ INFO ] Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:57:14 [ localhost-startStop-1:1904 ] - [ INFO ] Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
2018-07-05 18:57:14 [ localhost-startStop-1:1906 ] - [ INFO ] Overriding bean definition for bean 'mvcHandlerMappingIntrospector' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.handler.HandlerMappingIntrospector]; scope=; abstract=false; lazyInit=true; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=true; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcHandlerMappingIntrospector; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
2018-07-05 18:57:14 [ localhost-startStop-1:2039 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2040 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2044 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2046 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2049 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2052 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2052 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 18:57:14 [ localhost-startStop-1:2053 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 18:57:14 [ localhost-startStop-1:2554 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:57:15 [ localhost-startStop-1:3282 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:15 [ localhost-startStop-1:3476 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 18:57:16 [ localhost-startStop-1:3912 ] - [ INFO ] {dataSource-1} inited
2018-07-05 18:57:16 [ localhost-startStop-1:3912 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4584 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4588 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4600 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4607 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4610 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4612 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4615 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4619 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4624 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4627 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4633 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4646 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4651 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4654 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4658 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4677 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4684 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4688 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4716 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4724 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:16 [ localhost-startStop-1:4813 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:57:17 [ localhost-startStop-1:5025 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5029 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5041 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5046 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5199 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#1eaa57f7' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5769 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#5cba155e' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5772 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#7ea36071' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5774 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3c3c9c0c' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5777 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#70656193' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:17 [ localhost-startStop-1:5857 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:5899 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:5909 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:5922 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:5927 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6016 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6060 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6063 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6082 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6086 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6089 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6091 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6269 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6420 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6443 ] - [ INFO ] Bean 'util:map#7d6f5048' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:18 [ localhost-startStop-1:6447 ] - [ INFO ] Bean 'util:map#7d6f5048' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 18:57:25 [ localhost-startStop-1:13583 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:25 [ localhost-startStop-1:13587 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:25 [ localhost-startStop-1:13588 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:57:25 [ localhost-startStop-1:13588 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:25 [ localhost-startStop-1:13589 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13594 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:25 [ localhost-startStop-1:13596 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13597 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:25 [ localhost-startStop-1:13599 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:57:25 [ localhost-startStop-1:13604 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13607 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:25 [ localhost-startStop-1:13608 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:25 [ localhost-startStop-1:13608 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13614 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13615 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13615 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13616 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:25 [ localhost-startStop-1:13617 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:57:25 [ localhost-startStop-1:13620 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:57:25 [ localhost-startStop-1:13621 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13624 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:57:25 [ localhost-startStop-1:13626 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13627 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13628 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13629 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13633 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:25 [ localhost-startStop-1:13639 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13649 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:25 [ localhost-startStop-1:13650 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13651 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13652 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13653 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13654 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13655 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13656 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13657 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13659 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13659 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13660 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13661 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13667 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13668 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13669 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13671 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13674 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13675 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13675 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13676 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:57:25 [ localhost-startStop-1:13682 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13683 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13684 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13684 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13684 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13685 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13685 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13687 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13688 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13689 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:25 [ localhost-startStop-1:13689 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:26 [ localhost-startStop-1:14508 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:57:12 CST 2018]; root of context hierarchy
2018-07-05 18:57:27 [ localhost-startStop-1:14961 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:57:12 CST 2018]; root of context hierarchy
2018-07-05 18:57:28 [ localhost-startStop-1:16156 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:57:31 [ localhost-startStop-1:19436 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:31 [ localhost-startStop-1:19437 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:31 [ localhost-startStop-1:19437 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:57:31 [ localhost-startStop-1:19438 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:31 [ localhost-startStop-1:19438 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19440 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:31 [ localhost-startStop-1:19440 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19441 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:31 [ localhost-startStop-1:19442 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:57:31 [ localhost-startStop-1:19442 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19445 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:31 [ localhost-startStop-1:19446 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:31 [ localhost-startStop-1:19446 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19447 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19447 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19448 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19449 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:31 [ localhost-startStop-1:19449 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:57:31 [ localhost-startStop-1:19450 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:57:31 [ localhost-startStop-1:19450 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19452 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:57:31 [ localhost-startStop-1:19453 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19453 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19453 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19454 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19454 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:31 [ localhost-startStop-1:19455 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19457 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:31 [ localhost-startStop-1:19457 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19459 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19459 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19460 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19460 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19460 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19460 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19461 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19462 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19462 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19462 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19462 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19466 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19466 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19466 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19467 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19467 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19467 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19467 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19468 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:57:31 [ localhost-startStop-1:19471 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19472 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19472 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19472 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19473 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19473 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19473 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19473 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19476 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19477 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19480 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19480 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:31 [ localhost-startStop-1:19481 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:32 [ localhost-startStop-1:19928 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 18:57:12 CST 2018]; root of context hierarchy
2018-07-05 18:57:32 [ localhost-startStop-1:20152 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 18:57:32 [ localhost-startStop-1:20285 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 18:57:32 [ localhost-startStop-1:20644 ] - [ INFO ] Root WebApplicationContext: initialization completed in 20644 ms
2018-07-05 18:57:32 [ localhost-startStop-1:20699 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 18:57:32 [ localhost-startStop-1:20753 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 18:57:32 [ localhost-startStop-1:20753 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 18:57:32 [ localhost-startStop-1:20763 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 18:57:32 [ localhost-startStop-1:20763 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 18:57:32 [ localhost-startStop-1:20764 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 18:57:32 [ localhost-startStop-1:20799 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:57:32 [ localhost-startStop-1:20801 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:57:32 [ localhost-startStop-1:20805 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:57:33 [ localhost-startStop-1:20996 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 18:57:33 [ localhost-startStop-1:20999 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:57:33 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:57:33 [ localhost-startStop-1:20999 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 18:57:33 [ localhost-startStop-1:21054 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:33 [ localhost-startStop-1:21057 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:33 [ localhost-startStop-1:21057 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 18:57:33 [ localhost-startStop-1:21078 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 18:57:33 [ localhost-startStop-1:21493 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:33 [ localhost-startStop-1:21493 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:33 [ localhost-startStop-1:21495 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 18:57:33 [ localhost-startStop-1:21496 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:33 [ localhost-startStop-1:21497 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21500 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 18:57:33 [ localhost-startStop-1:21503 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21511 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:33 [ localhost-startStop-1:21511 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 18:57:33 [ localhost-startStop-1:21511 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21511 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:33 [ localhost-startStop-1:21512 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:33 [ localhost-startStop-1:21513 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21516 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21518 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21519 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21519 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 18:57:33 [ localhost-startStop-1:21522 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 18:57:33 [ localhost-startStop-1:21523 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 18:57:33 [ localhost-startStop-1:21523 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21525 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 18:57:33 [ localhost-startStop-1:21527 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21527 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21528 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21529 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21529 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:33 [ localhost-startStop-1:21530 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21538 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 18:57:33 [ localhost-startStop-1:21541 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21543 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21547 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21550 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21556 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21557 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21557 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21558 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21560 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21560 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21561 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21561 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21563 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21564 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21564 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21565 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21565 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21566 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21566 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21567 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 18:57:33 [ localhost-startStop-1:21575 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21576 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21578 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21580 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21580 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21582 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21582 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21585 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21586 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21586 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21587 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21587 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:33 [ localhost-startStop-1:21588 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:57:34 [ localhost-startStop-1:22119 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:57:33 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:57:34 [ localhost-startStop-1:22576 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 18:57:33 CST 2018]; parent: Root WebApplicationContext
2018-07-05 18:57:35 [ localhost-startStop-1:23422 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 18:57:35 [ localhost-startStop-1:23458 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 18:57:36 [ localhost-startStop-1:23991 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2995 ms
2018-07-05 18:57:41 [ http-bio-8080-exec-1:29289 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 18:57:41 [ http-bio-8080-exec-1:29294 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 18:57:41 [ DefaultQuartzScheduler_Worker-1:29308 ] - [ INFO ] Validating all active sessions...
2018-07-05 18:57:41 [ DefaultQuartzScheduler_Worker-1:29320 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 18:57:41 [ http-bio-8080-exec-1:29361 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 19:00:35 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 19:00:35 [ localhost-startStop-1:79 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 19:00:35 CST 2018]; root of context hierarchy
2018-07-05 19:00:35 [ localhost-startStop-1:135 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 19:00:35 [ localhost-startStop-1:540 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:823 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:887 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:1056 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:1225 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:36 [ localhost-startStop-1:1226 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:36 [ localhost-startStop-1:1226 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:36 [ localhost-startStop-1:1230 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:1265 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 19:00:36 [ localhost-startStop-1:1308 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1924 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:00:37 [ localhost-startStop-1:1925 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 19:00:37 [ localhost-startStop-1:2235 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 19:00:38 [ localhost-startStop-1:3046 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:38 [ localhost-startStop-1:3203 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 19:00:38 [ localhost-startStop-1:3667 ] - [ INFO ] {dataSource-1} inited
2018-07-05 19:00:38 [ localhost-startStop-1:3667 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4428 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4432 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4444 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4449 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4451 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4454 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4470 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4474 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4479 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4482 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4486 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4491 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4496 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4500 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4503 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4542 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4555 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4567 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4594 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:39 [ localhost-startStop-1:4613 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:40 [ localhost-startStop-1:4800 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 19:00:40 [ localhost-startStop-1:5019 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:40 [ localhost-startStop-1:5026 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:40 [ localhost-startStop-1:5035 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:40 [ localhost-startStop-1:5040 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:40 [ localhost-startStop-1:5174 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#62b98169' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:5864 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#240bc8f8' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:5867 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#14286a7' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:5873 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#66c021c9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:5877 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#485c46b1' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:5974 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6019 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6026 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6032 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6037 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6118 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6163 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6166 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6188 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6192 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6197 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6201 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6415 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6539 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6575 ] - [ INFO ] Bean 'util:map#5b1827ad' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:41 [ localhost-startStop-1:6580 ] - [ INFO ] Bean 'util:map#5b1827ad' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:00:49 [ localhost-startStop-1:13831 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13833 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 19:00:49 [ localhost-startStop-1:13834 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:49 [ localhost-startStop-1:13835 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:49 [ localhost-startStop-1:13835 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:00:49 [ localhost-startStop-1:13842 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13842 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:49 [ localhost-startStop-1:13843 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:00:49 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:49 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13848 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 19:00:49 [ localhost-startStop-1:13850 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13851 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:49 [ localhost-startStop-1:13858 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13859 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13859 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13861 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:49 [ localhost-startStop-1:13866 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 19:00:49 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 19:00:49 [ localhost-startStop-1:13867 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13872 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13872 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13873 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:49 [ localhost-startStop-1:13873 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 19:00:49 [ localhost-startStop-1:13873 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13874 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13875 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13881 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13882 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13882 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13883 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13883 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13883 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13886 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13886 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:49 [ localhost-startStop-1:13887 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13889 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13889 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13890 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13890 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13905 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13905 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13905 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13906 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13906 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13907 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13907 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13908 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:00:49 [ localhost-startStop-1:13913 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13913 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13914 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13914 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13916 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13917 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13917 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13917 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13918 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13918 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13918 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13918 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:49 [ localhost-startStop-1:13919 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:50 [ localhost-startStop-1:14795 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 19:00:35 CST 2018]; root of context hierarchy
2018-07-05 19:00:50 [ localhost-startStop-1:15347 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 19:00:35 CST 2018]; root of context hierarchy
2018-07-05 19:00:52 [ localhost-startStop-1:16870 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 19:00:52 [ localhost-startStop-1:17521 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 19:00:52 [ localhost-startStop-1:17700 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 19:00:53 [ localhost-startStop-1:18378 ] - [ INFO ] Root WebApplicationContext: initialization completed in 18377 ms
2018-07-05 19:00:53 [ localhost-startStop-1:18433 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 19:00:53 [ localhost-startStop-1:18468 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 19:00:53 [ localhost-startStop-1:18468 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 19:00:53 [ localhost-startStop-1:18470 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 19:00:53 [ localhost-startStop-1:18470 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 19:00:53 [ localhost-startStop-1:18471 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 19:00:53 [ localhost-startStop-1:18511 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:00:53 [ localhost-startStop-1:18516 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:00:53 [ localhost-startStop-1:18525 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:00:53 [ localhost-startStop-1:18724 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 19:00:53 [ localhost-startStop-1:18728 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:00:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:00:53 [ localhost-startStop-1:18728 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 19:00:54 [ localhost-startStop-1:18785 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:54 [ localhost-startStop-1:18785 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:54 [ localhost-startStop-1:18785 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:00:54 [ localhost-startStop-1:18810 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 19:00:54 [ localhost-startStop-1:19337 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19338 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 19:00:54 [ localhost-startStop-1:19339 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:54 [ localhost-startStop-1:19339 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:54 [ localhost-startStop-1:19339 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:00:54 [ localhost-startStop-1:19341 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19342 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:54 [ localhost-startStop-1:19342 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:00:54 [ localhost-startStop-1:19342 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:54 [ localhost-startStop-1:19342 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19343 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 19:00:54 [ localhost-startStop-1:19343 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19345 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:54 [ localhost-startStop-1:19348 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19348 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19349 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19350 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 19:00:54 [ localhost-startStop-1:19350 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 19:00:54 [ localhost-startStop-1:19351 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 19:00:54 [ localhost-startStop-1:19351 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19362 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19362 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19363 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:54 [ localhost-startStop-1:19363 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 19:00:54 [ localhost-startStop-1:19365 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19366 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19366 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19378 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19378 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19379 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19379 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19380 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19380 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19380 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19399 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 19:00:54 [ localhost-startStop-1:19400 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19401 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19402 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19406 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19406 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19406 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19407 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19407 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19407 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19408 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19409 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:00:54 [ localhost-startStop-1:19426 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19426 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19427 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19427 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19427 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19428 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19428 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19428 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19429 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19429 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19429 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19430 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:54 [ localhost-startStop-1:19430 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:00:55 [ localhost-startStop-1:20109 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:00:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:00:55 [ localhost-startStop-1:20513 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:00:53 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:00:56 [ localhost-startStop-1:21484 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 19:00:56 [ localhost-startStop-1:21527 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 19:00:57 [ localhost-startStop-1:21917 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3193 ms
2018-07-05 19:01:08 [ http-bio-8080-exec-1:33042 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 19:01:08 [ http-bio-8080-exec-1:33047 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:01:08 [ DefaultQuartzScheduler_Worker-1:33058 ] - [ INFO ] Validating all active sessions...
2018-07-05 19:01:08 [ DefaultQuartzScheduler_Worker-1:33075 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 19:01:08 [ http-bio-8080-exec-1:33127 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
2018-07-05 19:05:21 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-07-05 19:05:21 [ localhost-startStop-1:123 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jul 05 19:05:21 CST 2018]; root of context hierarchy
2018-07-05 19:05:21 [ localhost-startStop-1:220 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-07-05 19:05:22 [ localhost-startStop-1:844 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-07-05 19:05:22 [ localhost-startStop-1:1188 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-07-05 19:05:22 [ localhost-startStop-1:1277 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-07-05 19:05:22 [ localhost-startStop-1:1458 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-07-05 19:05:22 [ localhost-startStop-1:1680 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:22 [ localhost-startStop-1:1683 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:22 [ localhost-startStop-1:1683 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:22 [ localhost-startStop-1:1686 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-07-05 19:05:23 [ localhost-startStop-1:1715 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-07-05 19:05:23 [ localhost-startStop-1:1772 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-07-05 19:05:24 [ localhost-startStop-1:2739 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2739 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataInfoDao' and 'cn.financial.dao.BusinessDataInfoDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2740 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2740 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2740 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2741 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2742 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2742 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2742 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2742 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2742 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2743 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2743 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-07-05 19:05:24 [ localhost-startStop-1:2743 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-07-05 19:05:24 [ localhost-startStop-1:3019 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 19:05:25 [ localhost-startStop-1:3746 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:25 [ localhost-startStop-1:4054 ] - [ ERROR ] maxIdle is deprecated
2018-07-05 19:05:25 [ localhost-startStop-1:4573 ] - [ INFO ] {dataSource-1} inited
2018-07-05 19:05:25 [ localhost-startStop-1:4573 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5446 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5450 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5465 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5468 ] - [ INFO ] Bean 'businessDataInfoDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5471 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5478 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5482 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5485 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5489 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5494 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5505 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5513 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5517 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5521 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5529 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5554 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5564 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5568 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5594 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:26 [ localhost-startStop-1:5599 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:27 [ localhost-startStop-1:5693 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 19:05:27 [ localhost-startStop-1:5943 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:27 [ localhost-startStop-1:5946 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:27 [ localhost-startStop-1:5960 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:27 [ localhost-startStop-1:5965 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:27 [ localhost-startStop-1:6145 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#69cfa084' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6813 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#2e740ad8' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6816 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3527cf00' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6819 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#53f4f5e5' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6824 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#47aba49f' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6934 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6975 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6987 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:6995 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7001 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7095 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7152 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7158 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7213 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7218 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7224 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7229 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7439 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7599 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7638 ] - [ INFO ] Bean 'util:map#1b4d90ca' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:28 [ localhost-startStop-1:7643 ] - [ INFO ] Bean 'util:map#1b4d90ca' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-07-05 19:05:36 [ localhost-startStop-1:14768 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:05:36 [ localhost-startStop-1:14771 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 19:05:36 [ localhost-startStop-1:14773 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:36 [ localhost-startStop-1:14774 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14775 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:36 [ localhost-startStop-1:14779 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:05:36 [ localhost-startStop-1:14782 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14784 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:36 [ localhost-startStop-1:14784 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:36 [ localhost-startStop-1:14785 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14785 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 19:05:36 [ localhost-startStop-1:14786 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14789 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:36 [ localhost-startStop-1:14797 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14799 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14800 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:36 [ localhost-startStop-1:14801 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14802 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 19:05:36 [ localhost-startStop-1:14803 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 19:05:36 [ localhost-startStop-1:14803 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14806 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14808 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14810 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 19:05:36 [ localhost-startStop-1:14813 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14816 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:36 [ localhost-startStop-1:14818 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14833 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14837 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:36 [ localhost-startStop-1:14840 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14841 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14842 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14843 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14847 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14850 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14853 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14856 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14860 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14861 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14862 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14862 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14865 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14866 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14867 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14867 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14869 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14870 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14872 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14875 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:05:36 [ localhost-startStop-1:14888 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14889 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14894 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14895 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14895 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14896 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14896 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14897 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14898 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14900 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14901 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14902 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:14902 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:36 [ localhost-startStop-1:15553 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 19:05:21 CST 2018]; root of context hierarchy
2018-07-05 19:05:37 [ localhost-startStop-1:15985 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jul 05 19:05:21 CST 2018]; root of context hierarchy
2018-07-05 19:05:38 [ localhost-startStop-1:17138 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 19:05:38 [ localhost-startStop-1:17563 ] - [ INFO ] Initializing ExecutorService  'defaultSockJsTaskScheduler'
2018-07-05 19:05:38 [ localhost-startStop-1:17687 ] - [ INFO ] Mapped URL path [/webSocketServer] onto handler of type [class org.springframework.web.socket.server.support.WebSocketHttpRequestHandler]
2018-07-05 19:05:39 [ localhost-startStop-1:18000 ] - [ INFO ] Root WebApplicationContext: initialization completed in 17999 ms
2018-07-05 19:05:39 [ localhost-startStop-1:18048 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-07-05 19:05:39 [ localhost-startStop-1:18098 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-07-05 19:05:39 [ localhost-startStop-1:18098 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-07-05 19:05:39 [ localhost-startStop-1:18101 ] - [ INFO ] RAMJobStore initialized.
2018-07-05 19:05:39 [ localhost-startStop-1:18101 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-07-05 19:05:39 [ localhost-startStop-1:18115 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-07-05 19:05:39 [ localhost-startStop-1:18140 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:05:39 [ localhost-startStop-1:18143 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:05:39 [ localhost-startStop-1:18147 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:05:39 [ localhost-startStop-1:18372 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-07-05 19:05:39 [ localhost-startStop-1:18375 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:05:39 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:05:39 [ localhost-startStop-1:18375 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-07-05 19:05:39 [ localhost-startStop-1:18431 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:39 [ localhost-startStop-1:18433 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:39 [ localhost-startStop-1:18435 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-07-05 19:05:39 [ localhost-startStop-1:18459 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-07-05 19:05:40 [ localhost-startStop-1:18817 ] - [ INFO ] Mapped "{[/businessData/export],methods=[GET]}" onto public void cn.financial.controller.BusinessDataController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:05:40 [ localhost-startStop-1:18818 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-07-05 19:05:40 [ localhost-startStop-1:18819 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:40 [ localhost-startStop-1:18821 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[GET]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18821 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:40 [ localhost-startStop-1:18823 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-07-05 19:05:40 [ localhost-startStop-1:18824 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18825 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:40 [ localhost-startStop-1:18825 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:40 [ localhost-startStop-1:18828 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18830 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-07-05 19:05:40 [ localhost-startStop-1:18831 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18832 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:40 [ localhost-startStop-1:18833 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18834 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18834 ] - [ INFO ] Mapped "{[/dataModule/editDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.editDataModule(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)
2018-07-05 19:05:40 [ localhost-startStop-1:18835 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18836 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-07-05 19:05:40 [ localhost-startStop-1:18837 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-07-05 19:05:40 [ localhost-startStop-1:18837 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18840 ] - [ INFO ] Mapped "{[/message/getbyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.getMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18841 ] - [ INFO ] Mapped "{[/message/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18842 ] - [ INFO ] Mapped "{[/message/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.listMessageBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.text.ParseException
2018-07-05 19:05:40 [ localhost-startStop-1:18844 ] - [ INFO ] Mapped "{[/message/deletebyid],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.deleteMessageById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18846 ] - [ INFO ] Mapped "{[/message/saveMessageByUser],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.MessageController.saveMessageByUser(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:40 [ localhost-startStop-1:18848 ] - [ INFO ] Mapped "{[/message/updatebyid],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MessageController.updateMessageById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18849 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18856 ] - [ INFO ] Mapped "{[/organization/discontinuate]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-07-05 19:05:40 [ localhost-startStop-1:18858 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18859 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18860 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18863 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18864 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18864 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18865 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18866 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18867 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18867 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18871 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18871 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18880 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18882 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18883 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18884 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18884 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18884 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18887 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18888 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-07-05 19:05:40 [ localhost-startStop-1:18891 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18892 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18894 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18895 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18896 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18896 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18896 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18897 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18899 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18899 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18900 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18900 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:18901 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:05:40 [ localhost-startStop-1:19378 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:05:39 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:05:41 [ localhost-startStop-1:19739 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jul 05 19:05:39 CST 2018]; parent: Root WebApplicationContext
2018-07-05 19:05:41 [ localhost-startStop-1:20485 ] - [ INFO ] Initializing EhCache CacheManager
2018-07-05 19:05:41 [ localhost-startStop-1:20514 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-07-05 19:05:42 [ localhost-startStop-1:20848 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2476 ms
2018-07-05 19:06:29 [ http-bio-8080-exec-1:68608 ] - [ INFO ] Enabling session validation scheduler...
2018-07-05 19:06:29 [ http-bio-8080-exec-1:68614 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-07-05 19:06:29 [ DefaultQuartzScheduler_Worker-1:68627 ] - [ INFO ] Validating all active sessions...
2018-07-05 19:06:29 [ DefaultQuartzScheduler_Worker-1:68643 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-07-05 19:06:30 [ http-bio-8080-exec-1:68704 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?password=Welcome2&username=r&
