2018-06-28 10:25:51 [ localhost-startStop-1:4154 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 10:28:39 [ localhost-startStop-1:4520 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:01:04 [ localhost-startStop-1:4587 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:02:19 [ localhost-startStop-1:4712 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:07:20 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:07:20 [ localhost-startStop-1:143 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:07:20 CST 2018]; root of context hierarchy
2018-06-28 11:07:20 [ localhost-startStop-1:451 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:07:22 [ localhost-startStop-1:1601 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:07:22 [ localhost-startStop-1:1991 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 11:07:22 [ localhost-startStop-1:2144 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:07:23 [ localhost-startStop-1:2738 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:07:23 [ localhost-startStop-1:2981 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:23 [ localhost-startStop-1:2985 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:23 [ localhost-startStop-1:2987 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:23 [ localhost-startStop-1:3005 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:07:23 [ localhost-startStop-1:3094 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:07:23 [ localhost-startStop-1:3155 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:07:24 [ localhost-startStop-1:4021 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4021 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4021 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:07:24 [ localhost-startStop-1:4022 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 11:07:24 [ localhost-startStop-1:4131 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:07:25 [ localhost-startStop-1:4720 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:25 [ localhost-startStop-1:4942 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:07:25 [ localhost-startStop-1:5491 ] - [ INFO ] {dataSource-1} inited
2018-06-28 11:07:25 [ localhost-startStop-1:5491 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6666 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6675 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6693 ] - [ INFO ] Bean 'budgetDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6695 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6700 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6703 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6705 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6708 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6730 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6731 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6742 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6745 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6756 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6763 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6767 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6792 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6812 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6856 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6908 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6911 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:6982 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:07:27 [ localhost-startStop-1:7325 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:7326 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:7332 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:27 [ localhost-startStop-1:7337 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:28 [ localhost-startStop-1:7563 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#d65970c' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8532 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#3467079' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8533 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#a3242e1' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8534 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#5e532b54' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8536 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#7f2f1a65' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8644 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8685 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8688 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8700 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8703 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8818 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8848 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8853 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8874 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8876 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8889 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:8891 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:9066 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:9122 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:9142 ] - [ INFO ] Bean 'util:map#5577f8e8' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:29 [ localhost-startStop-1:9147 ] - [ INFO ] Bean 'util:map#5577f8e8' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:07:33 [ localhost-startStop-1:12796 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12815 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:07:33 [ localhost-startStop-1:12817 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12818 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12821 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12822 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:07:33 [ localhost-startStop-1:12836 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:07:33 [ localhost-startStop-1:12837 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12837 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12837 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:07:33 [ localhost-startStop-1:12838 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12838 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12839 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12839 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12848 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12849 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12849 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12854 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12854 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:07:33 [ localhost-startStop-1:12855 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:07:33 [ localhost-startStop-1:12856 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:07:33 [ localhost-startStop-1:12920 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12921 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12923 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12924 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12924 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12924 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12925 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12925 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:33 [ localhost-startStop-1:12928 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12937 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12939 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12939 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12940 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12944 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12945 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12945 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12946 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12946 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12946 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12947 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12948 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12965 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12965 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12966 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12966 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12966 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12967 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12969 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12969 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12970 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12970 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12970 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12971 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:33 [ localhost-startStop-1:12971 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:34 [ localhost-startStop-1:13857 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:07:20 CST 2018]; root of context hierarchy
2018-06-28 11:07:34 [ localhost-startStop-1:14216 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:07:20 CST 2018]; root of context hierarchy
2018-06-28 11:07:35 [ localhost-startStop-1:15416 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:07:36 [ localhost-startStop-1:16103 ] - [ INFO ] Root WebApplicationContext: initialization completed in 16103 ms
2018-06-28 11:07:36 [ localhost-startStop-1:16167 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 11:07:36 [ localhost-startStop-1:16192 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:07:36 [ localhost-startStop-1:16192 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 11:07:36 [ localhost-startStop-1:16194 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 11:07:36 [ localhost-startStop-1:16194 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 11:07:36 [ localhost-startStop-1:16196 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 11:07:36 [ localhost-startStop-1:16238 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:07:36 [ localhost-startStop-1:16245 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:07:36 [ localhost-startStop-1:16248 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:07:36 [ localhost-startStop-1:16481 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 11:07:36 [ localhost-startStop-1:16498 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:07:36 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:07:36 [ localhost-startStop-1:16498 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 11:07:37 [ localhost-startStop-1:16801 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:37 [ localhost-startStop-1:16803 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:37 [ localhost-startStop-1:16803 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:07:37 [ localhost-startStop-1:16854 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:07:37 [ localhost-startStop-1:17479 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17481 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:07:37 [ localhost-startStop-1:17481 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17481 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17481 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17482 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:07:37 [ localhost-startStop-1:17484 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:07:37 [ localhost-startStop-1:17484 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17485 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17485 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:07:37 [ localhost-startStop-1:17485 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17485 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17485 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17486 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17489 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17489 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17489 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17492 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17492 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:07:37 [ localhost-startStop-1:17492 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:07:37 [ localhost-startStop-1:17493 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:07:37 [ localhost-startStop-1:17494 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17495 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17497 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17498 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17498 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17498 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17498 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17498 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:07:37 [ localhost-startStop-1:17499 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17504 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17504 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17505 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17506 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17507 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17508 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17508 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17508 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17508 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17509 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17509 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17510 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17512 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17513 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17513 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17513 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17513 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17514 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17514 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17514 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17514 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17514 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17515 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17515 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:37 [ localhost-startStop-1:17515 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:07:38 [ localhost-startStop-1:17901 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:07:36 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:07:38 [ localhost-startStop-1:18134 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:07:36 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:07:39 [ localhost-startStop-1:18835 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:07:39 [ localhost-startStop-1:18905 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:07:39 [ localhost-startStop-1:19165 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 2682 ms
2018-06-28 11:13:52 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:13:53 [ localhost-startStop-1:102 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:13:53 CST 2018]; root of context hierarchy
2018-06-28 11:13:53 [ localhost-startStop-1:171 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:13:54 [ localhost-startStop-1:1206 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:13:54 [ localhost-startStop-1:1580 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 11:13:54 [ localhost-startStop-1:1663 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:13:55 [ localhost-startStop-1:2224 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:13:55 [ localhost-startStop-1:2424 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:13:55 [ localhost-startStop-1:2426 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:13:55 [ localhost-startStop-1:2427 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:13:55 [ localhost-startStop-1:2440 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:13:55 [ localhost-startStop-1:2563 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:13:55 [ localhost-startStop-1:2626 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:15:11 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:15:11 [ localhost-startStop-1:70 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:15:11 CST 2018]; root of context hierarchy
2018-06-28 11:15:11 [ localhost-startStop-1:120 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:15:12 [ localhost-startStop-1:666 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:15:12 [ localhost-startStop-1:946 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:15:13 [ localhost-startStop-1:1488 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:15:13 [ localhost-startStop-1:1674 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:15:13 [ localhost-startStop-1:1677 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:15:13 [ localhost-startStop-1:1677 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:15:13 [ localhost-startStop-1:1704 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:15:13 [ localhost-startStop-1:1830 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:15:13 [ localhost-startStop-1:1938 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:36:08 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:36:08 [ localhost-startStop-1:219 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:36:08 CST 2018]; root of context hierarchy
2018-06-28 11:36:09 [ localhost-startStop-1:274 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:36:09 [ localhost-startStop-1:730 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:36:09 [ localhost-startStop-1:1005 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 11:36:09 [ localhost-startStop-1:1089 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:36:10 [ localhost-startStop-1:1706 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:36:10 [ localhost-startStop-1:1861 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:10 [ localhost-startStop-1:1865 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:10 [ localhost-startStop-1:1868 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:10 [ localhost-startStop-1:1876 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:36:10 [ localhost-startStop-1:1907 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:36:10 [ localhost-startStop-1:1971 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:36:11 [ localhost-startStop-1:2493 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2494 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2495 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2495 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2495 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2498 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2500 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2502 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2504 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2506 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2508 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2508 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2509 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:36:11 [ localhost-startStop-1:2513 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 11:36:11 [ localhost-startStop-1:2647 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:36:12 [ localhost-startStop-1:3271 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:12 [ localhost-startStop-1:3434 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:36:12 [ localhost-startStop-1:3769 ] - [ INFO ] {dataSource-1} inited
2018-06-28 11:36:12 [ localhost-startStop-1:3770 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4452 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4463 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4485 ] - [ INFO ] Bean 'budgetDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4488 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4490 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4491 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4494 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4497 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4515 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4518 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4519 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4521 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4533 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4536 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4537 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4553 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4585 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4591 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4617 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4622 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4691 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:36:13 [ localhost-startStop-1:4900 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4905 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4911 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:4916 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:13 [ localhost-startStop-1:5008 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2fdb52fa' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6023 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#87a18c2' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6032 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#1a89e22' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6033 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#68017428' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6035 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#1db8a750' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6183 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6235 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:14 [ localhost-startStop-1:6240 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6244 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6247 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6332 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6391 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6398 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6475 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6477 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6481 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6484 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6635 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6721 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6733 ] - [ INFO ] Bean 'util:map#3db0549f' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:15 [ localhost-startStop-1:6735 ] - [ INFO ] Bean 'util:map#3db0549f' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:36:17 [ localhost-startStop-1:8907 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:8914 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:8919 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:8923 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:36:17 [ localhost-startStop-1:8927 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:36:17 [ localhost-startStop-1:8929 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:8941 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:36:17 [ localhost-startStop-1:8944 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:8945 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:8945 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:8945 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:8946 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:36:17 [ localhost-startStop-1:8948 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:8948 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:8962 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:8962 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:8963 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:8975 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:36:17 [ localhost-startStop-1:8975 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:36:17 [ localhost-startStop-1:8987 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:8990 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:36:17 [ localhost-startStop-1:9000 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:17 [ localhost-startStop-1:9001 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9004 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9007 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9008 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9009 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9013 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9029 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9036 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9039 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9040 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9048 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9048 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9051 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9051 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9053 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9053 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9054 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9067 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9068 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9071 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9081 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9082 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9084 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9085 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9085 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9085 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9087 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9087 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9096 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9096 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9097 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9097 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:17 [ localhost-startStop-1:9098 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:18 [ localhost-startStop-1:9546 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:36:08 CST 2018]; root of context hierarchy
2018-06-28 11:36:18 [ localhost-startStop-1:9810 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:36:08 CST 2018]; root of context hierarchy
2018-06-28 11:36:19 [ localhost-startStop-1:10307 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:36:19 [ localhost-startStop-1:10569 ] - [ INFO ] Root WebApplicationContext: initialization completed in 10567 ms
2018-06-28 11:36:19 [ localhost-startStop-1:10640 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 11:36:19 [ localhost-startStop-1:10663 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:36:19 [ localhost-startStop-1:10664 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 11:36:19 [ localhost-startStop-1:10665 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 11:36:19 [ localhost-startStop-1:10665 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 11:36:19 [ localhost-startStop-1:10666 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 11:36:19 [ localhost-startStop-1:10705 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:36:19 [ localhost-startStop-1:10709 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:36:19 [ localhost-startStop-1:10711 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:36:19 [ localhost-startStop-1:10858 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 11:36:19 [ localhost-startStop-1:10862 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:36:19 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:36:19 [ localhost-startStop-1:10864 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 11:36:19 [ localhost-startStop-1:11019 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:19 [ localhost-startStop-1:11022 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:19 [ localhost-startStop-1:11024 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:36:19 [ localhost-startStop-1:11052 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:36:20 [ localhost-startStop-1:11302 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11304 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11305 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11305 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:36:20 [ localhost-startStop-1:11305 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:36:20 [ localhost-startStop-1:11305 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11309 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:36:20 [ localhost-startStop-1:11309 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11310 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11311 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11313 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11314 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:36:20 [ localhost-startStop-1:11315 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11315 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11316 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11317 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11317 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11318 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:36:20 [ localhost-startStop-1:11319 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:36:20 [ localhost-startStop-1:11319 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11320 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:36:20 [ localhost-startStop-1:11321 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:36:20 [ localhost-startStop-1:11324 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11324 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11324 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11325 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11325 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11326 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11326 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11327 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11329 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11331 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11331 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11332 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11334 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11336 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11337 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11337 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11338 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11341 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11341 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11342 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11347 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11350 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11350 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11350 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11351 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11352 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11352 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11352 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11353 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11364 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11364 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11365 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11365 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:36:20 [ localhost-startStop-1:11645 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:36:19 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:36:20 [ localhost-startStop-1:11817 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:36:19 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:36:20 [ localhost-startStop-1:12133 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:36:20 [ localhost-startStop-1:12165 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:36:21 [ localhost-startStop-1:12382 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 1524 ms
2018-06-28 11:41:13 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:41:13 [ localhost-startStop-1:105 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:41:13 CST 2018]; root of context hierarchy
2018-06-28 11:41:13 [ localhost-startStop-1:180 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:41:14 [ localhost-startStop-1:943 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:41:14 [ localhost-startStop-1:1281 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 11:41:14 [ localhost-startStop-1:1405 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:41:15 [ localhost-startStop-1:1959 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:41:15 [ localhost-startStop-1:2195 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:15 [ localhost-startStop-1:2198 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:15 [ localhost-startStop-1:2199 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:15 [ localhost-startStop-1:2203 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:41:15 [ localhost-startStop-1:2285 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:41:15 [ localhost-startStop-1:2352 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:41:16 [ localhost-startStop-1:3778 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 11:41:17 [ localhost-startStop-1:4272 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:41:18 [ localhost-startStop-1:5730 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:19 [ localhost-startStop-1:6105 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:41:19 [ localhost-startStop-1:6563 ] - [ INFO ] {dataSource-1} inited
2018-06-28 11:41:19 [ localhost-startStop-1:6563 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7657 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7660 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7673 ] - [ INFO ] Bean 'budgetDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7694 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7698 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7702 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7705 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7708 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7715 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7718 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7722 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7726 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7741 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7744 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7747 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7769 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7778 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7783 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:20 [ localhost-startStop-1:7834 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:7847 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:7967 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:41:21 [ localhost-startStop-1:8251 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:8257 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:8280 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:8284 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:21 [ localhost-startStop-1:8422 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#68cfb90d' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9120 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#15f1fc2b' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9122 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#701dc943' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9125 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#26047641' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9129 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#3396a45d' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9204 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9233 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9240 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9254 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9267 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9370 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9426 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9429 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9457 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9461 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9477 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9485 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:22 [ localhost-startStop-1:9735 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:23 [ localhost-startStop-1:9878 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:23 [ localhost-startStop-1:9925 ] - [ INFO ] Bean 'util:map#254a1692' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:23 [ localhost-startStop-1:9932 ] - [ INFO ] Bean 'util:map#254a1692' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:41:27 [ localhost-startStop-1:14300 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14304 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14305 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:41:27 [ localhost-startStop-1:14306 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14306 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14307 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:41:27 [ localhost-startStop-1:14316 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:41:27 [ localhost-startStop-1:14316 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14317 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14318 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14318 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14319 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:41:27 [ localhost-startStop-1:14320 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14320 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14326 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14327 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14329 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14334 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14335 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:41:27 [ localhost-startStop-1:14336 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:41:27 [ localhost-startStop-1:14337 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:41:27 [ localhost-startStop-1:14343 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14344 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14345 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14346 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14347 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:27 [ localhost-startStop-1:14350 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14351 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14352 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14356 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14358 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14359 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14360 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14361 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14368 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14369 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14369 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14370 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14370 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14370 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14371 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14372 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14382 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14382 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14383 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14383 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14384 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14384 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14384 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14386 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14387 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14390 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14390 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14392 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:27 [ localhost-startStop-1:14392 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:28 [ localhost-startStop-1:15565 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:41:13 CST 2018]; root of context hierarchy
2018-06-28 11:41:29 [ localhost-startStop-1:16247 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:41:13 CST 2018]; root of context hierarchy
2018-06-28 11:41:31 [ localhost-startStop-1:17881 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:41:32 [ localhost-startStop-1:18973 ] - [ INFO ] Root WebApplicationContext: initialization completed in 18972 ms
2018-06-28 11:41:32 [ localhost-startStop-1:19052 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 11:41:32 [ localhost-startStop-1:19097 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:41:32 [ localhost-startStop-1:19097 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 11:41:32 [ localhost-startStop-1:19100 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 11:41:32 [ localhost-startStop-1:19100 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 11:41:32 [ localhost-startStop-1:19100 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 11:41:32 [ localhost-startStop-1:19135 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:41:32 [ localhost-startStop-1:19140 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:41:32 [ localhost-startStop-1:19145 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:41:32 [ localhost-startStop-1:19362 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 11:41:32 [ localhost-startStop-1:19368 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:41:32 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:41:32 [ localhost-startStop-1:19368 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 11:41:32 [ localhost-startStop-1:19428 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:32 [ localhost-startStop-1:19429 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:32 [ localhost-startStop-1:19429 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:41:32 [ localhost-startStop-1:19474 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:41:33 [ localhost-startStop-1:20157 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20160 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20160 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:41:33 [ localhost-startStop-1:20161 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20161 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20161 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:41:33 [ localhost-startStop-1:20171 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:41:33 [ localhost-startStop-1:20171 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20171 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20172 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20173 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20173 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:41:33 [ localhost-startStop-1:20173 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20174 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20178 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20179 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20179 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20187 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:41:33 [ localhost-startStop-1:20188 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:41:33 [ localhost-startStop-1:20189 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:41:33 [ localhost-startStop-1:20191 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20192 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20193 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20193 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20193 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:41:33 [ localhost-startStop-1:20194 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20194 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20194 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20196 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20302 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20302 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20303 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20303 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20306 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20306 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20307 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20308 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20308 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20308 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20310 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20311 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20318 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20319 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20319 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20319 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20320 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20320 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20323 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20324 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20324 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20324 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20325 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20325 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:33 [ localhost-startStop-1:20326 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:41:34 [ localhost-startStop-1:21076 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:41:32 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:41:34 [ localhost-startStop-1:21644 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:41:32 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:41:35 [ localhost-startStop-1:22709 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:41:35 [ localhost-startStop-1:22761 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:41:36 [ localhost-startStop-1:23185 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3823 ms
2018-06-28 11:43:05 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 11:43:05 [ localhost-startStop-1:62 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 11:43:05 CST 2018]; root of context hierarchy
2018-06-28 11:43:05 [ localhost-startStop-1:105 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 11:43:05 [ localhost-startStop-1:513 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 11:43:05 [ localhost-startStop-1:761 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 11:43:05 [ localhost-startStop-1:810 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 11:43:06 [ localhost-startStop-1:1371 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 11:43:06 [ localhost-startStop-1:1577 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:06 [ localhost-startStop-1:1580 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:06 [ localhost-startStop-1:1581 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:06 [ localhost-startStop-1:1588 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 11:43:06 [ localhost-startStop-1:1642 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 11:43:06 [ localhost-startStop-1:1688 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 11:43:07 [ localhost-startStop-1:2320 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2320 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2320 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2321 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2321 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2331 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2333 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2335 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2337 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2340 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2341 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2342 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2342 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 11:43:07 [ localhost-startStop-1:2342 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 11:43:07 [ localhost-startStop-1:2456 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:43:08 [ localhost-startStop-1:2948 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:08 [ localhost-startStop-1:3070 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:43:08 [ localhost-startStop-1:3422 ] - [ INFO ] {dataSource-1} inited
2018-06-28 11:43:08 [ localhost-startStop-1:3422 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4363 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4366 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4386 ] - [ INFO ] Bean 'budgetDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4388 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4391 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4392 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4394 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4396 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4397 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4398 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4399 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4400 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4401 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4403 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4405 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4419 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4424 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4430 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4457 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4463 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4622 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:43:09 [ localhost-startStop-1:4811 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4812 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4817 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:09 [ localhost-startStop-1:4819 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:4935 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2a64e42f' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5432 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#36d98026' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5435 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#43dfd763' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5437 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#634e2083' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5439 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#6e86f559' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5518 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5565 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5580 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5604 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5606 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5681 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5704 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5705 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5729 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5731 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5734 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5737 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:10 [ localhost-startStop-1:5820 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:11 [ localhost-startStop-1:5871 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:11 [ localhost-startStop-1:5883 ] - [ INFO ] Bean 'util:map#5a0ba4a0' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:11 [ localhost-startStop-1:5886 ] - [ INFO ] Bean 'util:map#5a0ba4a0' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 11:43:13 [ localhost-startStop-1:8181 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8190 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:43:13 [ localhost-startStop-1:8191 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:43:13 [ localhost-startStop-1:8191 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8191 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8191 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8202 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:43:13 [ localhost-startStop-1:8202 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8202 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8203 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8203 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8203 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8204 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8204 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:43:13 [ localhost-startStop-1:8212 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8212 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8213 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8215 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:43:13 [ localhost-startStop-1:8215 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:43:13 [ localhost-startStop-1:8219 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8220 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:43:13 [ localhost-startStop-1:8223 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8224 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8224 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8224 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8225 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8226 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8226 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8226 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:13 [ localhost-startStop-1:8228 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8233 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8234 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8236 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8237 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8244 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8244 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8248 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8249 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8249 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8250 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8250 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8250 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8255 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8255 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8255 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8256 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8256 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8256 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8257 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8257 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8257 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8258 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8258 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8258 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8258 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:13 [ localhost-startStop-1:8693 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:43:05 CST 2018]; root of context hierarchy
2018-06-28 11:43:14 [ localhost-startStop-1:8893 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 11:43:05 CST 2018]; root of context hierarchy
2018-06-28 11:43:14 [ localhost-startStop-1:9432 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:43:15 [ localhost-startStop-1:9834 ] - [ INFO ] Root WebApplicationContext: initialization completed in 9834 ms
2018-06-28 11:43:15 [ localhost-startStop-1:9907 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 11:43:15 [ localhost-startStop-1:9960 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 11:43:15 [ localhost-startStop-1:9960 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 11:43:15 [ localhost-startStop-1:9965 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 11:43:15 [ localhost-startStop-1:9965 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 11:43:15 [ localhost-startStop-1:9965 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 11:43:15 [ localhost-startStop-1:10001 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:43:15 [ localhost-startStop-1:10012 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:43:15 [ localhost-startStop-1:10028 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 11:43:15 [ localhost-startStop-1:10161 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 11:43:15 [ localhost-startStop-1:10169 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:43:15 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:43:15 [ localhost-startStop-1:10169 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 11:43:15 [ localhost-startStop-1:10236 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:15 [ localhost-startStop-1:10239 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:15 [ localhost-startStop-1:10240 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 11:43:15 [ localhost-startStop-1:10274 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 11:43:15 [ localhost-startStop-1:10515 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10518 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:43:15 [ localhost-startStop-1:10518 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 11:43:15 [ localhost-startStop-1:10518 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10518 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10518 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10522 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 11:43:15 [ localhost-startStop-1:10522 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10523 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10524 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10524 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10527 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10527 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10529 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 11:43:15 [ localhost-startStop-1:10530 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10530 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10530 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10531 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 11:43:15 [ localhost-startStop-1:10532 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 11:43:15 [ localhost-startStop-1:10532 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10532 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 11:43:15 [ localhost-startStop-1:10534 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10535 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10535 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10535 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10538 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10538 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10541 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10541 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 11:43:15 [ localhost-startStop-1:10542 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10543 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10543 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10544 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10544 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10545 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10546 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10549 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10550 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10550 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10550 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10550 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10550 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10552 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10552 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10552 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10557 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10557 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10557 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10557 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 11:43:15 [ localhost-startStop-1:10742 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:43:15 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:43:16 [ localhost-startStop-1:11001 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 11:43:15 CST 2018]; parent: Root WebApplicationContext
2018-06-28 11:43:16 [ localhost-startStop-1:11367 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 11:43:16 [ localhost-startStop-1:11397 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 11:43:16 [ localhost-startStop-1:11555 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 1394 ms
2018-06-28 11:45:40 [ localhost-startStop-1:0 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:45:40 [ localhost-startStop-1:516 ] - [ INFO ] {dataSource-1} inited
2018-06-28 11:47:00 [ localhost-startStop-1:0 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 11:47:00 [ localhost-startStop-1:582 ] - [ INFO ] {dataSource-1} inited
2018-06-28 12:26:57 [ localhost-startStop-1:0 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 12:26:57 [ localhost-startStop-1:516 ] - [ INFO ] {dataSource-1} inited
2018-06-28 12:38:37 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 12:38:38 [ localhost-startStop-1:92 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 12:38:38 CST 2018]; root of context hierarchy
2018-06-28 12:38:38 [ localhost-startStop-1:165 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 12:38:39 [ localhost-startStop-1:1339 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 12:38:39 [ localhost-startStop-1:1645 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 12:38:39 [ localhost-startStop-1:1763 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 12:38:40 [ localhost-startStop-1:2335 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 12:38:40 [ localhost-startStop-1:2656 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:38:40 [ localhost-startStop-1:2662 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:38:40 [ localhost-startStop-1:2665 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:38:40 [ localhost-startStop-1:2681 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 12:38:40 [ localhost-startStop-1:2820 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 12:38:40 [ localhost-startStop-1:2863 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 12:38:41 [ localhost-startStop-1:4008 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4008 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4008 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4009 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4010 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4010 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4010 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4010 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:38:41 [ localhost-startStop-1:4010 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 12:38:42 [ localhost-startStop-1:4150 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 12:40:05 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 12:40:05 [ localhost-startStop-1:57 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 12:40:05 CST 2018]; root of context hierarchy
2018-06-28 12:40:05 [ localhost-startStop-1:99 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 12:40:06 [ localhost-startStop-1:586 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 12:40:06 [ localhost-startStop-1:829 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 12:40:06 [ localhost-startStop-1:877 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 12:40:07 [ localhost-startStop-1:1443 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 12:40:07 [ localhost-startStop-1:1559 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:07 [ localhost-startStop-1:1560 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:07 [ localhost-startStop-1:1560 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:07 [ localhost-startStop-1:1565 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 12:40:07 [ localhost-startStop-1:1594 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 12:40:07 [ localhost-startStop-1:1639 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 12:40:08 [ localhost-startStop-1:2244 ] - [ WARN ] Skipping MapperFactoryBean with name 'budgetDao' and 'cn.financial.dao.BudgetDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2244 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2244 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2244 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2244 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2245 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2245 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2245 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2245 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2246 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2246 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2246 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2246 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 12:40:08 [ localhost-startStop-1:2247 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 12:40:08 [ localhost-startStop-1:2327 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 12:40:08 [ localhost-startStop-1:2841 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:08 [ localhost-startStop-1:2964 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 12:40:09 [ localhost-startStop-1:3819 ] - [ INFO ] {dataSource-1} inited
2018-06-28 12:40:09 [ localhost-startStop-1:3819 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4651 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4652 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4663 ] - [ INFO ] Bean 'budgetDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4666 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4668 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4670 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4674 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4677 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4681 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4683 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4684 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4687 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4689 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4690 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4691 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4709 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4715 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4720 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4735 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4747 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:4836 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 12:40:10 [ localhost-startStop-1:5045 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:5050 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:5056 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:5058 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:10 [ localhost-startStop-1:5121 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#3eed43bb' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5795 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#7ee573b9' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5797 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#426bb321' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5798 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#49de3241' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5804 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#1dfa405a' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5919 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5956 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5958 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5965 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:5967 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6024 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6054 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6055 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6092 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6094 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6105 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:11 [ localhost-startStop-1:6109 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:12 [ localhost-startStop-1:6279 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:12 [ localhost-startStop-1:6364 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:12 [ localhost-startStop-1:6386 ] - [ INFO ] Bean 'util:map#4b4f2bb2' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:12 [ localhost-startStop-1:6388 ] - [ INFO ] Bean 'util:map#4b4f2bb2' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 12:40:18 [ localhost-startStop-1:12785 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12790 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12792 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 12:40:18 [ localhost-startStop-1:12794 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 12:40:18 [ localhost-startStop-1:12796 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12798 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12808 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 12:40:18 [ localhost-startStop-1:12810 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12812 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12812 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12813 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12814 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12816 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 12:40:18 [ localhost-startStop-1:12816 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12826 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12827 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12831 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12833 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 12:40:18 [ localhost-startStop-1:12838 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 12:40:18 [ localhost-startStop-1:12841 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12843 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 12:40:18 [ localhost-startStop-1:12848 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12849 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12850 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12856 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12857 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:18 [ localhost-startStop-1:12857 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12858 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12861 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12865 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12873 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12875 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12877 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12877 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12881 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12882 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12884 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12884 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12885 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12885 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12885 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12888 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12897 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12897 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12898 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12898 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12899 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12899 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12899 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12900 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12900 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12900 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12901 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12902 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:18 [ localhost-startStop-1:12902 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:19 [ localhost-startStop-1:13315 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 12:40:05 CST 2018]; root of context hierarchy
2018-06-28 12:40:19 [ localhost-startStop-1:13543 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 12:40:05 CST 2018]; root of context hierarchy
2018-06-28 12:40:19 [ localhost-startStop-1:14153 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 12:40:20 [ localhost-startStop-1:14463 ] - [ INFO ] Root WebApplicationContext: initialization completed in 14463 ms
2018-06-28 12:40:20 [ localhost-startStop-1:14524 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 12:40:20 [ localhost-startStop-1:14547 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 12:40:20 [ localhost-startStop-1:14547 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 12:40:20 [ localhost-startStop-1:14549 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 12:40:20 [ localhost-startStop-1:14552 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 12:40:20 [ localhost-startStop-1:14558 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 12:40:20 [ localhost-startStop-1:14595 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 12:40:20 [ localhost-startStop-1:14606 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 12:40:20 [ localhost-startStop-1:14613 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 12:40:20 [ localhost-startStop-1:14726 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 12:40:20 [ localhost-startStop-1:14729 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 12:40:20 CST 2018]; parent: Root WebApplicationContext
2018-06-28 12:40:20 [ localhost-startStop-1:14729 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 12:40:20 [ localhost-startStop-1:14785 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:20 [ localhost-startStop-1:14788 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:20 [ localhost-startStop-1:14790 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 12:40:20 [ localhost-startStop-1:14824 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 12:40:20 [ localhost-startStop-1:15043 ] - [ INFO ] Mapped "{[/organizationode]}" onto public net.sf.json.JSONObject cn.financial.controller.ArchitectureController.organizatioNode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15045 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15048 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 12:40:20 [ localhost-startStop-1:15049 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 12:40:20 [ localhost-startStop-1:15049 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15049 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15053 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 12:40:20 [ localhost-startStop-1:15056 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15058 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15059 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15060 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15060 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15061 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 12:40:20 [ localhost-startStop-1:15061 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15063 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15063 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15064 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15065 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 12:40:20 [ localhost-startStop-1:15067 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 12:40:20 [ localhost-startStop-1:15068 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15069 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 12:40:20 [ localhost-startStop-1:15071 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15072 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15072 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15072 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15073 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 12:40:20 [ localhost-startStop-1:15073 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15073 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15074 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15075 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15076 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15079 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15080 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15080 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15083 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15084 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15085 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15086 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15086 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15086 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15087 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15087 ] - [ INFO ] Mapped "{[/statistic/staticJson],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15090 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15091 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15091 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15091 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15092 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15095 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15096 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15096 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15096 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15097 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15097 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15097 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:20 [ localhost-startStop-1:15098 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 12:40:21 [ localhost-startStop-1:15326 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 12:40:20 CST 2018]; parent: Root WebApplicationContext
2018-06-28 12:40:21 [ localhost-startStop-1:15462 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 12:40:20 CST 2018]; parent: Root WebApplicationContext
2018-06-28 12:40:21 [ localhost-startStop-1:15721 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 12:40:21 [ localhost-startStop-1:15744 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 12:40:21 [ localhost-startStop-1:15894 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 1167 ms
2018-06-28 17:28:26 [ localhost-startStop-1:0 ] - [ INFO ] Root WebApplicationContext: initialization started
2018-06-28 17:28:27 [ localhost-startStop-1:92 ] - [ INFO ] Refreshing Root WebApplicationContext: startup date [Thu Jun 28 17:28:27 CST 2018]; root of context hierarchy
2018-06-28 17:28:27 [ localhost-startStop-1:155 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring.xml]
2018-06-28 17:28:28 [ localhost-startStop-1:1039 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/mongodb-context.xml]
2018-06-28 17:28:28 [ localhost-startStop-1:1382 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-06-28 17:28:28 [ localhost-startStop-1:1479 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-cache.xml]
2018-06-28 17:28:29 [ localhost-startStop-1:2064 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mvc.xml]
2018-06-28 17:28:29 [ localhost-startStop-1:2264 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:29 [ localhost-startStop-1:2267 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:29 [ localhost-startStop-1:2268 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:29 [ localhost-startStop-1:2272 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-mybatis.xml]
2018-06-28 17:28:29 [ localhost-startStop-1:2308 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-redis.xml]
2018-06-28 17:28:29 [ localhost-startStop-1:2372 ] - [ INFO ] Loading XML bean definitions from file [D:\workspace\financialSystem\src\main\webapp\WEB-INF\classes\spring\spring-shiro.xml]
2018-06-28 17:28:30 [ localhost-startStop-1:3249 ] - [ WARN ] Skipping MapperFactoryBean with name 'businessDataDao' and 'cn.financial.dao.BusinessDataDao' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'capitalDao' and 'cn.financial.dao.CapitalDao' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'dataModuleDao' and 'cn.financial.dao.DataModuleDao' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'messageDAO' and 'cn.financial.dao.MessageDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationDAO' and 'cn.financial.dao.OrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'organizationMoveDao' and 'cn.financial.dao.OrganizationMoveDao' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3250 ] - [ WARN ] Skipping MapperFactoryBean with name 'resourceDAO' and 'cn.financial.dao.ResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleDAO' and 'cn.financial.dao.RoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] Skipping MapperFactoryBean with name 'roleResourceDAO' and 'cn.financial.dao.RoleResourceDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] Skipping MapperFactoryBean with name 'userDAO' and 'cn.financial.dao.UserDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] Skipping MapperFactoryBean with name 'userOrganizationDAO' and 'cn.financial.dao.UserOrganizationDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] Skipping MapperFactoryBean with name 'userRoleDAO' and 'cn.financial.dao.UserRoleDAO' mapperInterface. Bean already defined with the same name!
2018-06-28 17:28:30 [ localhost-startStop-1:3251 ] - [ WARN ] No MyBatis mapper was found in '[cn.financial.dao]' package. Please check your configuration.
2018-06-28 17:28:30 [ localhost-startStop-1:3497 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 17:28:31 [ localhost-startStop-1:4749 ] - [ INFO ] Bean 'org.springframework.beans.factory.config.MethodInvokingFactoryBean#0' of type [org.springframework.beans.factory.config.MethodInvokingFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:32 [ localhost-startStop-1:5158 ] - [ ERROR ] maxIdle is deprecated
2018-06-28 17:28:32 [ localhost-startStop-1:5771 ] - [ INFO ] {dataSource-1} inited
2018-06-28 17:28:32 [ localhost-startStop-1:5771 ] - [ INFO ] Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6711 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6717 ] - [ INFO ] Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6737 ] - [ INFO ] Bean 'businessDataDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6741 ] - [ INFO ] Bean 'capitalDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6747 ] - [ INFO ] Bean 'dataModuleDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6751 ] - [ INFO ] Bean 'messageDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6756 ] - [ INFO ] Bean 'organizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6760 ] - [ INFO ] Bean 'organizationMoveDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6776 ] - [ INFO ] Bean 'resourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6779 ] - [ INFO ] Bean 'roleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6785 ] - [ INFO ] Bean 'roleResourceDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6790 ] - [ INFO ] Bean 'userDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6797 ] - [ INFO ] Bean 'userOrganizationDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6803 ] - [ INFO ] Bean 'userRoleDAO' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6828 ] - [ INFO ] Bean 'userDAO' of type [com.sun.proxy.$Proxy31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6849 ] - [ INFO ] Bean 'userRoleDAO' of type [com.sun.proxy.$Proxy33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6854 ] - [ INFO ] Bean 'roleResourceDAO' of type [com.sun.proxy.$Proxy34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6883 ] - [ INFO ] Bean 'passwordHelper' of type [cn.financial.util.shiro.PasswordHelper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:33 [ localhost-startStop-1:6892 ] - [ INFO ] Bean 'UserServiceImpl' of type [cn.financial.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7010 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 17:28:34 [ localhost-startStop-1:7295 ] - [ INFO ] Bean 'ehcacheManager' of type [org.springframework.cache.ehcache.EhCacheManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7307 ] - [ INFO ] Bean 'ehcacheManager' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7315 ] - [ INFO ] Bean 'springCacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7320 ] - [ INFO ] Bean 'cacheManager' of type [cn.financial.util.shiro.SpringCacheManagerWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7475 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#2a1f37bf' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7948 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#480aae15' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7951 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#73db6cfa' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7955 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer#114b62e' of type [org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:34 [ localhost-startStop-1:7958 ] - [ INFO ] Bean 'org.springframework.data.redis.serializer.StringRedisSerializer#52e5db7c' of type [org.springframework.data.redis.serializer.StringRedisSerializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8039 ] - [ INFO ] Bean 'poolConfig' of type [redis.clients.jedis.JedisPoolConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8079 ] - [ INFO ] Bean 'jedisConnectionFactory' of type [org.springframework.data.redis.connection.jedis.JedisConnectionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8103 ] - [ INFO ] Bean 'apiRedisTemplate' of type [org.springframework.data.redis.core.RedisTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8112 ] - [ INFO ] Bean 'credentialsMatcher' of type [cn.financial.util.shiro.RetryLimitHashedCredentialsMatcher] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8118 ] - [ INFO ] Bean 'userRealm' of type [cn.financial.util.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8245 ] - [ INFO ] Bean 'sessionValidationScheduler' of type [org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8312 ] - [ INFO ] Bean 'sessionIdGenerator' of type [org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8316 ] - [ INFO ] Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8342 ] - [ INFO ] Bean 'sessionIdCookie' of type [org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8345 ] - [ INFO ] Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8353 ] - [ INFO ] Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8359 ] - [ INFO ] Bean 'org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor#0' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8611 ] - [ INFO ] Bean 'formAuthenticationFilter' of type [org.apache.shiro.web.filter.authc.FormAuthenticationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8774 ] - [ INFO ] Bean 'sysUserFilter' of type [cn.financial.util.shiro.SysUserFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8812 ] - [ INFO ] Bean 'util:map#14ca0dbd' of type [org.springframework.beans.factory.config.MapFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:35 [ localhost-startStop-1:8820 ] - [ INFO ] Bean 'util:map#14ca0dbd' of type [java.util.LinkedHashMap] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-06-28 17:28:44 [ localhost-startStop-1:17785 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17789 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 17:28:44 [ localhost-startStop-1:17792 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17793 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17794 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 17:28:44 [ localhost-startStop-1:17800 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17803 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17809 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 17:28:44 [ localhost-startStop-1:17811 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 17:28:44 [ localhost-startStop-1:17813 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17814 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17815 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17816 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17828 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17842 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17846 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17849 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 17:28:44 [ localhost-startStop-1:17851 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 17:28:44 [ localhost-startStop-1:17852 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17853 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 17:28:44 [ localhost-startStop-1:17859 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17860 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17860 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17861 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:44 [ localhost-startStop-1:17862 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17868 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17871 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17872 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17875 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17882 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17882 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17884 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17886 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17890 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17891 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17892 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17892 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17894 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17910 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17910 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17912 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
2018-06-28 17:28:44 [ localhost-startStop-1:17955 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17956 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17956 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17957 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17957 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17963 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17964 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17965 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17966 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17966 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17967 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17967 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:44 [ localhost-startStop-1:17968 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:46 [ localhost-startStop-1:19091 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 17:28:27 CST 2018]; root of context hierarchy
2018-06-28 17:28:46 [ localhost-startStop-1:19864 ] - [ INFO ] Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Thu Jun 28 17:28:27 CST 2018]; root of context hierarchy
2018-06-28 17:28:48 [ localhost-startStop-1:21914 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 17:28:49 [ localhost-startStop-1:22875 ] - [ INFO ] Root WebApplicationContext: initialization completed in 22874 ms
2018-06-28 17:28:49 [ localhost-startStop-1:22966 ] - [ INFO ] Job execution threads will use class loader of thread: localhost-startStop-1
2018-06-28 17:28:50 [ localhost-startStop-1:23044 ] - [ INFO ] Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-06-28 17:28:50 [ localhost-startStop-1:23047 ] - [ INFO ] Quartz Scheduler v.1.6.1 created.
2018-06-28 17:28:50 [ localhost-startStop-1:23053 ] - [ INFO ] RAMJobStore initialized.
2018-06-28 17:28:50 [ localhost-startStop-1:23053 ] - [ INFO ] Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2018-06-28 17:28:50 [ localhost-startStop-1:23054 ] - [ INFO ] Quartz scheduler version: 1.6.1
2018-06-28 17:28:50 [ localhost-startStop-1:23499 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 17:28:50 [ localhost-startStop-1:23502 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 17:28:50 [ localhost-startStop-1:23508 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 17:28:50 [ localhost-startStop-1:23742 ] - [ INFO ] FrameworkServlet 'spring': initialization started
2018-06-28 17:28:50 [ localhost-startStop-1:23745 ] - [ INFO ] Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 17:28:50 CST 2018]; parent: Root WebApplicationContext
2018-06-28 17:28:50 [ localhost-startStop-1:23745 ] - [ INFO ] Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-06-28 17:28:50 [ localhost-startStop-1:23893 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:50 [ localhost-startStop-1:23894 ] - [ INFO ] Overriding bean definition for bean 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:50 [ localhost-startStop-1:23894 ] - [ INFO ] Overriding bean definition for bean 'mvcUriComponentsContributor' with a different definition: replacing [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser$CompositeUriComponentsContributorFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2018-06-28 17:28:50 [ localhost-startStop-1:23976 ] - [ INFO ] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-06-28 17:28:51 [ localhost-startStop-1:24379 ] - [ INFO ] Mapped "{[/businessData/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.listBusinessDataBy(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24381 ] - [ INFO ] Mapped "{[/businessData/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.insertBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 17:28:51 [ localhost-startStop-1:24382 ] - [ INFO ] Mapped "{[/businessData/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.selectBusinessDataById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24382 ] - [ INFO ] Mapped "{[/businessData/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.BusinessDataController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24382 ] - [ INFO ] Mapped "{[/businessData/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.BusinessDataController.updateBusinessData(javax.servlet.http.HttpServletRequest,cn.financial.model.BusinessData)
2018-06-28 17:28:51 [ localhost-startStop-1:24385 ] - [ INFO ] Mapped "{[/capital/listById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.selectCapitalById(javax.servlet.http.HttpServletRequest,java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24385 ] - [ INFO ] Mapped "{[/capital/delete],methods=[POST]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.CapitalController.deleteOrganization(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24386 ] - [ INFO ] Mapped "{[/capital/export],methods=[POST]}" onto public void cn.financial.controller.CapitalController.export(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-06-28 17:28:51 [ localhost-startStop-1:24386 ] - [ INFO ] Mapped "{[/capital/excelImport],methods=[POST]}" onto public void cn.financial.controller.CapitalController.excelImport(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.io.IOException
2018-06-28 17:28:51 [ localhost-startStop-1:24386 ] - [ INFO ] Mapped "{[/capital/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.listCapitalBy(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24387 ] - [ INFO ] Mapped "{[/capital/excel],methods=[GET]}" onto public java.lang.String cn.financial.controller.CapitalController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24389 ] - [ INFO ] Mapped "{[/capital/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.updateCapital(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24389 ] - [ INFO ] Mapped "{[/capital/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.CapitalController.insertCapital(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24391 ] - [ INFO ] Mapped "{[/dataModule/getNewestDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getNewestDataModule(java.lang.String,java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24393 ] - [ INFO ] Mapped "{[/dataModule/getDataModule]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.getDataModule(java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24398 ] - [ INFO ] Mapped "{[/dataModule/dataModuleList],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.DataModuleController.listDataModule(java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24399 ] - [ INFO ] Mapped "{[/login],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.login(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession)
2018-06-28 17:28:51 [ localhost-startStop-1:24400 ] - [ INFO ] Mapped "{[/logout],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MainController.logout()
2018-06-28 17:28:51 [ localhost-startStop-1:24400 ] - [ INFO ] Mapped "{[/subLogin],produces=[application/json;charset=utf-8]}" onto public java.lang.String cn.financial.controller.MainController.getexcel(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24401 ] - [ INFO ] Mapped "{[/mongoDB/queryDatas]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.MongoDBController.queryNetWorks(java.lang.String)
2018-06-28 17:28:51 [ localhost-startStop-1:24403 ] - [ INFO ] Mapped "{[/organization/updatebyid]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.updateOrganizationById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24404 ] - [ INFO ] Mapped "{[/organization/hasSon]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.hasOrganizationSon(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24406 ] - [ INFO ] Mapped "{[/organization/listBy]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.listOrganizationBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24407 ] - [ INFO ] Mapped "{[/organization/deletebycascade]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.deleteOrganizationByStatusCascade(javax.servlet.http.HttpServletRequest)
2018-06-28 17:28:51 [ localhost-startStop-1:24408 ] - [ INFO ] Mapped "{[/organization/save]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationController.saveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24409 ] - [ INFO ] Mapped "{[/organization/getsubnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getSubnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24409 ] - [ INFO ] Mapped "{[/organization/move]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.moveOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24410 ] - [ INFO ] Mapped "{[/organization/getparnode]}" onto public java.util.Map<java.lang.Object, java.lang.Object> cn.financial.controller.OrganizationController.getParnode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24411 ] - [ INFO ] Mapped "{[/organizationMove/listBy],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.OrganizationMoveController.listOrganizationMoveBy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24415 ] - [ INFO ] Mapped "{[/resource/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.updateResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24417 ] - [ INFO ] Mapped "{[/resource/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.insertResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24421 ] - [ INFO ] Mapped "{[/resource/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.listResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24423 ] - [ INFO ] Mapped "{[/resource/resourceById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.ResourceController.getResourceById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24426 ] - [ INFO ] Mapped "{[/role/roleResourceInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24431 ] - [ INFO ] Mapped "{[/role/roleResourceUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24432 ] - [ INFO ] Mapped "{[/role/roleResourceIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRoleResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24432 ] - [ INFO ] Mapped "{[/role/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.listRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24433 ] - [ INFO ] Mapped "{[/role/roleById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.getRoleById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24434 ] - [ INFO ] Mapped "{[/role/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.insertRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24434 ] - [ INFO ] Mapped "{[/role/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.RoleController.updateRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24436 ] - [ INFO ] Mapped "{[/statistic/staticJson]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.StatisticJsonController.staticJson(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)
2018-06-28 17:28:51 [ localhost-startStop-1:24444 ] - [ INFO ] Mapped "{[/user/userOrganizationInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24446 ] - [ INFO ] Mapped "{[/user/userOrganizationIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24449 ] - [ INFO ] Mapped "{[/user/userOrganizationUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserOrganization(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24451 ] - [ INFO ] Mapped "{[/user/userRoleIndex],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24454 ] - [ INFO ] Mapped "{[/user/userRoleUpdate],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24462 ] - [ INFO ] Mapped "{[/user/index],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.listUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24464 ] - [ INFO ] Mapped "{[/user/delete],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.deleteUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24465 ] - [ INFO ] Mapped "{[/user/userById],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserById(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24466 ] - [ INFO ] Mapped "{[/user/passWord],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.getUserPwd(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24467 ] - [ INFO ] Mapped "{[/user/insert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24467 ] - [ INFO ] Mapped "{[/user/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.resetUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24469 ] - [ INFO ] Mapped "{[/user/update],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.updateUser(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:51 [ localhost-startStop-1:24469 ] - [ INFO ] Mapped "{[/user/userRoleInsert],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.financial.controller.UserController.insertUserRole(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-28 17:28:52 [ localhost-startStop-1:25042 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 17:28:50 CST 2018]; parent: Root WebApplicationContext
2018-06-28 17:28:52 [ localhost-startStop-1:25674 ] - [ INFO ] Looking for @ControllerAdvice: WebApplicationContext for namespace 'spring-servlet': startup date [Thu Jun 28 17:28:50 CST 2018]; parent: Root WebApplicationContext
2018-06-28 17:28:53 [ localhost-startStop-1:26891 ] - [ INFO ] Initializing EhCache CacheManager
2018-06-28 17:28:53 [ localhost-startStop-1:26942 ] - [ INFO ] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-06-28 17:28:54 [ localhost-startStop-1:27472 ] - [ INFO ] FrameworkServlet 'spring': initialization completed in 3730 ms
2018-06-28 17:29:30 [ http-bio-8080-exec-1:63036 ] - [ INFO ] Enabling session validation scheduler...
2018-06-28 17:29:30 [ http-bio-8080-exec-1:63040 ] - [ INFO ] Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2018-06-28 17:29:30 [ DefaultQuartzScheduler_Worker-1:63051 ] - [ INFO ] Validating all active sessions...
2018-06-28 17:29:30 [ DefaultQuartzScheduler_Worker-1:63061 ] - [ INFO ] Finished session validation.  No sessions were stopped.
2018-06-28 17:29:30 [ http-bio-8080-exec-1:63087 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/subLogin?
2018-06-28 17:29:37 [ http-bio-8080-exec-2:70130 ] - [ INFO ] 前端请求参数: http://localhost:8080/financialSys/login?username=aa&password=...5aA&
